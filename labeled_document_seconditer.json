{
    "Comment": [
        "`retainAll()` is a method of `Collection`. An array is not a `Collection`.",
        "Code note: You can shorten code like: `if ($(this).attr(COLUMN_TITLE)) process.title = $(this).attr(COLUMN_TITLE);` to just `process.title = $(this).attr(COLUMN_TITLE) || process.title` and drop all the ifs. Some of the more complex operations need to be different, but for the simple *check and assign* this may help :)",
        "thank you for your note...",
        "You actually have a number of problems with the code shown. I have outlined some alternative suggestions below, but you need to fix the basic problems too (like you are not returning results from your functions, but have written the code to expect return values!)",
        "You should not offer financial rewards on SO (edited out). Instead, start trying the suggestions below and feedback where your remaining problems are :)",
        "dear   TrueBlueAussie... I am still testing your solutions. I will response to you once I am done with the test. however, I appreciate your answer and support, and I hope this will help me...",
        "in getCount() ?",
        "Could you show us the code?",
        "Please supply any code, logic and processes you've followed to achieve this and we can suggest where you might improve or investigate. Firstly being how would you, mathematically, achieve what you want to do?",
        "As a hint: just find all possible subsets and put them in both buckets. For example \"A - BC\" is the same as \"BC - A\" just the parts are in different buckets. No need to calculate that specific subset twice.",
        "Format the code please and show expected output",
        "We are not a code writing service! Show us what you tried; What output you get and what you would expect it to be!",
        "http://jsfiddle.net/arunpjohny/myrvvxcj/1/",
        "This code is completely unreadable without proper indentation of all your if/else blocks and, in fact, if you do proper indentation, it will be easy to see where your errors are.",
        "You have two extra `}`, one after the end of each `else { }` block. *edit*, sorry, just one. The first one. INDENT CODE CAREFULLY!",
        "After fixing your indentation, it should be obvious what the issue is.",
        "http://jsfiddle.net/arunpjohny/myrvvxcj/3/",
        "`console.printline()`, Nice one.",
        "http://stackoverflow.com/a/27500560/3901618",
        "http://www.codeproject.com/Articles/1445/Introduction-to-inheritance-polymorphism-in-C",
        "Thanks Toumash for the good code. Moderators, could you please remove the duplicate tag for this question. The new title I believe exactly focuses the topic which is not explicitly asked or answered.. Thanks!",
        "This question appears to be off-topic because it is implying   _\"Please write my code for me.\"_  [On-topic Reference](http://stackoverflow.com/help/on-topic)",
        "Welcome to Stack Overflow! Please take the [tour](http://stackoverflow.com/tour) and read [How to Ask](http://stackoverflow.com/help/how-to-ask) to learn what we expect from questions. Please be aware that we do not provide _from-scratch_ coding service here. :-) Please show us what you've tried so far and where you're stuck.",
        "[sleep](http://linux.die.net/man/3/sleep)? You haven't actually explained your problem very clearly. Too many unknowns on the requirements of what your desired solution is.",
        "you can not compare date as a string. you need to convert date string in Date object.",
        "I can't see any error. can you put logcat text here",
        "make category.png instead of category.PNG",
        "extension must also be in lowercase",
        "@Nilesh Thank you. It works.",
        "@Rustam Thank you. It works.",
        "What programming language is the referring to?",
        "What language are you using ?",
        "see the question.updated with c# lang",
        "http://stackoverflow.com/questions/8987141/how-to-change-1-char-in-the-string",
        "I think you must search a little bit more on stack before doing this question. The String.Replace will help you with your problem.",
        "You have the date fields being stored as a `VARCHAR`...?",
        "Date fields are stored as Int.",
        "Please see: http://stackoverflow.com/help/how-to-ask",
        "I pass BDate as DATETIME . I want to use this BDate to populate 4 fields of type int with counts for number of birthdays in each quarter",
        "Please read the link supplied by Christian Barron, then comeback and edit your question to include sample data, expected output, the SQL that you have tried to calculate what you need it to be and what you are having problems with regarding that SQL.",
        "Title! \"Syntax Error\" is very vauge!",
        "You are missing a closing `)` on the line above",
        "@JamesMills Ironically, actually the title is a \"snytax\" error lol. At least they're consistent!",
        "@Cyber: Of course. Someone stole the [original error description](https://stackoverflow.com/questions/17581532/python-syntax-error) for their title! :O",
        "@Cyber Yes I know! But how many SO questions have the same damn title? :)",
        "Oh I completely agree the title is useless, I just found it funny that they had a typo in a question that was caused by a typo in the first place",
        "what's with `***points***` on line 5?",
        "I'm voting to close as this error was caused by a simple typographical error.",
        "Well done guys :)",
        "If \"it is very urgent\", you could have done a better job with your question, that required quite a bit of editing to make it at least a bit presentable. Also if you get an exception, **any information on it is relevant**. Like the full message and stack trace. Please refer to [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask) and more specifically [How to create a Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) and [edit] your question accordingly, if you want to have a better chance of getting an answer that helps you.",
        "You will find that an XPath expression directly targeting the row you need will be the better option here. It will cut down on the amount of looping and iterating you'll need to do.",
        "To add to what Alex said, if you've previously shared code related to this and you're not going to post it here, at least a link to the previous question would be helpful.",
        "What class do you mean? `ObsColDoor<T>` already has `GetEnumerator`, since it is inherited from `ObservableCollection<T>`.",
        "Still I get: \"foreach statement cannot operate on variables of type '.IObsColDoor' because 'IObsColDoor' does not contain a public definition for 'GetEnumerator'\"",
        "ooo, hold on: I'm confusing type IObsColDoor<T> and type T...",
        "Are you sure that's your actual regex?  [regex101 seems to think it's fine](https://regex101.com/r/xZ3bZ1/1).",
        "I'm not an expert on javascript, but I think you need to put your regex in quotes based on http://www.w3schools.com/jsref/jsref_replace.asp",
        "That can\u2019t be real code, your round brackets don\u2019t make sense. (And once that\u2019s fixed, the code doesn\u2019t throw any errors.)",
        "@soong `/.../` is the syntax for an inline regular expression.",
        "The regex `/^.+?(?=\\+)/` does not produce the error described in the question.",
        "@JamesThorpe ah, good to know!",
        "works here:  http://jsfiddle.net/ejjyn9fm/1/",
        "Are you sure that's the problem? The partial line above -- partial because there's an extra `, \"i\")` at the end -- is fine once the extra parts are removed. Can you include the actual, intact code producing the error?",
        "I vote to close, since this code does not produce the error described.",
        "It's *really* unclear what you're asking here. \"Suppose something impossible were possible - how would that work?\" isn't a good starting point.",
        "Proper way of writing static methods is NOT to depend on a instance's attributes. And the static method DOES NEVER know anything about any object as long as thos object  is NOT passed in as argument durin the call.\nUtility classes  for example, take sometimes \"out\" or \"ref\" typed arguments, making it possible to be changed by the static method.",
        "@icbytes, and anyone using `out` or `ref` with static methods should be shot foe gross crimes against software.",
        "What about the Math class ? And other static classes offering this ?",
        "Tried anything?",
        "This is not a wish machine.",
        "That's nice. Good luck finding one. Did you have a question?",
        "This is insanely easy, google regex or browse for a small tutorial.",
        "@ anubhava Yes i have tried this Hello(\\s|\\/|)World it matches every thing except \"Hello\", \"World\" individually",
        "Why do you care about memory allocation? What is your question?",
        "There is plenty of information available regarding the java memory model, on this site and elsewhere. Please read that and show some research effort before asking fundamental questions.",
        "Only `new` allocates memory on the heap, a new object. Variables hold a kind of pointer (4 bytes) referencing that heap object. hence a1 and a2 share the single object.",
        "@LutzHorn horn how is the referencing being done \ni mean in c++ we create a pointer variable to store an address so basically we have a memory slot to store address\nwhere as here without any memory being allocated how is the referencing being done actually!!",
        "@selfish memory is always allocated whenever you declare a variable (read references) or create and object using `new` keyword.",
        "but isnt it different in case of object - that we require to use new keyword before getting memory allocated for the object",
        "Yes, that's how Java was designed to work.",
        "Check this out: http://programmers.stackexchange.com/questions/141834/how-is-a-java-reference-different-from-a-c-pointer",
        "Please update your questions with more details. Table structure, complete error message, code,...\nhttp://stackoverflow.com/help/how-to-ask",
        "Please post the structure of your user table, it sounds like there is no screen_name column in it",
        "Not an answer, or simply conflicting with the questions specifications.",
        "<Person Age=\"29\"> would have an attribute Age of \"29\". Your case doesn't, the child elements aren't attributes.",
        "Aside, but do yourself a favour and and investigate XDocument.",
        "You're missing a `)` at the end of your second `if`.",
        "duplicate: http://stackoverflow.com/q/18050071/3933332",
        "Thanks, I can't believe I missed something so obvious. That link has been added to my book marks",
        "What specifically would you like help with?",
        "Indeed - there's no actual *question* asked here...",
        "@YuvalItzchakov: That compiles... why did you think it wouldn't? It's an array of sequences of integers...",
        "What specific problem do you have? It is a rather simple assignment. Which point is hard for you to plan or implement?",
        "<irony>return new int[] { 2, 3, 5, 7, 2, 3, 5, 7, 2, 3, 5, 7 }</irony>",
        "@JonSkeet Oh, it's an array of enumerables. My bad.",
        "@DmitriTsoy, the *perfect* TDD answer! :)",
        "Method body: `return ebles.SelectMany(i => i);`",
        "Some indentation and maybe an empty line between blocks might make the code more readable, as well as better variable names. And I sure hope you're not inputting `10` as the number of processes.",
        "Please clarify our problem. What do you need help with?",
        "Always take some time to properly format your code and make sure it is clearly understandable. We are happy to help, but our time is limited and surely nobody will waste it trying to make sense of a messy bowl of spaghetti. I did it for you, be careful next time.",
        "Time to hire a consultant/mentor.",
        "Post the crash logs.",
        "I think it should be webservice not php or may be you can say web services which is implemented in PHP.",
        "I think you have to make custom Adapter for your problem by extending class with `ArrayAdapter<FoodStores>`.",
        "if any of the below answers satisfy your query, please mark it as accepted.",
        "`System.out.print( str.charAt(i-1)+\"and\"+str.charAt(i+1));`",
        "I'm voting to close this question as off-topic because it's outside the scope defined within the [help centre](http://stackoverflow.com/help/on-topic).",
        "Whats the value of `txtTShirtQty.Text`? And what is ``ProductClass`? Are your properties properly setup for both `get` and `set`?",
        "At a guess, it'll be because `txtTShirtQty.Text` contains `0`.",
        "The quantity of  txtTshirtQty.Text is user input. I'll add the ProductClass.",
        "As an aside, why do you use `Int16.Parse`? **1.** `ProductCode.productQty` is declared as `int`, not as `short`; so `int.Parse` would be the more logical choice. **2.** You've already done the parsing once: just use the value of `intOutput` instead of parsing a second time.",
        "I will look at this closer. It would not parse any other way. I used the Int16 because I knew the number would not be large. I forgot I could declare it as a short",
        "Can you share your current code?",
        "What's the definition of \"*first string in a file*\"? Since a string is any sequence of characters, that is ill defined.",
        "Are there always all the files from 0-100 present? If so, what's the problem with just iterating them in order? Otherwise, instead of using lists, wouldn't it be better to use dictionaries `{file_number: string}`?",
        "If some body  dose not answer i don't why they are down voting. please tell me the reason iam new here",
        "what have you tried? where is your code? which is your currency? [please refer here](http://stackoverflow.com/help/how-to-ask)",
        "If PayPal doesn't support your currency you can't use it in your application. Either use a different currency or a different payment processor.",
        "@HoboSapiens According to my scenario when total amount of my currency come i convert my amount to equal amount of dollar and pass this amount to Paypal its work , So What i want is simply currency  converter which give me current rate of.",
        "could you be a bit more specific, on what you are trying to do? I don't see any tree-like structures in your data, and I don't know what you mean by \"keeping state as the root element\"",
        "@maze-le In my case, I see the case clearly",
        "@nisa Welcome to SO. I've edited your question so other might be able to understand your issue in a better way. Am I correct with my edit? Is this what you're looking for (see my answer too)?",
        "@nisa This time someone (me) has edited your question. Next time try to be more concise or ellaborate better your questions :)",
        "If you were able to Google to find the wikipedia page, I am sure you can find an example online. This seems like a basic interview or home work question.",
        "like i saw the puesducode for it, but i didn't understand it that well, so im asking if you guys can simiplify the idea litle bit.",
        ".. and what are you having trouble with.  I assume you have attempted to google this first.",
        "[This](https://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html) is the first result when I google \"How to output java date format as 060115\". Everything you need to know is there. Please use Google or search first. If you have some code and it isn't working please add it to the question through an edit.",
        "`if (basename(__FILE__); == xxx.php)` huh? why is that semi-colon in there, in the question title, is that part of the real code? If so, that's an end of execution character statement.",
        "@Fred-ii- sorry about that you can see the original code in the first code block",
        "Adding `echo basename(__FILE__);` to the script might be helpful.",
        "Have you tried anything? Please show your code.",
        "Not entirely sure what you are asking, but did you look at the official manual?",
        "Have a look over [http://php.net/manual/en/language.oop5.visibility.php](http://php.net/manual/en/language.oop5.visibility.php)",
        "Which part are you able to write? Are you able to write a Python function that obtains a parameter and displays it? What's missing then?",
        "Do you have to use recursion?",
        "Your code makes no sense. Why are you taking a date `otherDate`, turning it into a string, and then turning it back into a date?",
        "I am receiving the some past XXXXX date from server. Using that date and my current date, i am calculating the how many days back the question is posted. Other date is current date.",
        "No, you're not. All you are doing is trying to turn a date into a string and right back into a date. Moreover, that is not how you do date math. If you want to know the difference in days between two dates, do not use NSDateFormatter at all - do date math.",
        "NSString *temp = [outputDateFormatter stringFromDate:otherDate];\notherDate = [outputDateFormatter dateFromString:temp];                      Sorry, Forget about the last two lines. Those are unnecessary lines.",
        "It doesn't matter. I repeat, to do date math you should not be using NSDateFormatter at all. The only thing you need NSDateFormatter for is to turn the date string from the server into a date.",
        "Can you suggest me what to do exactly. I want to convert server time (UTC) to my current device based time.",
        "You do not need to convert any times. An NSDate is an NSDate.",
        "In other words, just do the first part of your code _and stop_. You now have the date. Now do date math.",
        "This might be *a* way to fix them, but it certainly isn't the only way.",
        "I managed to fix a similar problem without doing git clone and starting again, which meant that I kept my branches and commits. See my answer http://stackoverflow.com/a/30872027/1737957",
        "you could achieve the same thing by replacing the `for` loop with `out = ' + '.join(sentences[:n])`",
        "Yes, I could but I won't. I don't like that.",
        "mescalinum is right, the foor loop is bad form, bad style, and results in an incorrect string that has to be chopped off when printing.  That would be a great improvement, even though using `random.sample` is still superior.",
        "`onCreate()` is fine but it depends what you need. Just make sure it is after `setContentView()` or they will return null. Since you are starting out, I would stick with that until you understand the framework better.",
        "as rule of thumb, always after `setContentView`, and the method's call has to be in a method.",
        "entry[-4].values[0].value",
        "Hi there @nuffsaid - it looks to me like you are just starting your adventures with JavaScript. I would recommend going over some starter tutorials; They cover the basics such as how to work with objects.",
        "Awesome, thx alot :)",
        "Use another browser than IE?",
        "It's browser controlled. You could just have a custom alert made with JavaScript and CSS that will block the current tab (not that it's even possible to block the entire browser).",
        "1. You did not allocate memory for your integers. 2. *marks[4] is out of bounds. 3. Do you really need a dynamic array for this?",
        "You should make that an answer",
        "Nothing specific for any of all these removed tags now.",
        "@GlennTeitelbaum For which question actually?",
        "The same way you accept any other parameter.",
        "Start with [the tutorial](https://docs.python.org/3/tutorial/index.html).",
        "remove ;  of for loop",
        "wrong place \";\" in for def---  and what is your input?",
        "You should be getting some output. At least \"z\" :D. But really, other comments already got it.",
        "Actually, @m4ktub, not `z` but `{`, because `z` still falls within the loop condition.",
        "@RealSkeptic You're right, off course. Thanks. I just wanted to make a joke; that's what I get.",
        "This is not detecting a change of content in a span which is what the question is.",
        "[DEMO](http://ideone.com/cFlURB) showing it working",
        "Stack Overflow Driven Development",
        "Please try harder to post your code in your question; it is not hard. Also give a more appropriate title.",
        "Include your code here, as per the rules, rather than posting links to sites which will eventually die.",
        "Finally made the post. Sorry for linking other sites.",
        "how user could select the value?",
        "this is my html for the test [link] (http://creami.altervista.org/) does not look at the table little , love going in the user enters the values \u200b\u200bin the table then the price according to the total number , meaning if any table contains 100 pieces will have the price for 100",
        "not clear what you want to reach. I presented you the if statement, the buisness login is on your side",
        "You have some serious formatting issues with your post.  And lots of CAPS.  Please reformat.",
        "Ouch, my ears... Why do you have to scream?",
        "please format that code properly, include further information regarding the error, what the full error message is and at what line it occurs. In general you should include some text in the body of the question, not only in the title.",
        "Please ask a question in addition to posting code.",
        "Just compile it and you know...",
        "You have a problem with scope. Remove the inner block braces and try again.",
        "Hello and welcome to StackOverflow. Please take some time to read the help page, especially the sections named [\"What topics can I ask about here?\"](http://stackoverflow.com/help/on-topic) and [\"What types of questions should I avoid asking?\"](http://stackoverflow.com/help/dont-ask). And more importantly, please read [the Stack Overflow question checklist](http://meta.stackexchange.com/q/156810/204922). You might also want to learn about [Minimal, Complete, and Verifiable Examples](http://stackoverflow.com/help/mcve).",
        "What does not \"works fine\" mean?",
        "Mayhap the video file is too big? - Check your error logs",
        "It's very unclear task. Please specify what kind of files you are triing to upload",
        "to answer your question in the way you ask it ... let the user save the \"video\" as file and then you will see, it works for \"video\" too",
        "There's no relation between your code and youtube",
        "when i try to upload mp4 file,browser shows me snap error",
        "i want to store youtube video..how would i do it",
        "how about trying this-> download a video of less than 2 MB, and check if it is uploaded?",
        "@rakesh shewale it worked for 2mb file thanks,bt if user want to upload online video,what changes should i do in code",
        "I suggest you to ask another question for the that. For your current question, I will post an answer",
        "Go through the documentation. Check the `Auth` component.",
        "Err. So, *what's your question*?",
        "did you try https://docs.python.org/2/library/tkinter.html?",
        "I did not, thank you.",
        "Did you try Googling \"python gui\"?",
        "And this was compiled -O what with what other command options?  BTW, a 2% increase in memory usage speed is wiped out by the fact you are using a O(N^2) sort...",
        "Have you tried different optimization options?",
        "That's `-O0` code. Even on `-O1` that whole function compiles to 21 instructions (using a Linaro 13.11 build of GCC 4.8.3). In my experience, if you mention anything about how stupid unoptimised assembly output looks to a GCC engineer, you get the response \"well, what did you expect?\" and a withering stare of disapproval.",
        "...not to mention, as Michael points out, the hilariously laughable exercise of optimizing a bubblesort. Like putting a spoiler on a golf cart.",
        "I didn't try different optimization options. I'll try later. Thank you.",
        "Please construct a [minimal test-case](http://stackoverflow.com/help/mcve).",
        "Check if the argument of `sqrt` is not negative.",
        "As an aside instead of using those macros why not just write real functions perhaps with `constexpr`? And I'd use `abs` instead of the `MOD` macro.",
        "@AlexD - SQUARE of sum of Two numbers is always non negative I guess! And I am trying to improve",
        "@ShubhamSharma `SQUARE(x)  (x*x)` should be `SQUARE(x)  ((x)*(x))`, if you really want defines.",
        "Ok , please vote to close !",
        "Obviously not what the OP was asking for, and even this code could be improved to the extent where it is just one line (no loops), i.e. `return a.toLowerCase().indexOf('b')!=-1`",
        "Variable 'counter' isn't even used...",
        "try to compile it and see for yourself.",
        "`ctr =+ 1` is `ctr = +1`, e.g. positive one, not `add one to ctr`.",
        "It is not an \"equal sign\", it is the *assignment operator*.  In Java the \"equals sign\" is \"==\", as use for boolean and logical statements.",
        "Those are two different operations.",
        "You are closing the String at index 5. If you want to have the '\"' character in your string, you need to escape it.",
        "Your string is `\"(lp+\"` and there it ends. The rest - `(\\\\w+...` does not belong to the string anymore",
        "Sorry,I didn't get you exactly",
        "`^[A-Z\\d]+$` ..... Post some valid and invalid examples.",
        "What language? `Following characters excluded anywhere ` so every other character is allowed? Sounded like only uppercase letters and numbers were allowed. Sample input, expected output, and issues you've encountered would help this question.",
        "Any character not listed is allowed. Can be anywhere in the string.",
        "try `^[A-Z\\d\\s-]+$`",
        "You're going to have to give a lot more information to get help.",
        "Try posting your code for starters.",
        "can you post your code and error what you are getting. I think you are not written public static void main(String args[]) method this is the main method which is executed first means execution starts from here only..",
        "That's because java programs have to have a main method.  It's likely that BlueJ allows you to run snippets of code instead of forcing you to write an entire program.",
        "`BlueJ` probably wraps your code in a `main` method...In `Java` you need a `main` method to run code...",
        "\u201cI am new to java and programming\u201c is not a good headline. Try something more declarative, e.g. something with main, BlueJ and Eclipse.",
        "you missed `;` in `require 'test.php'`. try `require 'test.php';`",
        "In addition, use an IDE. It will solve half of these syntax errors. I mean it wont solve it for you, but it will highlight it for you.",
        "you could sprit your string into characters, xor each individual character, and then combine them into new string",
        "Thanks sir. How can I split the characters? please tell the code.",
        "Just `for(char c: pass) { ... }`",
        "it will be something like `for (int i = 0; i<x.length;i++) {newPass+= x[i]^enc[i%enc.length]; }`",
        "Please, explain yourself better. What do you mean when you say a \"downloaded project\", or \"a fresh project\"?",
        "It's not clear what you are asking - what are you seeing and what do you expect to see?",
        "web080 - I have downloaded a project and I want to be sure that client dont let know I have downloaded.. Tell me first how will you get to know if the project is downloaded or not...?",
        "Charloe Scott - I have a project which is downloaded. And my client should not get to know that i have downloaded this project... are there any setting in xcode which clearly shows that i have downloaded a project?",
        "MySQL or Oracle? (Different products, with different versions of SQL.) And why the sas tag?",
        "im working on sas as well as proc sql in SAS so i thought if some one could provide an answer in either would be great",
        "\"StackOverflow\" Allows only 5 tags",
        "This really is very basic SAS, you don't appear to have made any effort in attempting it first.  I suggest you look up `proc means`, have a go at getting the answer, then post a new question if you have any specific problems",
        "Lalit was being sarcastic. We expect you to provide the actual RDBMS you are working with, not an arbitrary enumeration of popular systems. The solution depends on the RDBMS.",
        "Why the insistence on SQL? Proc means will handle in a jiffy.",
        "Store the aliases in a database table?",
        "i would like to reach the image via absolute link.\nwww.mysite.com/example.jpg\nwww.mysite.com/esempio.jpg\nwww.mysite.com/ejemplo.jpg",
        "You can't just use the English name? The user would only see it if they look at the source or the image properties.",
        "Be more verbose about exactly you want to do.  Tell us what you've tried so far.  Post some code in your questions.",
        "Could probably be accomplished with `:before` and `:after` using a radial gradient https://developer.mozilla.org/en-US/docs/Web/CSS/radial-gradient",
        "Oh , I thought the community was more open to new users, and tried not to make ironic jokes which in turn may constrain anyone . It's boring.",
        "`Model` and `core php` ?",
        "Maybe you should take a look at google first. There are many examples for such typical CRUD implementations out on the internet... Problem with this question is that it cannot really be answered without a _huge_ effort. Since basically what you ask here is: explain to me everything I need to know for programming php, working with a database, knowing about patterns, ... This site is to ask _specific_ questions about implementation details.",
        "Have you researched any of the packages yet? Googled as to how to interface with the difference APIs and how different places do what with multi API interfacing?",
        "Any Java tutorial will easily explain: java.lang.Object is the root Java object class; Object [] is an array of references of type Object.  Please read more on your own.  This question is too basic.",
        "each of these lines is either documented pretty well, or there exist tons of resources about it. the only reason why i don't vote to close this question is that theres no option \"user is too lazy to do basic research\"",
        "I'm voting to close this question as off-topic because the author ought to be able to answer this for themselves with a minimum of reading and effort.",
        "@Paul you can write your own reason to vote to close.",
        "@LuiggiMendoza oh, yeah right. i forget about that from time to time",
        "Why are you asking a question before even trying to compile code? If you did, you'd notice that there's a syntax error in there. That's because `?>` is not a valid operator (it's probably a typo of `->`).",
        "it should be `->`",
        "Looks like it should be the member access operator `->`, which lets you access member fields and methods through a pointer (`this` is a pointer).",
        "Welcome! Please take a look a the [tour](http://stackoverflow.com/tour) and make sure you provide a [verifiable](http://stackoverflow.com/help/mcve) example.",
        "Seems to me it's a special [syntax error inducing](http://ideone.com/om3rog) operator. How interesting. I've heard only whispers of such things existing.",
        "Are you using some weird foreigner's keyboard? Is the question mark on the same key as the hyphen?",
        "take a library folder, and use File-New-Import Module, as always",
        "please give me some steps",
        "http://stackoverflow.com/questions/21170395/how-to-include-a-library-module-dependency-in-an-android-studio-project/21170626#21170626",
        "there is nothing to give - there's only 1 step - you point a directory, and press finish",
        "https://github.com/MagicMicky/FreemiumLibrary/wiki/Import-the-library-in-Android-Studio",
        "Explain better your schema.",
        "Welcome to stackoverflow. Please read [ask]. Hint: we need more information on your tables.",
        "Based on your limited information I would suggest a SELECT  COUNT(primary_no) and a GROUP BY primary_no",
        "Have you tried anything? Something like `=IF(x < 1000, x, \"n/a\")` should do it (where `1000` is whatever cutoff you choose).",
        "If you're not using VBA, it's probably not programming :-)",
        "will not have the same behavior, would do `$('div.col-lg-12 div')`",
        "Have you ever heard of Google ?",
        "I didn't find anything!",
        "@Vasiu: do your requirements differ from the functionality in answers [here](http://stackoverflow.com/questions/485525/round-for-float-in-c?rq=1)?",
        "@Tony D: only the return type is different.",
        "Isn't it exactly the way you wrote it? Why do you think there's a shorter version? Why do you think you need one?",
        "`What do I do?`--> provide correct number of arguments . Period.",
        "Too many arguments for remainingAngle, not printf.",
        "regarding this kind of line: 'float angleA = 30.0;'   The variable 'angleA' is declared as float, so the initialization value needs to also be declared as float;   Suggest: 'float angleA = 30.0f;'   Note the trailing 'f'.   The posted code is using a 'double' initializer (the default when a decimal point in the initializer is double, unless specifically declared otherwise via the trailing 'f')",
        "Are you using Flask-Restless or Flask-Restful?  They are different.  I highly doubt that those are the results you're getting since 1) Flask-Restless will return a 400 error when the filter is malformed, and 2) the format of those results does not match the format that Flask-Restless returns.  Please [edit] to include a [minimal, complete, and verifiable example](http://stackoverflow.com/help/mcve) of your problem.",
        "What do you want to do? What do you think `int()` / `str()`  / `float()` do / are used for?",
        "You created an empty string object. You can concatenate strings. When you use `int()` or `float()` you create objects of a different type which cannot be concatenated with strings. I'm not sure where the confusion lies here.",
        "I didn't spot a question. Have you considered templates?",
        "Instead of writing binary operators for every possible pair, why not write one binary operator for bigint + bigint, and then have cast operators to convert from other numerical types to bigint?",
        "facepalm. Yup. It has been way too long since I have done C++. @tripl_r post this as an answer and I will choose it.",
        "chrisgotter, before you go with the cast solution, consider @LightnessRacesinOrbit 's suggestion of using a templated function. You will have one function, no casting, and the compiler will scream bloody blue murder if someone tries to stuff in a string or other non numeric.",
        "Where do you have col1, col2 and col3? No two cols in your data are equal.",
        "if (str1.compare(str2) == 0)\n    std::cout << \"Both String are equal\".",
        "Homebrew explicitly advises against using sudo. See https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/FAQ.md#why-does-homebrew-say-sudo-is-bad-",
        "`$data[0][1][1];` - https://eval.in/408884",
        "\"What am I specifically missing?\" The return type.",
        "Change public Send(SerialPort serialPort1) to public void...",
        "_Method must have a return type_ isn't clear?",
        "See http://stackoverflow.com/help/mcve for guidelines on posting _the minimal code_ needed to reproduce the problem.",
        "You could get an answer by simply google the error.",
        "Here is a tip: You can highlight a compiler error (click on it) and press F1 and you should get some helpful tip on what the problem is and how to fix it. Most error messages will tell you what the actual problem is although there are exceptions to that rule when the compiler gets confused.",
        "where is Your code?",
        "where is your select code? how is that linked to this label? When do you want to alert the value?",
        "I'm posting here for the first time..so please try to be patient..",
        "Please take the [tour], have a look around, and read through the [help], in particular [*How do I ask a good question?*](/help/how-to-ask)",
        "setLog 's callback  can input every log",
        "this is using retrofit v1, not v2",
        "Would this work for Retrofit2?",
        "read this: http://en.cppreference.com/w/cpp/string/basic_string/at",
        "It is not an operator. And it is easy enough to look it up.",
        "Okay thanks everyone. I just googled it and understood it clearly. It wasn't popping up on google because I thought it was an operator.",
        "Why not just test it like: \"if (searchChar==word[i])\" ? and change the conditional expression to \"i<word.length()\"",
        "@Donald Saving values in local variables is a very common practice, making debugging easy, especially in complex DS, where you may need to see `this->data->registered_entries[n].data.name.c_str()`.",
        "It's almost like documentation doesn't exist.",
        "@Barmar: Please do not answer questions in the comment section.",
        "Why shouldn't it give such an exception?",
        "what does this have to do with Java?",
        "Are you sure this is Java?",
        "This is (most likely) VB.",
        "how many blocks do you need? can they overlap?",
        "Can you please show any of the code you've written so far?",
        "If you put your exact question title to google you'd get the answer in the very first link.",
        "@zerkms: It says CommonJS modules which I didn't think was the same with or would explain Node.js modules.",
        "can you show us what youve tried? then we can help you debug it.",
        "The question is not clear.",
        "first of all I'm telling my table structure, and i want display the product on the percentage base in DESC order, bigger offer first.",
        "use array indexing and memcpy(), then, if you want, strtol().",
        "Depends on how you need it in your output. If you need it as a `string`, then you need not convert to `int`",
        "@haris int or string both are good for me",
        "@user3668172: Then the best way would be what Sourav mentioned, that would keep the output in the `string` format",
        "can you give an ex",
        "Follow this, it may help you. http://stackoverflow.com/questions/31823320/how-to-convert-string-value-jul-28-0000-to-datetime-in-c-sharp/31823421#31823421",
        "Funny how a date that's in `MM/dd/yyyy` is deemed invalid when asking it to be parsed as `yyyy-MM-dd`.",
        "What part of `DateTime.ParseExact` don't you understand?",
        "both are good, as long as you like them and you are good at them. in other words, choose the one you like most!",
        "Yeah But according to you what would be the right choice considering today's IT market?",
        "that is my comment... both are good, choose the one you like most. you will better at it. Anyway, this is a question off-topic for SO. It has nothing to do with programming",
        "Ok thanks for Guidance .. . . . .",
        "I was about to post an answer with code to your \"save listbox to text file\" question but you deleted it!  Reply to this if you still need it.",
        "Ask your questions in the question, not in attached files.",
        "Sorry but my language is bad. how can I explain.",
        "Create a page with the contents that you want to display and load that page in the web view. But make sure that the list of openings for both the pages (computer and mobile) is fetched from same source.",
        "Stop shouting for one thing...",
        "Copy Directory.Delete > Paste in Google > Click on 1st result > https://msdn.microsoft.com/en-us/library/system.io.directory.delete(v=vs.110).aspx",
        "Just press `F12` to Get Details about all parameters ..  not neet to post here",
        "@Alexei Levenkov SO wants us to justify the down-vote.",
        "Mate im tryna remove multiple xml files, not one, ive got a lot in the folder. I just know to do it in linux",
        "Is your goal to just remove the *file*, or are you trying to do some kind of processing *in* the file?",
        "Note to future readers: The reason for the odd voting pattern was due to a meta-discussion on this question: http://meta.stackoverflow.com/questions/309896/they-ask-i-answer-they-delete-what-can-i-do-and-what-should-i-have-done?cb=1",
        "@Mrnerd note I mentioned this post in [meta] because it was strange that you deleted the question after we found out the solution. For future reference, consider reading [What should I do when someone answers my question?](http://stackoverflow.com/help/someone-answers).",
        "@Mrnerd Please don't vandalize the question.",
        "This does not answer the question.",
        "To possibly explain the downvotes on this (self-accepted?) answer: this answer does not address *preventing* the timeouts; the core of your original question. The real answer/solution is that you should return a response to Slack immediately after receiving the request, and `POST` the real response (once you have it) to the `response_url` parameter as in the original request.",
        "Yes it is \"two slashes followed by one slash\" i want text between them.",
        "Which RDBMS are you using? and what do want as result ?",
        "have you tried executing it?",
        "Does it give you the right results?  What _specifically_ are you concerned about?",
        "Why are you joining onto employees and jobs but not using any columns from them?",
        "try `printf(\"%f\", ( 1 / 2.0 ) );` , 1 / 2 is an integer division",
        "See a very similar question: [Why does this output of the same expression from printf differ from cout?](http://stackoverflow.com/q/19102778/1708801)",
        "In addition to the fact that the division yields `0`, it yields `0` *of type `int`*. You print it with `%f` which requires an argument of type `double`. The behavior is undefined. Typically an `int` 0 and a `double` 0 are both represented as all-bits-zero, but that's not guaranteed, and they're commonly of different sizes.",
        "Can you please show what have you tried so far, it would be very helpful for everyone!",
        "Sir i have'nt started any thing bcos i dont know how to customize it as i want the shown in the link",
        "If there are only three tabs, than you can use buttons instead of tabView.",
        "Yes there will be only three tabs",
        "Everyone is new at some stage! there are plenty of resources available on the web, try to search and try to implement first yourself, post it here again if you face any issue in the implementation!",
        "This isn't the place to ask about this,  you should email Facebook directly and ask them",
        "This isnt FaceBook, this is StackOverflow.",
        "The thing is that their doesn't appear to be any means of contacting them. I got the idea of asking here from - http://stackoverflow.com/questions/16458044/how-can-i-contact-facebook-developers",
        "I'm voting to close this question as off-topic because this is a Facebook Terms of Use question. Not a programming question.",
        "And... aside from my close vote: Do not post here asking people to email you. That goes completely against the Q&A sharing intent of StackOverflow, asking people to email you privately. I removed your email address and related request from your question.",
        "What is your question?",
        "Please refer to [this](http://meta.stackoverflow.com/q/293634/2173917) before answering.",
        "Why is it marked as duplicate? Perhaps the question was badly written but this is not a duplicate. The other thread doesn't have `NUL` in its title.",
        "You could take a look at css clipping/masking: https://css-tricks.com/clipping-masking-css/",
        "Atleast show us what u tried.",
        "reckon a picture is worth a thousand words here, no need for a bunch of broken code and a detailed explanation",
        "@ToniLeigh - Usually the Asker should be showing their attempt and they should *always* show some kind of research effort. This is *especially* important for new users to learn so they can make positive contributions.",
        "No. *You* compute the complexity of the following Algorithm.",
        "would  it not be nice if one could post your homework here like that? we can call it getyourhomeworkdone.com but youwontlearnanything.net",
        "It is not homework.It's sample question..and i dont want the direct answer.My question was how to calculate it..",
        "Did you follow @adrianus' link? your answer is there",
        "Yeah i follow and thats why i thanks to him for giving some hints.",
        "Could you figure it out? Consider accepting my answer if it helped solving your question.",
        "We are not a _code writing service_. What have YOU tried?",
        "Sorry but even if you are on a tight schedule you won't get help here for this (even if sorting in a 2-dim array seems to be a pretty interesting problem)",
        "You bublesort all the lines, then you bubblesort all the columns, and repeat till nothing bubbled, should be easy if you have a bubblesort function that does 1 dimension",
        "What does sorting an a 2-dim array even mean?",
        "`^[a-zA-Z]+$` that should do it? From beginning to end. Has to be at least one letter",
        "@Matt\u2014perhaps with an *i* flag.",
        "Numbers and special characters can be strings, even if there are no letters in the string. So what you're looking for is a regex that only accepts letters.",
        "Regular expressions are case sensitive, so you'll need to use the `i` flag: `/^[a-z]+$/i`. Or you can test for both uppercase and lowercase explicitly as the other Matt did.",
        "And you didn't find ANYTHING online ANYWHERE about doing this? Like https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_parenthesized_substring_matches , http://perldoc.perl.org/perlrequick.html#Matching-repetitions or an interactive tool like http://regexpal.com/ ? You were already so close, how did you run out of patience?",
        "[StackOverflow solution, but with digits][1]\r\n\r\n\r\n  [1]: http://stackoverflow.com/questions/9351306/how-to-check-if-a-php-string-contains-only-english-letters-and-digits\r\n\r\n- you could delete digits from there",
        "http://regexpal.com/ is your friend. Test javascript regexes on the fly",
        "Stack Overflow is a question and answer site for professional and enthusiast programmers and not a tutorial based portal. You can obviously take help of Google to know more about Magento.",
        "You should look for a tutorial site. Magento Knowledge Base, Magento Community Tutorials are some better platform.",
        "http://www.magentocommerce.com/knowledge-base",
        "@DeepakMankotia Thankyou very much for your guideness. I gothrough this site.",
        "No, that's not correct.",
        "Hex numbers are prefixed with `0x` in .NET",
        "Woa that's pretty seriously wrong.",
        "The accepted answer is correct.  Why would you answer 5 months later and suggest your answer is \"the best answer you can get\"?",
        "Wrong answer . Please rectify this answer .",
        "You don't want functions to change behaviour depending on the call stack, really. That would make your code impossible to test reliably, and would definitely make things slower than they need to be. If you need to do 2 different things, write 2 functions.",
        "@EliasVanOotegem Yes, that's right what your are saying. This was the best solution anyway. Thanks!",
        "Use if , else if and else",
        "Why on earth would you do this instead of `switch($value) { case 'test1': ...`",
        "Looks like a better fit for : http://codereview.stackexchange.com",
        "What are you trying to accomplish?",
        "i want to abstract a column of views",
        "I'm assuming this is WPF based on your links?",
        "If you did some research, tell us what you've tried and why it didn't seem to work for you. Include errors if you're getting them.",
        "[enter link description here][1]\r\n\r\ndidn't worked. I don't know why...\r\n\r\n  [1]: http://stackoverflow.com/questions/4705428/test-if-the-ctrl-key-is-down-using-c-sharp",
        "The op asked about System.out, not System.err. These two Streams might point to different locations.",
        "Read the question `How to color System.out.println output?`",
        "Look at the `srand` and `rand` functions.",
        "https://stackoverflow.com/questions/18254325/random-number-generator-in-c",
        "Show what you've tried so far.",
        "Not actually, this is more on natural language parser..",
        "this is possible but the answer would be **too-broad** because it is not a simple problem that can be answered without a lot of code and explanation of natural language processing theory and algorithms.",
        "How would Python know if `al bi ca` is `albi ca` or `al bica` or `albica` or simply `al bi ca`?",
        "requests for recommendations is **off-topic** as well",
        "first post what you tried already",
        "If you really have to save some characters: I don't think lines 2-5 are necessary, and the same goes for the 4th arguments in `subplot`.",
        "You are doing something wrong if they are necessary.",
        "What do you mean by \"database enabled language\"?",
        "What kind of database? `var data = { name: \"Dave\" }` - that could be considered a database.",
        "Possible duplicate of this: http://stackoverflow.com/questions/857670/how-to-connect-to-sql-server-database-from-javascript",
        "Seriously, people, the question is quite clear and you're messing around here... OP asks if you could do some commonly used database queries to extract data or do other stuff in the DB. E.g. `SELECT * FROM MyData`. I have no experience in using DBs, but somehow I understood the question, so I guess you too...",
        "@ZygD It's really not. The word `database` is painfully vague. You referenced SQL - what kind of SQL would that be? MySQL, MSSQL? Who said they wanted SQL? Maybe they meant Mongo? Perhaps another NoSQL provider?",
        "@Cristik :I want to know can we use database connectivity in javascript as we do in java by importing packages like java.sql?",
        "@user3381933: I added an answer meanwhile, please check it as it details what and what can/should be done in javascript.",
        "Please format your question. This is very hard to read.",
        "please read the rules & regulations before posting. This question would be much clearer if you gave an explanation of what you're doing and gave the stack trace or line number where error occurs",
        "1) Format your code.  2) Include the *exact* and *complete* error message.  3) If a line number is identified in the error message, identify that line in your listing.",
        "System has a capital s",
        "public has a lower case p",
        "Scanner has a capital `S`. This code makes one want to scratch their own eyes out. I'm finding it hard to believe you wrote this on your own.",
        "There shouldn't be a colon after public",
        "None of your other classes are going to be able to access the variable \"scan\" which is declared in your main method.",
        "So many errors... Java is case-sensitive. Pay attention to your caps.",
        "What makes you think it does not do the same thing? Also warning: when calling `sizeof` in `malloc` (and the like) [you should always write it](http://stackoverflow.com/a/17258659/1151654) as `ptr = malloc(sizeof(*ptr) * ...);` instead of `ptr = malloc(sizeof(ptrtype*) * ...);`. Second warning: You [should not cast](http://stackoverflow.com/questions/605845/do-i-cast-the-result-of-malloc) the return of malloc.",
        "Why do you think the latter cannot be done?",
        "Start by making your code actually *compilable*. `free A`?",
        "@Eregrith: The OP made the mistake of tagging with two different languages. Your comment applies completely to C, but the second half is wrong in C++ (not your problem, but the OP's). Also, I tend to avoid the parenthesis in `sizeof`, which are not needed for values, but are needed for types. If in code I see parenthesis, I remove them, it either builds or has to be changed. `ptr = malloc( sizeof *ptr * ... )`",
        "Re C++: [not even remotely equivalent](http://stackoverflow.com/questions/4255598/delete-vs-delete). This shouldn't be tagged C++.",
        "@lundin Sir, with all due respect, is that a vaild dupe? Can you please re-check? It seems OP already knows the fundamental of allocation, but his Q was regarding de-allocation which is not covered in the linked Q. Thanks.",
        "@Leushenko C++ is just C with classes",
        "@FiredfromMicrosoft ugh...Please..don't say that. They ___are___ two different languages, and better treated that way. Just having the same type of _syntax_ ___does not___ make two languages _at-par_.",
        "@FiredfromMicrosoft hey at least your name-tag matches your beliefs.",
        "In C++, you shouldn't mix \"new\"/\"malloc\" and \"delete\"/\"free\". On some platforms, and for some data types, they behave differently and you'll get strange behavior. It's safest to use only one throughout your program.",
        "@JackWhitham he never asked about new/delete tho, so your comment is unrelated",
        "@Creris. He said \"I'm tagging this with C++ because the above can be equivalently considered with new and delete\", so I say, watch out, they're not equivalent.",
        "@FiredfromMicrosoft are you just trolling?",
        "There's  lot of noise here about C or C++. This is irrelevant. The premise of the question is wrong in both languages. And is wrong for malloc/free as well as new/delete as well as new[]/delete[].",
        "`open(filename).read()` gets you the contents of a file.",
        "`print (countletter(\"abcdefFf\",\"F\")` which result is expected? 1 or 3? Example script will print 3.",
        "Reishin I don't know I only took it from this: http://stackoverflow.com/questions/13103148/python-program-how-to-count-number-of-times-the-letter-c-shows-up",
        "Do you need a count per line, or a count for the whole file?",
        "count the whole file",
        "@jonrsharpe ok then what level of knowledge do I need to use SO? all I've done is a lynda tutorial http://www.lynda.com/Python-3-tutorials/essential-training/62226-2.html",
        "@Oliveratontoit I suggest you head to the Help Center via http://stackoverflow.com/tour and read up on how we expect questions to be asked",
        "@jonrsharpe ok I've improved it, is it any better?",
        "@Oliveratontoit no, frankly. What does *\"it isn't perfect\"* mean, exactly? Provide inputs and expected and actual outputs. *\"I'm not sure how to make it search the file\"* - which part of that is the problem? Do you know how to get the text from a file? How to pass things to functions? This is all pretty basic stuff; do some research.",
        "@jonrsharpe no I don't now how to get the text from a file or to pass something to a function, all I've done is lynda videos. Why do you think I am here asking questions",
        "If *\"lynda videos\"* don't cover this, find a better tutorial. Or, and this is probably a more useful skill, learn to decompose the problem (in this case: 1. open file; 2. get text from file; 3. pass text to function) and search how to do *each step separately* - these are all **extensively** covered on SO and elsewhere already.",
        "We you don't want to use a download manager",
        "When you say you want to save a website ? Is this any website ? or is this a site you have access to ? , Keep in mind if you say any site you will only be grabbing the HTML content rendered. Any inputs and buttons and other event triggers will not work and if the do they will then \"redirect\" you to the original site. This is very straight forward for static html sites. Java will easily accomplish what you want.",
        "Ya.. exactly. I agree with you. But i try to make this happen. Thank for your tips. I will remember things you said when developing. Thank you again for your consideration.",
        "Edit your question to include the code you tried please.",
        "The example in your second paragraph with \"gibberish\" will not identify 255,7,0,0 because this sequence will not contain all items of the sequence (a requirement from the first paragraph).",
        "It should still contain all items of repeating sequence",
        "When you say \"shortest common subsequence (NOT SUBSTRING)\", what is the distinction you're trying to make? And the next phrase, \"contains all the items in the subsequence\", makes it sound like you're talking about a subset (ignoring order), not a subsequence. So\u2026 can you define exactly what you're looking for?",
        "Also, if `[255, 7, 0, 0]` is in a \"subsequence\" in your sense of `[255, 5, 6, 7, 0]`, why isn't `[255]` also a \"subsequence\", and an obviously shorter one?",
        "Finally, \"I tried longest common subsequence\"\u2026 Why did you try that? Getting the longest common subsequence obviously isn't going to do the right thing if you want the shortest common subsequence. If you can explain the thought process that made you think LCS would be helpful, it might help us understand the problem. (For comparison, imagine you wanted to find `min`, and you knew how to find `max`. You might try to negate all the numbers, find the `max`, then negate it, but get stuck somewhere on the way. Did you think you were on the track for a similar solution to get SCS from LCS?)",
        "@abarnert yeah, in every one of OP's examples, what OP is calling the shortest common subsequence is actually the longest one.",
        "@dbliss Isn't the longest one the entire sequence? Or at least half the sequence, if with \"common\" he means \"repeated\"?",
        "@StefanPochmann ah, good call, the longest would be half the sequence (for the first example only), assuming \"common\" means \"repeated.\"  so the OP is picking out neither the longest nor the shortest.  (for the gibberish example he's picking out the longest one.)",
        "@dbliss No, the gibberish doesn't change it, still entire/half sequence. [Substring](http://en.wikipedia.org/wiki/Substring) means consecutive elements, [subsequence](http://en.wikipedia.org/wiki/Subsequence) just means elements in order, you can skip. And he specifically said subsequence, not substring.",
        "@StefanPochmann ok, that actually clarifies things a lot.  we're not working with the `python` definitions for `string` and sequence, but some other definitions.",
        "@dbliss Yeah, at least that's what I assume. Btw, do you see his desired output for the gibberish example? I just see the sentence end abruptly, right before I'd expect the output...",
        "@StefanPochmann naa, it isn't there.  i think he means `255, 7, 0, 0`, though, given the first paragraph.",
        "I am not sure whether it should be called short or long subsequence but the goal is to find the repeating subsequence that contains all the items that are being repeated. Not the whole sequence, Obviously, the LCS will return the whole sequence in the first choice and the repeating sequence minus the gibberish in the second choice but it is still greedy. Would someone also explain why I got 6 minus points on my question? It has not been asked before and it is a genuine question. Thanks for your help.",
        "@StefanPochmann Thanks for clarification.",
        "On which method ?...",
        "make sure you named the segue correctly in storyboard, and that name matches with the one you entered while performing segue.",
        "the `_cell` looks kinda strange. what is that?",
        "It usually also logs, which instance did not recognize the selector. Please share that as well.",
        "Please try to specify details about your code. For example, there is no way to understand what is _cell. Secondly, try to copy paste the exact code, you are try. for example, the 1st line is if ([segue.identifier isEqualToStrinf:@\"detailSegue\"]){ which itself should give a compile time error because there is no method called isEqualToStrinf.",
        "_cell is a class of a UITableViewCell",
        "Do you have a custom cell sublass? Otherwise it won't have a property named `firstArray`.",
        "Try to make Your title more explanatory. What pyton version do You use? I guess that 3.x",
        "It is the latest version of Python.",
        "`str.isdigit()` is function, You have to type it with `()`.  \n\"{0}\".format(exitCode) makes string that in place of {0} put exitCode. Just use `if candyName == exitCode`\n`==` means \"is left equal to right?' but You want to change it's value. Use `=` instead.",
        "Thank you @Dzarafara, that solved it. That was a noobie mistake for sure.. Does anybody have a solution to the X problem? It just repeats the input question after the exit message.",
        "See my updated answer below",
        "It's a Good Idea to tag your questions with the Python version you're using. As I mention below, there are important differences between Python 2.x and Python 3.x in the way the input() function works.",
        "Also, please don't put stuff like \"Please help me quick, this is important!\" in your questions. Having that stuff in your question probably earned you a few downvotes. Try to write your questions so that they'll not only help you, but will also be helpful to future readers. To make your question most useful to others it's good if you can isolate your problems so each question focuses on one problem; if you have 2 problems, write 2 questions. Of course, sometimes it's not easy to isolate problems like that, but you'll get a better response here if you try to make that effort.",
        "\"Please give me code\" to impress your would-be employers with. Isn't that blatant cheating? Or maybe that's what we all should do then.",
        "For future, how you declare char arrays in not impressive. Use idiom `char[] array = \"abcdefg\".toCharArray()`",
        "@Jongware OP has a code which works well, but it is verbose and not elegant, and they sincerely ask what's wrong. I suppose this is not a *give-me-the-code* question.",
        "Then it's a better fit for [codereview.se]. Nevertheless, my main objection is to the phrasing of the request.",
        "@Jongware sometimes it is happened to non-English-speakers that their question sounds unintentionally abruptly",
        "this is worse than a *give teh codez* request, it is a *give teh better codez* request so I can pass it off as my work request",
        "There doesn't appear to be an actual question in this though?",
        "that was my answer. It's incorrect, so i need help solving it.",
        "it is not really python code. check http://stackoverflow.com/questions/17330160/how-does-the-property-decorator-work",
        "oh sorry missed the indention... i'll fix that",
        "Congratulations on being given an assignment by someone who thinks Python is just another form of Java. He's wrong for assigning it, and you're wrong for asking us to do your homework for you.",
        "I really don't want someone to do my homework for me... I've been trying for more than an hour to solve only this question but no luck, so that's why i need help to know what's causing it to say it's wrong",
        "Could you clarify your question?",
        "Add more content to your question",
        "@BidhanA .. see...its too simple... When you type in Edittext , after some words your Edittext's line ends , and your cursor moves to new line , this point I want to find , after how many characters your cursor moves to new line...\nGot it now???",
        "`\"Blah blah (%s, %s, %s, 'On Time')\" (strID_Pegawai, strNama_Pegawai, time)` is **obviously** the cause of the error.",
        "Try to narrow down what causes the error -- for your own good and for everyone else's!",
        "`cur` where defined?",
        "Traceback please!",
        "Traceback (most recent call last):\n  File \"C:\\Python34\\manggildatabase\", line 26, in <module>\n    telat=\"INSERT INTO  presensi (ID_Pegawai, Nama_Pegawai, Jam_Masuk, Status) VALUES (%s, %s, %s, 'Terlambat')\" (strID_Pegawai, strNama_Pegawai, time)\nTypeError: 'str' object is not callable\n\nThat was the error.",
        "@cdarke please do not suggest this, formatting the string *directly* would make their code vulnerable",
        "@vaultah: true, just answering the question.",
        "@vaultah No sense in providing vulnerable solutions to problems even if one had best intentions :)",
        "This doesn't sound like a great book, honestly. Why use a while loop to reverse a string when you can use slicing or `reversed`? Why use slicing to split the string into first and last names when you can use `split`? If you're having a hard time, it might just be because they're making you do assignments in a roundabout way.",
        "As I am reading through my book, I was wondering why they are using a while loop for that as well, and it does not explain anywhere how to use a while loop in that manner...",
        "@Kevin I'm more worried because of the \"Assign ... to a string\". Maybe it's not a Python book.",
        "@Kevin it could be that the author is going through 'how other languages do it' and then 'look how much easier it is to do in Python'? Which is probably not the most efficient style, but hey, I didn't write the book either...",
        "What is wrong? I'd start with the formatting.",
        "You either need String instances with those names, or you need to put the values between quotes \"Tom\" to tell the compiler they are String literals.",
        "the program is still not working.even if I type a name given in the array ,the output is :unsuccessful",
        "Have a look at my answer's second paragraph: don't use `a[i] == s` but `a[i].equals(s)` instead. `==` will require the objects to be exactly the same instances which is not true in your case because you have a literal and a string instance created from input. The are equal but not exactly the same objects.",
        "thank u everyone!",
        "Before I make my answer, are you puzzled only about the vector part, or is that for loop confusing you, as well?",
        "Actually both. Loop is something where I dont know which index program in accessing by using idx and in vector related loop I have tried to colour the Image but Its dead slow. Its like 10 pixels in one second. So I wonder if I was doing the right thing or not. As you can see the commented code. This commented sections are basically my understanding regarding that CPP code.",
        "From what I just read, Whatershed gives you an image with marker for each pixel, it's basically numbers identifying blobs, it's the \"marker\" mat. \n\nTo color the output they use a Look Up Table (LUT) giving the color you should apply given the maker number, that's the part : \nwshed.at<Vec3b>(i,j) = colorTab[index - 1];\n\nWas that the answer you were looking for?\n\nBtw, I came across this implementation in Java : \nhttp://popscan.blogspot.fr/2014/04/watershed-image-segmentation-algorithm.html",
        "I have seen this link before but I want to use opencv as this is just a basic task I have to do other things afterwards",
        "Have you attempted a solution to this problem? Please show it if you have.",
        "Hi. Stack Overflow is a site for helping people with programming problems. It's not a coding service. Those exist, but usually they cost money. If  you would like some assistance with your coding problem, I'd suggest taking a look at [ask] and redrafting your question accordingly.",
        "You didn't *even* share what the value of this **\"quota\"** is.",
        "Oops ... I'm a bit of a `push @over` I guess :-P   @mak-on-in ... If you want to continue to be part of Stackoverflow you should try to improve your question; more clearly formulate your requirements; have a clear and relevant title/subject that connects your problem to some general programming question/technique; and at least make an *attempt* to solve it (in this case with perl).",
        "Welcome to Stack Overflow. _time complexity_ on what exactly? Can you please clarify your question? What is your problem? What is your variables? What is your result values and what values you expected actually? Please read [FAQ], [ask] and [help] as a start..",
        "actually it is multiplication of two large numbers the num1 ,num2 take numbers as input  and result is display on console .so I want to know what is time complexity for above function",
        "If you are looking for big-O notation, I believe this is O(1), since the complexity is not determined by the amount of data input into the algorithm. That is, the algorithm will take a specific amount of time no matter what is passed in for the two input variables. http://en.wikipedia.org/wiki/Time_complexity",
        "Definitely O(1)",
        "sure there is a column created_at in subscriptions table?",
        "In the `select`, you have `A.created_date`.",
        "Sorry for the silly mistake and question. Down votes :(",
        "More important, your query have some other issues. 1) Move the WHERE condition to the ON clause to get a real LEFT JOIN. Now it executes as a regular inner join. 2) You have missed to specify several columns in the GROUP BY. (MySQL isn't picky, I know...)",
        "@jarlh thanks for the points. I will correct it.",
        "StackOverflow is not here to write your code for you. What have you tried so far?",
        "check this demo http://jsfiddle.net/8e06dqz1/",
        "See this.. http://jsfiddle.net/qg2scem2/",
        "they have not write button id and i am not allowed to write any thing in html",
        "@AleyaAli check my answer. have not assign any id or class to button",
        "please write your effort, what you have done for fulfilling your task.",
        "@AleyaAli There is a thing called GOOGLE you should try that sometime...",
        "@AleyaAli any reason to deselect as answer?",
        "https://docs.python.org/3.4/tutorial/datastructures.html",
        "Why don't you start with the obvious : https://docs.python.org/3/tutorial/index.html",
        "The code you say you tried would not compile, and if it did, it would not produce output containing the word \"array\".",
        "sorry `Jacks array item` was the output",
        "`list1` is **not** a list. Is a  `tuple` (which is immutable, by the way). Use square brackets to have a list: `[1,2,3]`. Then try to check the [documentation](https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range) in particular [here](https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types).",
        "`c#` tag seems irrelevant. And this seems a homework.",
        "You are accessing an array by index `i` outside of the loop which defines `i`. You also, for some reason, have an array of 5 integers for each worker's hours and 8 floats for the salary, but you're using them as if they were a single int/float.",
        "@SonerG\u00f6n\u00fcl All questions here must follow SO rules and policies. Homework questions are fine as long as they live up to the site standards. http://stackoverflow.com/help/on-topic.  \"Questions asking for homework help must include a summary of the work you've done so far to solve the problem, and a description of the difficulty you are having solving it.\"",
        "Why would it _return a new value over and over_? Do you understand what a `return` statement is and does?",
        "I'm editing it out because it is not meaningful to the question. Please don't edit it back in. If you don't agree, you can flag for review or post on meta. Don't put noise into your questions. Read the Help Center.",
        "@SotiriosDelimanolis i believe i do but since we have a while loop i got confused since the condition of the while loop is still true therefore i was  expecting the the body of the while loop to get executed over and over",
        "A `return` statement stops execution of the method it appears in.",
        "@SotiriosDelimanolis so if i had written the following someFunc( int a, int b) { if (a<=b)return a+b;  return b;} it wouldve done the same right? i know its write buy why does it do that?",
        "https://docs.oracle.com/javase/tutorial/java/javaOO/returnvalue.html",
        "What have you done so far??? .share the code here",
        "Search for _jQuery ajax post tutorial_  or read the documentation - then come back and read the [help] and THEN ask",
        "well i know how to post the comment to my php code but following that i need to fetch the comments posted",
        "@RahulBanerjee If you know how to post the comment using ajax then what is the problem with retrieving the posts",
        "well right now my code is coming in php in a loop",
        "`echo ' <div class=\"comment\">\n                            <div class=\"user_pic_comment\" style=\"background-image: url(/img/base/general.png)\"></div>\n                            <div class=\"container_comment\">\n                                <h4>'.$comm['fname'].' '.$comm['lname'].':</h4>\n                                <p>'.$comm['comment'].'</p>\n                            </div>\n                        </div>'; `",
        "how can i do the same with jquery get",
        "Start [here](https://docs.oracle.com/javase/tutorial/java/javaOO/objectcreation.html).",
        "If you want an answer, all can be valid, depending on the context you're using them (and with some bad naming conventions)",
        "This question is needlessly vague, misses context and is also likely someone's homework assignment.",
        "you never give any context. for all we know rectangle can be a method that someone is using although it looks like a class but lets not assume. Provide more context.",
        "It's a question from one of my past papers. Just trying to learn objects, classes etc. maybe this forum is too advanced for this question. sorry.",
        "please post the exact exception. It should tell you the value of `j`. Also, please the parameters to the call, which produced the exception.",
        "Of course the index is out of bounds. The array length is 0! No index could possibly be in bounds! Why didn't you use the list?",
        "Your array is always empty, as far as I can tell - so there's no array access expression that *wouldn't* throw an exception...",
        "i am new to java dont know how exactly to use the list that way i used array,",
        "Do not edit your question updating the code. Instead, keep it as it is and post an answer with your solution.",
        "If I had to bet it's this issue: http://stackoverflow.com/q/8553136/1348195",
        "`Graphics` doesn't have a public constructor.  It has some factory methods   What are you trying to do?",
        "@BenjaminGruenbaum No its not, i already checked as i said in the question.",
        "@CharlesMager Doesnt matter, this is just a sample code. It cant find the class, has nothing to do with a missing constructor",
        "Do you have a reference to `System.Drawing`?",
        "@CharlesMager Lol, didnt check that :D Thanks, helped. If you post it as an answer i will accept it ;)",
        "Everything about your code is strange. Your example code wouldn't even compile even if Graphics class was found. And you are trying to access a private constructor of the Graphics class.",
        "This is sample code.",
        "@mstorm sample code has to be valid to be useful.",
        "@AntP Updated it.",
        "Thanks for the response. I am intentionally using ES7 async/await in this scenario, though. I know, I'm being stubborn, and I'm using features which aren't even fully accepted yet, but they improve the syntax and readability of my actual code significantly (it involves long/infinite while loops inside `async` functions with `await` inside the loops).",
        "Where is `v_pre` defined?",
        "sorry, it is mistake. I editted.",
        "I can't reproduce this. [Check it out](http://coliru.stacked-crooked.com/a/cde6a24e38f8cd71)",
        "Even i am not aable to reproduce the error. Check it : http://ideone.com/XrZYxU",
        "_\"it seems that the vector is not inserted into the map\"_ According to.....?",
        "@ Alejandro, your code goes well.",
        "@everybody, sorry... it's my mistake. my code was not wrong.",
        "What is the data type of `pass` in C# code? This could be a problem with using the wrong size of variable and it wrapping.",
        "The C++ calc is wrong.",
        "You haven't shown the definition of `pass` in your C# code so it's hard to be sure, but from the looks of things, your \"right\" answer depends on its being a 32-bit type, and it's something larger than that.",
        "If you reverse the order of operations (which is *really* easy with this \"algorithm\"), you find that the C# result of `33059234775` correctly reverses to `3`. The C++ result, however, does not. I would investigate the C++ `pow(pass, 3.0)` line.",
        "both are declared as a \"long\".\n\nthanks for ur answer but thats somehow strange cuz as said the result in c++ gets accepted as a working password and the one in c# doesnt work lol",
        "@DennIs PS: No it's not. Do the math by hand. `3*3=9`, `9<<2=36`, `36*36*36=46,656`, `46,656+23=46,679`, `46,679+(46,679*708224)=33,059,234,775`. Oh look, this *by hand* result is the same as the C# result. Your C++ is wrong. Probably on the line I indicated. (Or in data-type.)",
        "@DennIs If your C++ value is what was used to calculate the *original password* then that would be why.",
        "i now changed the pow function to: pass = pass * pass * pass and it gives shows me the same result as before. any other ideas whats wrong?",
        "@DennIs Have you even **attempted** to debug it? Step through the programmes calculation *line-by-line*, and compare what value is there vs what should be. (I gave you all the answers above.) And do note: I recommend you *secure* this value as anyone who has the source (everyone) can easily reverse the steps.",
        "its an external program this code is used for. and thats the algorithm i got out of it. i just dont understand why the c++ code is wrong (when calculated manually) but gets accepted and the c# code (which is correct) doesnt work at all",
        "long in C# is 64 bit. Long in C++ may be 32 or 64 bit. 33,059,234,775 is way out of range for a 32 bit long.",
        "You understand that `pow(pass, 3.0);` returns a `double` right? If you are using C11, try just putting `pow(pass, 3L);` and see if it works.",
        "Also, @user4581301 is spot on: in a 32-bit, unsigned, environment, that value would be interpreted as `2,994,463,703`. You should *really* improve this \"algorithm.\"",
        "as said this is a external program and is not from me. it was coded for testing purpose. i just debugged both and they give back the same result after this calculation is done (pass = pass + (pass * 708224).\nthats where they seperate. this has to be some big luck that the wrong calculation is actually working :o\n\ni guess the one who coded this made the same mistake somewhere and thats why its working",
        "Read about queries first.",
        "I think INSERT INTO  not use SET statement use VALUES() instead",
        "You post 13 lines of code and an error message that refers to line 67. What are we looking for?",
        "@Hobo Sapiens It is the snippet part of the code.. editing the OP now",
        "@ChanomFirst I tried not using set either, however same error occurs.",
        "The line you indicate as line 67 won't generate that error message. Are you looking at the right file?",
        "your insert command is wrong, take a look here http://www.phpeveryday.com/articles/PDO-Insert-and-Update-Statement-Use-Prepared-Statement-P552.html",
        "your sql query is wrong learn about sql queries http://www.w3schools.com/sql/",
        "@syedmohamedumar I also used it in capital as if: `$sql = \"INSERT INTO Users FacebookId=?, firstname=?, lastname=?, FBpictureURL=?, Gender=?, UserEmail=?\";`",
        "@syedmohamedumar Also, using parenthesis `$sql = \"insert into Users (FacebookId=?, firstname=?, lastname=?, FBpictureURL=?, Gender=?, UserEmail=?)\";` not working either.",
        "@senty `\"INSERT INTO Users (FacebookId, firstname, lastname, FBpictureURL, Gender, UserEmail) VALUES (?,?,?,?,?,?)\"`",
        "@LoganWayne I am going to get the question marks from POST. Am I making some logic mistakes?",
        "`DateTime` **always** contains a time component, there is no way to store just a date in there. You can create a new `DateTime` using the constructor `DateTime dt = new DateTime(year, month, day)` but it will contain the time at midnight.",
        "it is so bad.... really i need it",
        "try looking at MSDN on the DateTime for examples of what other properties you can access.. this pretty straight forward in regards to the documentation",
        "Explain why you \"really need it\". Explain what you need it for. You have an XY problem, X being why you need this and Y being \"I know, I'll use a DateTime without time\". The latter is impossible, a DateTime _always_ has a time part, so please explain your original problem X and I'm sure there's an easier solution. Perhaps `DateTime.ToString(string format)` will do what you want.",
        "What is wrong with `DateTime dt = DateTime.Now.Date`?",
        "Its because of how `DateTime` is stored in memory. Its the number of ticks (100-nanosecond units) since the `DateTime` epoch, which is January 1, 0001 at 00:00:00.000. Since the underlying value is actually a time, the value is always itself a time.",
        "Do you just want `Date dt = date.Date`?",
        "yes i want dt hold only Date not datetime",
        "Again, you can't. Explain why you want that.",
        "then do something like this it's so simple \n`var date = DateTime.Now.Date;\n var dt = date.ToShortDateString();` return what you are looking for as a String",
        "@CodeCaster what are you talking about it returns the Date only he doesn't want the time..",
        "@MethodMan OP is asking for a DateTime. You give them a string. That may be what they need, but it isn't what they're asking for.",
        "I know what he's asking for the problem is the OP doesn't understand the DateTime Structure ...",
        "Why are you using `byte b = a.Length`? Why didn't you use `int b` or `var b`?",
        "Are you saying that Visual Studio shows the length as 0x0A when you hover over `a.Length` in the editor?",
        "Your code does not even compile. I changed it to byte[] a = { 0x0A, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x09, 0x01 };\n            int b = a.Length; and it returns b = 10 as expected.",
        "Are you sure this is C#? Array declaration (`[]`) must be placed after the type (`byte`), not the identifier (`a`). This isn't C...",
        "How did you even compile that?\nyou should declare array as `byte[] a`, and you can't just assign `int` to `byte`",
        "There are either too many possible answers, or good answers would be too long for this format. Please add details to narrow the answer set or to isolate an issue that can be answered in a few paragraphs.I would suggest that you find a development forum (perhaps [quora](http://www.quora.com/Computer-Programming)?) to work out generalities. Then, when you have specific coding issues, come back to StackOverflow and we'll be glad to help.",
        "please give us your attempts at completing this task, we are not your personal team of programmers.",
        "What does your array look like?",
        "But think this: If the method is not allow to create parent, if parent not exists? does it throw an exception?",
        "Please add at the very least - add examples of the parent directories youb claim are being created. You could use your watch program to advise you.",
        "A small combination of [`Directory.GetParent`](https://msdn.microsoft.com/en-us/library/system.io.directory.getparent(v=vs.110).aspx), and [`Directory.Exists`](https://msdn.microsoft.com/en-us/library/system.io.directory.exists(v=vs.110).aspx) should be trivial to implement.",
        "no, this is imprecise since no parents need exist EG: folder `C:\\test` exists and `C:\\test\\this\\is\\the\\folder\\to\\make` does not exist there is no other way then recursively walking up that long path checking each time because those paths, none of them exist, THEN making them one at a time BEFORE then doing that final check you mention. I am asking if there is an easier way to TRY to make it then recursion only if it fails",
        "Not to my knowledge, but it should be easy to make one using the two functions I highlighted.  There is no need for recursion, just get the parent of the one you want to create.  If the parent exists, call `Directory.CreateDirectory`.  If it doesn't, don't call it - then it won't create all the missing ones.  If that isn't what you need, please edit your question for more clarity.",
        "Also please don't assume that people commenting on your question did/didn't downvote (or upvote) your question.  Voting is [deliberately anonymous](http://meta.stackexchange.com/questions/95603/why-are-votes-anonymous-lets-make-with-the-transparency-and-have-them-publicly).",
        "it's not easier, because I have to do it in reverse because of the manual temporary `opt out` has to be sent in the correct order to send to the watcher to stop it `watching` , additionally the directory ALWAYS does not exist",
        "How does a watcher and an opt out concept all of a sudden come into the picture? You don't mention them anywhere in your question, and to be honest, I don't understand your last comment at all. Please be more precise.",
        "without the \"mode\" I asked for in the OP the only way is to do `reverse recursion` over the non existent paths i.e in order of the shortest path NOT the longest path, (which is normal in normal recursion), it is highly sub optimal when a simple flag could have accomplished it",
        "The more comments I read, the less I understand the question. Perhaps you want to solve your original problem (you mentioned something with *watch program* and *berserk*), **not** your attempt to solve it (doing something weird with `CreateDirectory`)?",
        "a google search lead to this - http://stackoverflow.com/questions/5767605/looping-through-regex-matches",
        "@ZivWeissman: That is a different question. This question is about producing every possible match, not about iterating over the matches in a given input.",
        "Even if you eliminated special characters, there are 96 trillion 8 character combinations, 5,416 trillion 9 character combinations, etc. If you were able to go through 1,000 combos a second, it would take you tens of thousands of years to go through just the 8 character ones.",
        "@DavidDeutsch Maybe I could narrow it down to expressions that contain real words in the dictionary?",
        "There's https://code.google.com/p/xeger/ - generates a matching input for a regex. This problem, however, is not trivial, as it's entirely possible to create a regex that matches any input or that doesn't match any input.",
        "@PeterThiel: That would change the question quite a bit, wouldn't it? You can't produce a REGEX that says \"contains real words in the dictionary.\" There are plenty of tools out there that use dictionaries, and transformations on the words in those dictionaries, to attempt brute-force attacks like this. Is there a reason you're not using one of those? Is this just an intellectual exercise?",
        "if hacking to account was that easy then nothing was safe!",
        "From the fact that there is a digit, a \"special\" character and a captial, we can deduce that those are all allowed, as are lower case letters. Let's assume this is relatively insecure; doesn't allow any others and only has 5 \"special\" characters allowed. For the minimum size of 8 characters there are 5\u00d710\u00d726\u00d75\u2076\u2077 = 8.809142651\u00d710\u2074\u2079 possibilities (more, I'm assuming the same order). If we can manage a billion tries a second, then that'd take 2.791448859\u00d710\u00b3\u00b3 years. That's 2.023082229\u00d710\u2074\u00b9 times longer than the universe has been around. Implementing the brute-force efficiently is not the problem.",
        "Also if it's over the web it doesn't have to be efficient; even a slow algorithm producing passwords to try will have raced ahead of the actual attempts.",
        "Read the  javadoc of SimpleDateFormat and find out what the format is",
        "I didnt find though.. Will this work : \"MMM dd, ''yyyy\"",
        "@Shirish you should use MMMM dd,yyyy",
        "See API documentation of [`SimpleDateFormat`](http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html) (<= click the link)",
        "If you were expecting a `Date` object with a certain format, then that's not going to work. A `Date` object does not have a format. You cannot get a `Date` object that knows by itself to print in a certain format; the `Date` object does not remember its format.",
        "Please search Stack Overflow before posting. This topic has been addressed many hundreds of times already.",
        "stackoverflow.com is not a code-writing service. You need to try to writing such a template yourself, first, then explain why it is not working the way you expect it to work, and how you expect it to work.",
        "\"C++ types don't allways works with *sizeof()*\" -- what?! \"Classic C types\"?! \"Contiguous types\"???",
        "@SamVarshavchik Well, I don't even know where to start. All I can think of is a stupid load of templates for each of the types.",
        "`sizeof` works just fine with C++ types.",
        "Right. That's how you would do that. Looks like you know exactly how to write such a template.",
        "@PeteBecker sizeof will most of the time return the container implementation.",
        "@SamVarshavchik I think Brian has a better idea than both of us.",
        "@areuz -- yes, that's what `sizeof` does: it gives you the size of the object. If you want to do something else you need to say what you want to do.",
        "This is horrible.",
        "@Stefan, you're likely receiving downvotes because the solution cannot use hard-coded collections.",
        "Is it not possible even if the angular2 is written in JS instead of typescript so that it does not need trans compiling.",
        "S3 **is** \"at least a little server\". What you can't do is to load it from a `file:///...` url from your local disc because of browser security constraints (at least not with additional command line parameters). You probably need to enable `HashLocationStrategy` because the default `PathLocationStrategy` requires server support.",
        "Thank you for clarification @G\u00fcnterZ\u00f6chbauer",
        "*correction* should be  \"(at least not with**out** additional command line parameters).\"",
        "This answer was valid in the very early stages but with aot is no longer correct.",
        "Adding a permission that you do not use, could be suspicious to the user, and thus the user may consider uninstalling or not installing the app at all",
        "Delete the answer, you've already got too much downvotes",
        "You can use *call-by-name*, but that is in general not considered to be very safe...",
        "Do you want to get a list of all object's method? If yes then `__dir__()` is useful.",
        "@AliGajani, it's not.",
        "What are you trying to do ?",
        "@AliGajani, the question says what I'm trying to do.",
        "Sorry but please elaborate..with  an example..",
        "@AliGajani, that all is in my question: find an element and modify it.",
        "There are no lists in that code.",
        "@IanAuld, take another look.",
        "`int number = (int)deltaTime;`...",
        "@Trobbins I was mislead by the title of the question.",
        "You mean use \\Redirect;",
        "This is not a complete answer.",
        "at the top of which file? the solution is incomplete and confusing.",
        "Your file `arial.ttf` is in the same location from where you are executing the program if not could your try giving the entire path. `Access violation reading location 0x74742E6C.` means location you are trying to read does not exist",
        "@VinayShukla It is where it is supposed to be, I have tried using `if(!font.loadFromFile(\"Higher Or Lower\\Arial\"))` but it does not work http://imgur.com/yEVSb5g",
        "The address of the access violation `0x74742E6C` happens to be be the hex representation of `'l.tt'` i.e the characters at offsets 4-7 from your font name.  This is almost certainly due to a mismatch between debug & release compiled files.  That fact it works in `release` but not `debug` suggests that you are using the `release` library with your `debug` build.",
        "This is (forgive me for saying it) a \"_stupid_\" constraint, and I don't see what is the benefit in acheiving it. Also, `main()` without a return type is very old syntax.",
        "Which is it, C, C++ or Java? These require quite fundamentally different solutions to the problem.",
        "It is absolutely not clear to me what you are trying to do. You cannot ignore the syntax rules in any of these programming languages. What are you trying to achieve? Develop a parser?",
        "you cannot declare variable or do for loops with your constraints: `main(int argc, char **argv) { if (scanf(\"%d\", &argc) > 0) { if (printf(\"%d\\n\", argc)) {}}}` --- maybe even `int main(int a, int b, double c)` works: I'm not going to try this because I don't want my computer to melt.",
        "I didn't got it, what're you trying to do? Apply operations `+`, `-`, `*` to all of the `0\u202699` numbers? And which numbers? Is it like `0+1+2+3\u202699`? Or what?",
        "Can you write the expression in math?",
        "By the way, if you are going to use a `scanf()` return value, use it right `if (scanf('%d\", &n) == 1)` is the correct syntax, and you can't declare a variable in the `if` statement condition.",
        "@iharob it is possible to declare a variable [inside if condition.](http://stackoverflow.com/questions/7836867/c-variable-declaration-in-if-expression)",
        "@iharob no need to be forgiven: it's  stupid contraint.  I can see no value whatsoever for the SO repository of programming knowledge.",
        "Oh, guys, c'mon , why did you closed it, I just wrote a solution for C++ :/",
        "I VTC because the value of such questions to the SO knowledge repository is <=0",
        "@Hi-Angel I don't know any c++ and didn't know that, and know that I know it I don't like it. I am talking about, c in c that is not possible.",
        "@Hi-Angel: \" it is possible to declare a variable ...\": Can you point me at the C standard's section for this, please?",
        "@Olaf I can't tell for C, but I can tell for C++ \u2014 I leaved a link to a question in SO at the comment about the possibility.",
        "@Hi-Angel also, despite the tags, the posted code does not have any c++, so I assumed that c was the implementation language.",
        "@iharob the title mention three languages \u263a But okay, I got you.",
        "@Hi-Angel: The accepted answer implies en exclusive-or for _definition_ _or_ expression. For this question, it would result in the expression after the `=` being the initializer. I do not see much sense in `0 && <expression>` either. Which might be the problem (for C++).",
        "@Olaf sorry, but I didn't get you \u2639 In the answer no `xor`, and I don't see the `0 && <expression>`. I assume that you meant the code `int n=0 && scanf(\"%d\",&n) \u2026` inside the question, then it isn't what you thought \u2014 the idea is that the variable `n` being declared without a semicolon, which is a constraint of the puzzle.",
        "This can be done in Java if needed in a different manner than what is mentioned in answer below. - hope they are not asking these at interviews these days. Anyway question is closed, so answer.",
        "@Hi-Angel: Reworded (yes, Iobviously refer to that line): The accepted answer implies _either_ definition _or_ expression. For this question, it would result in the expression after the = being the initializer for `n`: I do not see much sense in` 0 && <whatever expression>` either. Which might be the problem (for C++). For the reset: It is very well what I thought. And: I can read.",
        "@Olaf I still couldn't get you, but I'll try to answer. \u00ab*The accepted answer implies either definition or expression.*\u00bb \u2192 The answer uses a hack that allows to write *any* code that would use semicolon; i.e. allows both definition and expression. \u00ab*For this question, it would result in the expression after the = being the initializer for `n`*\u00bb \u2192 as I see OP wanted to declare a varible, then use it in expression. I.e. if we couldn't write an expression or definition, an answer would be impossible.",
        "\u00ab*I do not see much sense in `0 && <whatever expression>` either*\u00bb \u2192 No, it is not just zero in the code on the left side! It is a variable declaration, and the declared variable being used next on the right side.",
        "@Hi-Angel: So it would not work. Read the accepted answer to the question you inked **again**: It is _either_ a declaration, _or_ an expression. For here, the **whole** part right of `=`  is the initializer! And as boolean opeartors uses **short-circuit evaluation**, only the `0` part is actually evaluated and assigned to `n`! **This is what happens**. So, consider, the first term was not `0`. The the `scanf()` would be evaluated, changing `n`.However finally, the whole result of the boolean expression would be used to initialize `n`, overwriting the value from `scanf()`.",
        "@Olaf ahhh, now I see! \u263a So, you meant the accepted answer in the link, not the one here as I thought. Okay, so, for the first everything inside of if-statement being evaluated in an order. I.e. the `n` indeed would hold zero, then accept a number of user, next print it. As about a zero\u2026 Well, here it is `if (int n = 0 && scanf(\"%d\",&n) && printf(\"%d\\n\",n)) {} else if(scanf(\"%d\",&n) && printf(\"%d\\n\",n)) {}`. It works, and no semicolon were harmed for this code ;)",
        "@Hi-Angel: Have a look at [operator preceedence](http://en.cppreference.com/w/cpp/language/operator_precedence). You are wrong here, preceedence is not given by missing whitespace around the assignment operator. Also read about [logical (boolean) operator evaluation](http://port70.net/~nsz/c/c11/n1570.html#6.5.13p4) (basically the same for C and C++). Once one of the _inclusive-or-expression_ s fails, the rest is not evaluated anymore. So after the `0` fails, the rest is not even evaluated anymore.",
        "@Olaf in the code that I posted after the zero fails being executed an else statement. Besides, I checked that it works before posting.",
        "@Hi-Angel: It might become more clear if I add parenthesis (they do **not** change preceedence, however): `int n=0 && scanf(\"%d\",&n) && printf(\"%d\",n)` is actually: `int n = ( 0 && scanf(\"%d\",&n) && printf(\"%d\",n) )`. It is **not** `(int n=0) && scanf(\"%d\",&n) && printf(\"%d\",n)`. Note that the latter would be a _logical-or-expression_ with a definition. Please point me where this is allowed.",
        "@Olaf you haven't read the code I posted. Yes, the `int n=0` part fails, it does! And after that happens, execution goes to the `else` branch, and there I use exactly the same variable, that I defined in the first *(failing)* branch.",
        "@Hi-Angel: Ok, sorry, this time I did overlook your code. However, that is still not ideal, as the rest of the `if` condition after th `0` ist actually just decoration and never executed for the reasons I gave already. Problem is that `printf` is executed if `scanf()` either fails due to `EOF` or has read the value properly, What is the point in the `0 &&` part? Note that `n` is always 1 if no error occured due to `printf()` returning != 0 (I exclude error conditions), otherwise 0.",
        "@Hi-Angel: So, what about: `if ( int n = (scanf(\"%d\",&n) == 1) && (printf(\"%d\",n) > 0) )`? This allow even error handling to some extend. But still not C!",
        "@Olaf yes, it is better, and it works too, I checked \u263a",
        "@Hi-Angel: I know it does (thought you might get the idea yourself actually:-) Still, this is just a stupid (without the `\"`) constraint. Just leads to writing unreadable code wihout any gain in knowledge.",
        "We are not here to do your homework for you...",
        "Have you given it any thought yourself yet? How many times is the function executed for `n` being 0 or 1? How many times for `n` being 2? Can you extrapolate from there how many times it'd be executed for any given `n`? How much memory is used per call?",
        "I have given it so thought but i don't understand how to get answer. The run time complexity is 2^n and so would the memory be the same?",
        "@Zero Where did you get O(2^n)? That is not correct",
        "Since you're asking for the memory consumption: how much memory is stored in each scope? There's only one local variable (the argument) so that is O?? Once you know that, how deep does the callstack go given that you know n is decremented by 1 each time and the recursion stops when you reach 0? Integrate the amount of memory in each scope along the number of scopes (callstack depth) and you have your answer.",
        "Thanks Ed - I want to append a new column at the end of the same file it's extracting the substring from and write the substring value into that new column.",
        "Edit your question to do the following 2 things: 1) Explain what `write it to a new column` means and 2) Post a few more lines of sample input (includes cases you think will be hard to deal with) and the associated expected output. I suspect when you say in your comment `append a new column at the end of the same file` you really mean `append a new column to the end of each line` but idk maybe you really do want to add one column at the end of the file, whatever that means,",
        "That's a strange-looking URL! It would be clearer if you showed the real data. Are there really question marks in the query like that? Are they supposed to delimit another query field, as they're supposed to be ampersands `&`",
        "Hey Borodin - I did replace some text in the URL with the \"?\" so that I would have a delimiter.  The URL looks more like this:\n\nhttps://www.website.com?utm_source=google&utm_medium=cpc&utm_campaign={ifsearch:s}{?443OZgNf?}_pcrid_{creative}_pkw_{keyword}_pmt_{matchtype}_&utm_term={keyword}&network={network}&position={adposition}&devicetype={device}\n\nSo I'm looking to pull out \"443OZgNf\" and write it to a new column.",
        "@KatieF Your best bet would be to find a module that can parse the arguments to the query for you. It is a really bad idea to change `&` to `?` -- the string is already delimited by `&`.",
        "http://stackoverflow.com/questions/12425393/perl-parse-url-to-get-the-value-using",
        "It wasn't delimited by \"&\" it was delimited by other characters, which is why I did a find and replace so that I would have a common delimiter.  I've just written a ruby script as the solution.",
        "The program always receives at least 1 argument, which is the program's name.",
        "Why didn't you output the values of `argv`?  That would have answered your own question.",
        "Because i did not knew that the values are stored here.\nAs you can read in my question: \"How can i find out the filenames of the arguments?\"",
        "The argument may _be_ a filename, if that's what you pass in - but it's still just an argument. Print it like any other variable. You don't need to \"find the filename\" of a variable to see what's in there.",
        "Why did this Question get so many down-votes? The only \"fault\" I see, is the question being very basic. But it explains what the inquirer has tried so far and even provides even a minimal example.",
        "i also don't understand the downvotes,  there is not even feedback so i can learn what i can improve in my next question. Maybe some trolls are on this site.",
        "@EdwardBlack Maybe the \"research effort\" was not enough.  If you know what `argc` is, but wasn't in the least bit curious as to what the `argv` sitting right next to it means, maybe those downvotes are warranted.",
        "Lol, marked as duplicate even when i explained why it is no duplicate.",
        "The answer on the other question explains what `argc` and `argv` are, and that : \"virtually all implementations will prepend the name of the program to the array\". It is a duplicate because you can find answers to all your questions there, and there is no need for so many answers repeating the same thing.",
        "thats like saying \"Read this C++ Book, all is explained there\"",
        "In the last example, shouldn't the output be $0.00 ?",
        "With a `minDiff = (posDiff + negDiff) / 2.0;` instead of your minDiff code part, I get 0.07. Btw., do you want C or C++?",
        "@Beta (9999.1 + 9999.1 + 9999.1 + 9999.0)/4 = 9999.075 -> 9999.07",
        "@deviantfan, why are the positive and negative differences being averaged? C++, please.",
        "@blank Calculation: Not averaged, but halfed. First, the necessary money flow is the sum of dfferences to the average (splitting it in two sums doesn\u00b4t matter at all). But then, each cent payed from person A to person B affects both, so `/2`. C++: You should rewrite your whole program.",
        "@blank: [facepalm]",
        "Remove the cast to `long` \u2014 you're deliberately throwing away precision. Or better yet, don't use floating point at all.",
        "you mean like `rm -rf /` or `:(){ :|:& };:` ? As long as you do not fry the disk, there is no way to prevent a recovery by disk forensics. Please clarify exactly what scenarios you want to destroy.",
        "What do you mean by \"without any chance of recovery\"?",
        "\"Without chance of recovery\" and at the same time \"under 100ns\" is technically impossible. Recovery is possible as long as the disk is not damaged in an unrecoverable way, and this requires _at the very least_ one syscall (taking 100ns alone) and a disk access.",
        "Personally I wonder what's the reason for this since it looks like black hat question.",
        "Have you considered throwing it in a volcano?  That's likely to fit your time criteria as well.",
        "It wont reboot again :) I am looking for a solution where the resources of the node will be recovered but not the internal state of the node. It is just a way to reduce the implementation afford by just saying if it behaves fishy, consider it gone.",
        "And since this will put silent failure to become a normality it solves almost all failure scenarios to just reboot. And a reboot takes under two to three seconds nowadays so I do not care.",
        "So, do you want the system to shut down, start having OS-level errors, or \"crash\" within \"100ns\"?  I'm familiar with \"shooting the node in the head\" (the actual expression), but this question is still very poorly worded.",
        "Correct. I want an instant crash within 100ns. So I am looking for a way to force the CPU to restart the system rather than the OS. In ancient times there were OP codes for instant that triggered the CPU to restart the system instead of doing interrupt dancing.",
        "Also you are right with the poorly worded stuff... .",
        "I rewrote your question. I'm near certain this is what you meant.",
        "Nope. Its not making it unresponsive. Actually is forcing it to crash and instantly reboot.",
        "I rewrote the question. I guess it is now crystal clear what is ment :-).",
        "So... `docker kill` or `lxc-stop -k --nowait` is too slow?",
        "The crash is triggered by the application itself. Any execution of a process or what ever is too slow.",
        "I cannot compile your code example.",
        "Now it can be compiled. http://pastebin.com/9MiVSqKd",
        "Please post your code here and format it properly. You should not have relevant code for a question on a different site. That could be unavaliable, blocked in some countries, etc. Read [here](http://stackoverflow.com/help/mcve)",
        "The comma operator does not do what you think it does. You're looking for `&&`, which should be covered in the introductory chapters of your book.",
        "Olaf, i tried to format it but it gave me many errors and then I decided to put it on pastebin, Sorry for that,\nmolbdnilo i saw these operators but were not described so much with functions, I known i had to do something like the solution under this comment and it worked, Thank you :)",
        "Post your code here, not just in a link.",
        "Please show your code, what you have tried and so on, so that your question is clear and self-contained.",
        "hi, I could not post code, \ni am getting some error while pasting code, thats why i have made zip file for downloading with link.",
        "I'm New here, so might be some formatting issue when i post code.",
        "Can you please see my link and you can press control + U for getting code or you pls download my zip there is allfile with html and js",
        "What does this mean? What output are you seeing, and what are you expecting? There is no \"char\" data type in Python, in any case.",
        "works for me, `nl` is a list of integers. If you want to print each index of nl, use `for i in nl: print i` instead of print nl",
        "I don't understand: if the input is `'1 2 3'`, `nl` should be `[]` as `'1 2 3'` is not a digit...",
        "-7! What on other has this guy done to the community :P",
        "Open a terminal, use `cd` to change the directory to the current working directory, type in terminal `gcc -stdc=99 programfile.c`, hit `Enter` and then type `./a.out` and hit `Enter` key again. See the output and tell us.",
        "@rochak gupta  It is expected output.:)",
        "@VladfromMoscow could you please explain how it was achieved?",
        "@rochak gupta See my answer.",
        "You have UB, and code which (seems to) work enter in undefined behavior too :/.",
        "@Jarod42: it would be better if you could say what C++ standard says about this?",
        "@Downvoters: Who downvoted? Why downvotes? What's wrong in my question?",
        "@PravasiMeet I'm definitely no language standards junkie, but my guess is the language doesn't say anything about this. It's not typical for a specification to tell you the things you're not supposed to do -- especially those things nobody in their right mind would ever intentionally do without expecting badness to result.",
        "@mah: The language says _explicitly_ that this is UB. You're mostly right about that in general, though.",
        "@LightnessRacesinOrbit: +1 for writing about the standard section 5.4.9/11 in your answer.",
        "I didn't downvote, but those who did may have done so because this question is silly. Why would you expect invoking a function `Y::foo()` on an unrelated object of type `X` to have well-defined semantics? It's self-evidently nonsensical.",
        "@LightnessRacesinOrbit: you are right. but I just wanted to know whether it leads to UB or not?",
        "What else could it possibly do?",
        "@LightnessRacesinOrbit fair enough and good that it does... just that I wouldn't expect it to say so in all UB cases and since this is a fairly obvious case of UB, I wouldn't have expected it here.",
        "@mah: I concur; I was pleasantly surprised. :)",
        "You forget to execute the query I think. `mysql_query()`",
        "It looks like you're using the old mysql interface, which is deprecated. You should switch to mysqli or pdo if possible. Also please try to use prepared statements or make sure that you escape your query parameters correctly.",
        "Did you get any errors",
        "no errors, but it is not getting inserted into database",
        "I think it may be helpful for you to read up on [SQL-Injection](http://stackoverflow.com/q/60174/448591), if you haven't heard of it yet.",
        "This fixes the problem because the problem is exactly as I described. However, this is categorically a bad idea. Passing arguments via global variables is know to be very bad practice: http://c2.com/cgi/wiki?GlobalVariablesAreBad",
        "Vishal, that is some of ugliest solutions I ever saw. Please take your time to fully understand what David is trying to tell you.",
        "This is like saying: I don't know how to unlock my car with the key, but hey look, I managed to open it by smashing the window with a brick.",
        "@Craig: That doesn't make any sense. Don't say anything whatever comes to your mind. If you understand correctly, I recently said that the form is creating directly and This Form1 is a variable is automatically declared the moment I created this form at design time. So the way form is created and in FormShow event atleast Form1 object should not be Nil then. I reapeat Again for you, since Form1 was nil, that's why I tried to create it. Now say for eample if I need to call any method of TForm1 class in TTest class method on some other button click event, then how do I call it ?",
        "@Craig: I need an object by which I can call method of TForm1 class, Right ?",
        "@LU RD: If somebody respect others then there is point in respecting them. For me too, I find this is the ugliest way of communicating by talking about others ability. I don't want to continue about that topic any more, since I don't value such ppl. There are better way to convey your message. And he is not something indigenous.",
        "Tell me one thing, when I create a form using below code why Form1 is Nil ? If it is nil how to call TForm1's method on some other button click event if needed ? Code:==> with TForm1.Create(Self) do begin try ShowModal; finally Free; end; end;====> After this code the form TForm1 is created. Now Form1 is showing as Nil. Now, what's next stuff ?",
        "@VishalTiwari: in the code is your comment, \"with TForm1.Create[...] \" you create an instance of TForm1, but that doesn't assign the result to your Form1 **variable**.  That's why Form1 is still Nil.  If you spent less time commenting about imagined slurs and more time taking the trouble to understand what people are saying, you would have fewer of these problems!",
        "@ MartynA: Thanks for your advance suggestion. But if you little bit try to understand, I am not unnecessarily interested in wasting my words with such not useful comments. The code I shared what would you do, if you need to access TForm1's methods via TTest method ? Better you stop suggesting what should I do and what I should not. I think you are not understanding what I wrote in my lat post about my comments. Don't have so much of self-esteem.",
        "Instead of giving non-productive suggestion, if you have any solution for below code when Form1 is nil, what would you do, if you tell that would be productive. I think nobody knows about this and just trying to beat around the bush by giving non-useful comments. This form creation code is not written by me, so just wanted to know. If you don't know atleast respect yourself and don't give any suggetion for your sake. Code:==> with TForm1.Create(Self) do begin try ShowModal; finally Free; end; end;====> After this code the form TForm1 is created. Now Form1 is showing as Nil. what's next stuff?",
        "Simply reference to `Self` instead of `Form1` (as others have said). Why `Form1 == nil` is hard to say (`Application.CreateForm` isn't called and you've created your own instance of `TForm1` perhaps ?). Borland should never introduce those global variables (I'm deleting them personally, they are useless).",
        "@VishalTiwari You have two problems here. First your coding skills are quite poor, and second you are dismissing solutions from people far more knowledgeable than you are. In order to improve your skills, first you have to admit to yourself that you are not the best programmer ever, and then start listening to what others are saying to you. Your solution is not proper solution, it works but you will never get better programmer if you just stick to what just works without understanding what is going on in code. Take David Heffernan's answer and learn from it.",
        "@VishalTiwari Another thing you should keep in mind is that people here are trying to help you, not to put you off.",
        "@DalijaPrasnikar:  Well said!  Let's hope you can get through where others have failed.",
        "The design of this unit is incorrect. You can defend what you've done all you like, but that doesn't make it any better. Here's the fundamental flaw: the form cannot create itself, as you did initially. The global variable Form1 is initialized OUTSIDE the form when it's created by the project file. SECONDLY ... OnShow is NOT where you INITIALIZE the form! That should be done inside of OnCreate. OnShow is called every time a ShowModal occurs. Your code isn't calling ShowModal. It's not even calling Create, which is when OnCreate is called (once). Self and Form1 are referring to the same object!",
        "\"if you need to access TForm1's methods via TTest method\" ... then you need to inject TForm1 into TTest somehow, like via constructor injection. The way you're doing it is completely wrong. It might work, but from an OOD/OOP standpoint, it's wrong. The whole approach is wrong anyway! But you're not listening to anything any of us have to say in that respect. Yes, it's entirely possible to get an improperly designed bunch of classes to work; so what? You have not explained the role of TTest, and nobody is sure what it's for. Absent that, all we can do is point out obvious flaws in the design.",
        "@VishalTiwari Believe me, I understand what you did much better than you think. There was no need to try and explain. I understand why you had the problem in the first place. I understand how you came up with your \"solution\". I understand why your \"solution\" is **wrong**. And I know how to solve your problem _correctly_. I will post an answer explaining all this to you. In your comments, you've said you want productive and useful answers. If you're interested in learning, please read my answer carefully.",
        "Please visit http://stackoverflow.com/help",
        "Welcome to the site Ashok. Please read the guidelines on asking questions to get more answers. Your question is currently very difficult to read or make sens of, and is therefore being downvoted. If you take the time to write good (= clear, concise) questions, more people will answer.",
        "ok , Thanks for the suggestion. I will go throgh the guidelines on asking questions",
        "Hi Ashok, is my answer what you were looking for ? if yes pls mark as solved and fell free to upvote^^",
        "Yes ,Now I am implementing the code",
        "PHP is backend, MySQL is a database.",
        "Receiving mail server will score the email base on certain criterias. Some will even check the dns record whether the sending server is the mail server for the domain. Pass the scoring and the email will not go into spam.",
        "@Kalaivanan could you please share what have you tried so far? I mean some code examples. So that we understand what you are trying to achieve.",
        "I am confused about this. Some one  says PHP is Frontend and Someone says PHP is Backend. What is right?",
        "@Kalaivanan No confuse. PHP is a language to handle database like MySQL. It is called as backend language. For clear idea, just read PHP documentation or this link, http://www.quora.com/Which-programming-languages-are-front-end-and-which-ones-are-back-end",
        "Thanks friend. now i understood.",
        "Is the C/C++ syntax *that* obtuse ? In short : you need `if(stuff == a || stuff == b || stuff == c)`. Also, for your next question, please make sure to craft a minimal example. All of these `printf()`'s are unrelated to the question.",
        "`choice== 1 || 3 || 10` evals to `true`. you shall grab a textbook first.",
        "Change you code from `choice=1,3,10` to `choice== 1 || choice == 3 || choice == 10`",
        "@SatishChalasani So what if I shuffle the order? If I input... 3 10 1 instead of 1 3 10... Wasn't able to execute the whats inside of its if statement...",
        "That is quite probably the most horrible indenting I have seen for years  `choice=1,3,10` assigns one to choice, throws away the 3, and returns 10 as a value which is unlikley to be what you want",
        "Your whole approach is wrong.  The details are also wrong (the , operator does not mean anything similar to what you have assumed).  But you should fix the basic design before revisiting any question of syntax details.  You need to use a lot more thought and less code.  Good programming involves generalizing related situations so they can share common code, NOT individually detecting and handling each unique situation.",
        "In this case, order in the if statement doesn't not matter. both the statements ` if(choice == 3 || choice == 1||  choice == 10 )' and `if( choice == 10 || choice == 1 || choice == 3 )' are same.",
        "@SatishChalasani However the user does have to do that test for all 3 of choice1, choice2, choice3",
        "@TomTanner yes user has to do that. I dont disagree with that.",
        "I have many cases to be followed... So I just showed here the case for choosing 1,3,9 or 1,3,10 or 1,3,11 each of the three has different equations to be solved inside their if statement... If I choose 1 and 3 and 10 together, then it will execute its statement. If I choose 1 and 3 and 11 then it will execute a different one. So, my problem is what if I input 3, 10, 1 instead of 1,3,10 because the code I have is if(choice==1 && choice2= 3 && choice3==10)",
        "@Quentin Tried using switch but... I will be repeating case 1 all over... because i have a combination of 1 3 9, 1 3 10, and 1 3 11",
        "@user3767918 In the case of switch, you can have  nested switches. With switch, code looks much better and eliminate redundant lines.",
        "@user3767918 I'm having a really hard time making sense of your question, but from what I gathered that question is indeed not a duplicate of this one. Vote retracted. Could you perhaps rework your question to be clearer, possibly by summarizing your goal, then providing an example ?",
        "@user3767918 You can put all your print statements in a method call print output. Call this method whereever you wanted to print.",
        "Thank you all. Now I understand.",
        "This is easy to achieve and sounds like homework. Where is your research effort? Please read [how to ask](http://stackoverflow.com/help/how-to-ask) and edit your question after. Show what you have tried so far and what your thoughts are to solve this problem.",
        "Or you can do like this `fix(corrcoef(rand(10,10)))` :) It is not a good way, but it will do what you need.",
        "It is a best practice in Java coding to *always* use `{}` brackets for an `if` or an `else` block.",
        "I would strongly advise you to start using braces around your branch bodies, and get an IDE to format your code - then you'll be able to see why your current code is invalid.",
        "while not strictly necessary, I would advise you to **always** follow up an `if` or `else` with a block of `{}`. This can help avoid a lot of problems (along with the ones you are currently having and some less obvious ones) later.",
        "Actually the biggest question is: why don't you start with the basics. As in: put your code into a method. It is possible to put to simply put a `{ }` block into your class directly (this is called a \"initializer block\"); but for a newbie; most likely that is not what you want. Instead; you want to study how Java classes should be structured in general. (hint: add a main-method). Then start writing few lines of code. When you think \"this looks ok; it should compile\"; then run the compiler. Repeat. Instead of writing 20, 30 lines of code ... and then trying to isolate the syntax errors within.",
        "@J\u00e4germeister : Dude, I Am learning the basics. This is code from a class on Udemy.com, I followed the code to the letter, and then found all of these errors still.  So, I made edits. But, I ended up with errors still.",
        "Suggest you do some research into basic application flow of a data driven non-static web site",
        "This community is really not beginner friendly. Getting all these downvotes without any explanations or guidance. Also, thanks @charlietfl i will look into that.",
        "what you are asking though is  far too broad based on site guidelines outlined in the help center. Downvotes are a measure of this questions long term usefulness to others. Asking about fundamentals that can be easily researched is not the objective here",
        "Isn't that what a help center is all about ? Ask question if you do not understand and as the saying goes \"no question is stupid\". And what makes you think that I haven't done the research ? As I said, I have no formal CS background, I've done some readings and I do not understand, obviously I'm seeking knowledge and suggestions here. But people that downvote without bothering to help is just ridiculous, you are just deterring people from learning. If i know the answers, I wouldn't even bother posting here at the beginning.",
        "Perhaps you need to read the rest of the book?",
        "which book are you referring to?",
        "This is the book : http://www.amazon.com/Pro-ASP-NET-Experts-Voice-ASP-Net/dp/1430265299/ref=sr_1_1?ie=UTF8&qid=1438346418&sr=8-1&keywords=asp.net+mvc+5",
        "I belive that it is \"Pro ASP.NET MVC 5\" by Adam Freeman. Anyway, it's just a code sample to show you how to build your application structure, it is not tied to any specific library.",
        "shouldn;t this $mail->ErrInfo be $mail->ErrorInfo",
        "Most ISPs will only send mail from an address they recognise on their own servers. `example.com` is a reserved domain, so the mail server has rejected your email because it doesn't recognise the address.",
        "correct Satya: I now get this error: SMTP server error: 5.1.0 Authentication required",
        "Hobo, is there a way around that?  In the LH article they spoof fb.com : http://lifehacker.com/how-spammers-spoof-your-email-address-and-how-to-prote-1579478914  I'm not interested in spoofing, but I'd like to at least get this working.",
        "@veta test with legit addresses from and to",
        "hey dagon, I did try this out and it works.  I don't want to be using my gmail account though.  I'm also taking a MOOC right now where the professor spoofs the FromAddress and I'd like to get it working on my end that way.",
        "I would suggest trying to use a different domain other than example.com for a from address. If you run your website with your own domain name, try setting up an email address with it (if possible) and use that instead. Otherwise, try an email address that is 100% valid.",
        "Why are there so many downvotes on this post",
        "Dunno.  I'm guessing at 'no aparrent attempt to debug':(",
        "beginners have no idea how to do that and the guy atleast showed some effort his logic is a bit flawed nothing else seems wrong",
        "@rahultyagi *\"This question does not show any research effort\"* is the first suggested reason to downvote a question.  If you hover your mouse over the downvote button, you will see that text.  I suspect that the downvotes are communicating that - no evidence of research or an actual useful question.",
        "'beginners have no idea how to do that' - then they should learn when progressing beyond 'Hello World', instead of posting on SO as the first option.",
        "@DrewDormann I think it might discourage the OP from asking questions however since its necessary to maintain the quality so I get it.",
        "Is the file `\"DATA.DOCX\"` in MS Word format? If so, it will be a difficult task.",
        "PLEASE DON'T SHOUT. *Edit*: I've removed the shouting for you, and other irrelevancies. Please look at the edit so you know what to do for next time. More details about what you think is wrong would also be good.",
        "Have you tried using a plain text file?",
        "Examine the condition in your loop closely. And use text files, not MS Word files.",
        "I wrote a program using ___CAPS LOCK ON___",
        "Welcome to Stack Overflow! Please take the [tour], have a look around, and read through the [help], in particular [*How do I ask a good question?*](/help/how-to-ask)",
        "Shouldn't that be: `while ( !ifs.eof() )`?",
        "@JohnnyMopp [Not really](http://stackoverflow.com/questions/5605125/why-is-iostreameof-inside-a-loop-condition-considered-wrong)",
        "Well I see from your question and your code that you love caps lock... `if (strcmp(compare,\"HOTEL\")==0)` does your data file also shout? because if not, you might need to use `strcmpi()` to get a case insensitive version of string compare. Also, what did your debugger do when you hit a string compare that you thought should return that they  are the same?",
        "@JohnnyMopp Yes and no, yes the condition is inverted, no you shouldn't use .eof() as a loop condition (\u03c0\u03ac\u03bd\u03c4\u03b1 \u1fe5\u03b5\u1fd6 beat me to it)",
        "Turbo C++ is ancient. You should work with a new compiler. And use `std::string`. And have `main` return `int`.",
        "@MikeCAT  , What's the problem with MS WORD files?",
        "@T.J.Crowder , What's shouting? Sorry But I did not understand",
        "@Abhimanyu: On the 'net (and most other places), ALL CAPS is shouting. Surely if you just looked at my edit, and my comment, that was fairly obvious?",
        "@T.J.Crowder . OK Thanks . But any help regarding the program?",
        "@Abhimanyu: There's all sorts of help above.",
        "@Abhimanyu:  Microsoft Word **data** files are not in simple text.  The contain other information, such as fonts and attributes (bolding, italic, etc) used by each word and letter, as well as other stuff.  If you want to read MS Word files, please search internet for \"MSDN read word file c++\".",
        "@RyanP , There's no shouting in my data file . I have checked it. But it still does not work.",
        "@ThomasMatthews I changed my file name to \"DATA.TXT\" and now its working. Thanks.",
        "What do you mean \u201cWhat is IEEE-754\u201d? Have you Googled this?",
        "There\u2019s even an [ieee-754 tag](http://stackoverflow.com/tags/ieee-754/info) on SO.",
        "When in doubt, read [the wiki](https://en.wikipedia.org/wiki/IEEE_floating_point), and when in great doubt, read [the spec](http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=4610935&url=http%3A%2F%2Fieeexplore.ieee.org%2Fstamp%2Fstamp.jsp%3Ftp%3D%26arnumber%3D4610935).",
        "Thanks guys , will keep that in mind .",
        "Please can we add the functionality to SO that takes the title of a question and submits it to a search engine thereby showing potentially matching answers before submission?",
        "https://www.google.co.in/?gfe_rd=cr&ei=ucoXVoGwFMLDoAPE4I-wBw&gws_rd=ssl#q=what+is+ieee+754 google page for your title",
        "@KevinDTimm lookup the subject on [meta](http://meta.stackoverflow.com/) and post your suggestion there if it's not a feature request already.",
        "@Boaz - going there now",
        "While strictly correct, the mention of IEEE-754 is something of a red herring. *NaN* represents a generic \"this is not a number\" value in much the same way that *undefined* means the value is undefined even though it has been assigned the *undefined* value. Read the [*spec*](http://ecma-international.org/ecma-262/6.0/index.html#sec-isnan-number), essentially *isNaN* returns false if a value can be converted to a number value other than NaN. Otherwise it returns true.",
        "@RobG thanks .... :)",
        "If you're interested in the long answer, read this: [What Every Computer Scientist Should Know About Floating-Point Arithmetic](http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html).",
        "@LucasTrzesniewski thanks for contributing .. will bookmark that.",
        "I'd suggest asking your teacher if you are this stuck. Maybe attend the lecture next time.  I can't see any teacher setting this exercise without telling you how to code a `while` loop or and `if` statement.",
        "The general idea to solve it, to know the size of myArray, adn then iterate and sum only by odd members. You can start with java/python version and then translate it to c++",
        "Welcome to stackoverflow.com. Please take some time to read [the help pages](http://stackoverflow.com/help), especially the sections named [\"What topics can I ask about here?\"](http://stackoverflow.com/help/on-topic) and [\"What types of questions should I avoid asking?\"](http://stackoverflow.com/help/dont-ask). Also please [read about how to ask good questions](http://stackoverflow.com/help/how-to-ask), and learn how to create a [Minimal, Complete, and Verifiable Example](http://stackoverflow.com/help/mcve).",
        "try it out yourself, ask for help if you get stuck anywhere",
        "Side-note: This exercise has probably a \"learning context\", something you've learned in recent lessons and should be able to apply. Could be the for-loop as in [Abhishek's answer](http://stackoverflow.com/a/36906914/4833). But could also be std::count and a filter iterator. WIthout knowing the context the solution(s) provided here might not help you.",
        "Possible duplicate of [how to add a sum of even and odd number of an array](http://stackoverflow.com/questions/10439792/how-to-add-a-sum-of-even-and-odd-number-of-an-array)",
        "Please don't vandalize your post.",
        "What have you tried yourself? How did (or didn't) it work? What is the *actual* definition of `buffer_t`? What does the structure look like? Please show the actual *code* for the definition of involved types and structures.",
        "For the purpose of clarity, provide type definitions for `buffer_t`, `buffer_s`, and as others have suggested, show what you have tried.",
        "Show the types and struct declarations or get closed.",
        "Personally, I would call the appendBuffer() function. It seems to do just that.",
        "Try google: https://msdn.microsoft.com/en-us/library/ms228388.aspx",
        "the fact that you can post a sensible question here but cant google how to split a string is absurd",
        "msdn.microsoft.com/en-us/library/ms228388.aspx I have tried this but i'm not quite sure how to get the front part into string user and the back part into string pass",
        "since you limit to positive integers, this is pretty easy...",
        "*\"Hint: Multiplication is just a series of addition operations.\"* - All you have to do is implement that functionality.",
        "I can't figure out what to flag this as, but this is not a question, and StackOverflow isn't a place for \"practice problems\".",
        "I'm voting to close this question as off-topic because SO is not a code writing or homework solving service",
        "What does \"How would I call this function\" mean? You would call the function using an instance of Player and an instance of PlayerTextPacket, of course.",
        "`Date` has no format. Formatting a `Date` only makes sense if you intend to output it as a `String`.",
        "Please do some research. Every conceivable question about parsing or formatting Java dates has been asked and answered, comprehensively, here on SO (and elsewhere).",
        "I min I'm making answer",
        "reserve changes capacity not size. Your `intVec` is like empty tank..",
        "why do you call `0` \"invalid\". It is completely valid for a vector to have size 0, especially if you neither want to push something into it nor init it with some size other than 0",
        "`reserve` doesn't change the size. *I don't want to use push_back instead and also don't want to zero-initialize the vector with 5 elements.* What **do** you want?",
        "Could you specify what you want this code to do so we can help you?",
        "Tongue-in-cheek answer: if you don't want to use `intVec.push_back(x)`, use `intVec.insert(intVec.end(), x)` instead. More seriously: you need to either pre-initialise the vector to a size, or add elements to it, if you want it to not be empty.",
        "So your actually goal is making a vector with 5 uninitialized elements, did I get that right?",
        "Edited my question.",
        "@user1056903 it seems pretty \"abusive\" to the vector. why not use push_back or a 0 initalization?",
        "@user1056903 I'm so confused, I think maybe you want is`intVec.resize(5,1)`.",
        "I think X-Y problem. If OP says what he want to achieve OR why we he want such thing , we can help better.",
        "After edit: That's not possible. `std::vector::operator[]` can only access existing elements, it never changes the vector's size.",
        "If you want the size to be 1 after `intVec[0] = 1;` it also has to be 1 before `intVec[0] = 1;` -  there's no way around that. You can `intVec.resize(1)` first if you're desparate for the indexing operator.",
        "@user1056903 _he size of the vector should be 1 after `intVec[0] = 1`_ No. What makes you think so? I'd recommend you first consult the [reference documentation](http://en.cppreference.com/w/cpp/container/vector/operator_at) before making wild assumptions.",
        "This feels like an X-Y problem.  What are you actually trying to achieve?",
        "I want to build a circular/ring buffer that is NOT zero-initialized after creation, i.e. no elements should be in the buffer immediately after creation.",
        "Also i cant scroll my map and zoom vertically because the scroll view scroll over the map",
        "I hope you referred the mentioned document. Thi is not a good practice to put map fragment inside the scrollview. Please let me know why are you doing like this. Any reason behind that ? I have done same thing without add in scrollview. If you would like to watch the code then let me inform.",
        "@RiteshGajera What if you have a long form and want map in the centre of it with all functionalities. Wont you use scrollview then??",
        "No, I haven't yet use. But without scrollview you can same feature achieved through SupportMapFragment it.",
        "Alok, You can perform or bind the touch event on google map. like as:  googleMap.setOnMapLongClickListener(new GoogleMap.OnMapLongClickListener() {\n\n    @Override\n                public void onMapLongClick(LatLng point) {\n     //do your stuff here..\n           } });                                                               Which I have done in one of my R&D Task.",
        "@RiteshGajera you didnt understand my point correctly. read it again if you havent. Without scrollview you wont be able to scroll through a complex long xml based form for e.g a long data entry form with dozens of fields one below another and one of them being a SupportMapFragment maybe to enter location. If you add a scrollview to the root of this layout, then you can scroll the form to view all fields, else you cant. And now in this case the SupportMapFragment wont take touch events such as scroll up and down inside map or zoom in out, and so you need to do something like I answered above",
        "The user doesnt want long click on map, he want scrolling inside map alongwith the scroll featrue outside map in the form",
        "Yes, I was gone through your answer. Actually, I haven't use yet this feature (scroll feature outside map). so i also need to check.",
        "its wrong answer",
        "Does this work on github.com?",
        "@vaughan: Looks like it does not. An enigmatic answer indeed. \"you could probably benefit from it\" -- if only you could make it work :).",
        "@vaughan\n**GitHub Pages** uses **Jekyll** which understands the _template language_ **Liquid**.\nThis is that.\n\nMore on [Jekyll gh-pages](https://jekyllrb.com/docs/github-pages/): https://jekyllrb.com/docs/github-pages/\n\nI also found a [stackoverflow question](https://stackoverflow.com/questions/41606739/what-the-the-scope-of-liquid-variables-on-jekyll-on-github-pages) with examples about variables on GitHub: https://stackoverflow.com/questions/41606739/what-the-the-scope-of-liquid-variables-on-jekyll-on-github-pages",
        "@MunamYousuf It's pretty obvious why this piece of code doesn't really work. It tracks the back button of the browser but the button is outside the viewport, hence the coordinates clientX and clientY should not be obtainable. Assuming it works, how about iOS? The back button is at the bottom... Also the way it is written is super inefficient, it is a conditional for every single event triggered... God it's so bad that am going to give it a down vote.",
        "This is horrendous! why would you do such thing? :/ and it won't even work as James said.",
        "Why the `std::string` ?",
        "@Quentin It's a fragemet of full code. The paremeter `std::string` will be use later.",
        "Please read: [ask]",
        "What's wrong is as the error message says; you're trying to return a type that doesn't match.  `(std::string str)` is not `(float par1, float par2)`.",
        "@Oliver Charlesworth I know this, but I'm interested in how to improve the code",
        "Perhaps a good starting point is to read the compiler error messages and warnings",
        "@pjaniak: Improve the code by returning a pointer to a function of the correct type.",
        "without knowing what you intend to do, all we can tell you is what the compiler is telling you: you can't return a pointer to a different function type.",
        "@Oliver Charlesworth hmm, I think that is possible to return pointer of another function type, but question is how?",
        "Change the signature of `fun`, or change the return type of `newFun`.  As @bolov says, we don't know what you're trying to do, so can only give you generic advice.",
        "not it is not possible to return pointer to another function type (I mean you could because of the \"shoot yourself in the foot\" C rule, but then you would... well... shoot yourself in the foot).",
        "@bolov Ok. Thank you all for your answers. I consider the subject closed.",
        "you have the option to delete your own question. But I don't understand why you don't edit the question to tell what you want to achieve so that we can actually help you.",
        "Do you just want to convert the code from PHP to JS?",
        "I took the liberty to changing your title by changing `java` to `javascript`, since this is what your question is about,",
        "Our solution didn't help you ? If yes, please accept it.",
        "See: http://stackoverflow.com/q/6442174/3933332",
        "I need to delete the underscores.",
        "You need to look into regular expressions and there are lots of answers already on StackOverflow to this question.",
        "Just make sure that the user actually knows what their username will be. If I'm signing up at a website using `First_One`, I want it to be `First_One`, not `FirstOne` **without** actually choosing so. With that in mind, please, at least show the user the name that will be used or ask them to confirm after the change.",
        "Did you try it ?",
        "@mdrlol It will work. No problem.",
        "Did you mean to start with `v[0]=a`?",
        "@Ninetainedo I didn't since I remember (maybe incorrectly) that it only work with constants",
        "First thing to do before posting on SO would be to try it.",
        "@Bastien: True, but that merely turns the question into \"Is this legal C++11 or a compiler extension?\".",
        "the query will only return what you ask it to return",
        "$sql = \"SELECT COUNT(*) AS Project_Name FROM project\";",
        "And what output do you get? Note that `Project_Name` is not present in your `SELECT` query so it won't be in the results either.",
        "possible duplicate of [PHP Undefined Index](http://stackoverflow.com/questions/4842759/php-undefined-index)",
        "http://stackoverflow.com/questions/6908143/should-i-put-shebang-in-python-scripts-and-what-form-should-it-take",
        "you can just type \"python program.py\"",
        "You might be interested in [argparse](https://docs.python.org/3/library/argparse.html)",
        "Terminal or commanc prompt: `path/to/python file.py`",
        "1) loop 2) test loop values 3) make decisions based on test results",
        "What have you tried? What have you thought about? What ideas did you discard, and which ones do you think might work. Show us some sign that you did more than immediately post the question here?",
        "Homework is pointless if you're not the one doing it.",
        "This isn't even a CS question is it?  Looks like math, and a quick google search should show you the formula.",
        "Too funny. You are asking math formula in stackoverflow. Increase habit of using google not stackoverflow.",
        "and what is your question?",
        "I want if user select only order_number it should display only that order, but if user select a date range and a customer, it must display orders by that customer with in that date range.",
        "could you show some sample data and expected output, it would help us to understand what you want",
        "where can I put?",
        "add it to your question",
        "https://docs.google.com/spreadsheets/d/1qv1ikEbAvNXfZIyXB6ZD_ystSEB3huo4_h7P6ULAbPg/edit?usp=sharing",
        "Check this google sheet.",
        "Please add your information to the question. Questions should be self-contained, without requiring visiting other websites. Thanks.",
        "I think this is self-explained, need just a where clause where the user can select options and if no option is selected all the records should be displayed.",
        "What do you mean by _does not work_? You get any exception or error message? Can you please be more specific about your problem?",
        "Why do you think generics are a solution to your problem? And why are you using extension methods to accomplish that?",
        "You're not declaring a generic method - you're declaring a generic *class* at the moment.",
        "Re the edit and \"i get error message from `this`\": that compiles for me; are you using a recent C# compiler? Also: saying \"this core does not work\" and \"I get an error message\" is *kinda* not helpful. Full descriptions of what happens (including copy and paste of any messages etc) is much more useful.",
        "I see what you are doing there! But I can tell you to pay attention. If the DTO is used across layers and the DAL is just one layer, then the DTO [should be an abstraction](http://en.wikipedia.org/wiki/Dependency_inversion_principle), more like an interface. I know this may add to the confusion but you are trying to do something well-documented and conceptually not easy. Welcome to OO design :)",
        "Are you to lazy to spend 15 sec. searching for the example in google? There hundreds of questions like yours here, half of them are already duplicates",
        "http://stackoverflow.com/questions/11643341/how-to-use-android-viewpager",
        "i searched but not found how to set custom style and color",
        "Did you get it????",
        "Check this out http://www.gadgetsaint.com/android/create-viewpager-tabs-android/#.WPuppVN97BI",
        "Your question is fairly vague as to what you are attempting to do or what the issue is. I highly recommend reading through these as pages:  http://stackoverflow.com/help/how-to-ask and http://stackoverflow.com/help/how-to-answer they are both fantastic resources to use when asking or answering questions and will help you get the best answers quickly.",
        "I'm sure that `group by` is working (it always has worked when I've used it).    After all, there is only one row per group, so the results look right to me.  You must be expecting it to do something it is not designed to do.",
        "I think you would have more help if you rephrased your question (make it more clear), what do you mean exactly by \" I want it to be grouped by setup_time\" ? Because if you GROUP BY setup_time, and average it, maybe I'm making a mistake but I think it will just return the setup_time ... (average with every row having the same setup_time).",
        "Your question is not clear be specific.",
        "For(Integer id : failed){cnt = id * id; sum += cnt;}",
        "how should be written this code using java 7.this is on java 8? can some body explain",
        "What are the types of `id` and `cnt`?",
        "while (rs.next()) {\n              int status = rs.getInt(\"status\");\n              int count = rs.getInt(\"count\");\n              String bankid =rs.getString(\"bankid\");\n\n              if (status == 1) {\n                  success.put(bankid, count);\n              }else {\n                  failed.put(bankid, count);\n              }\n   }\n   conversions.putAll(success);\n   \n   failed.forEach((id, cnt) -> {\n      conversions.merge(id, cnt, Integer::sum);\n   });",
        "I've tried 'performSegueWithIdentifier(\"secondViewController\", sender: nil)' not too sure if I'm missing something but its throwing up an error.",
        "Please edit your question to include this information, as well as a direct quote of the error message you are getting.  I would also suggest including more context than your little sample there.",
        "There could be several valid ways to split the same string. Do you care which one is chosen?",
        "No, I don\u00b4t care about that",
        "Anything you have tried out? Seems like you want your homework to be done?",
        "I mean, I know how to do it with the condition that the input only contains words in the dictionary ... The thing is that since there are characters in the input which aren\u00b4t in the dictionary, recurssion becomes very tricky to use ...",
        "Look into tries http://en.wikipedia.org/wiki/Trie.",
        "yeah, I actually have the dictionary implemented as a trie, but I don\u00b4t know how to use it to solve the problem",
        "What do you mean with the same *metadata*? Filename, modification date,...?",
        "\"at the same time\"? Whats wrong with one then the other?",
        "@Octopoid: well that can be useful; for instance if both xml and csv store the same format; and that it takes a long time to calculate the elements.",
        "You can still calculate all the raw data, then convert to csv and xml, then save one then the other at the last minute, if for whatever reason you want them both to be created at a similar time.",
        "What makes you think you *can't* open two at the same time? `var a = new StreamWriter(\"foo.txt\"); var b = new StreamWriter(\"bar.txt\");` - job done!",
        "I'm voting to close this question as off-topic because it's a question with a trivial answer that demonstrates little understanding of the programming language/platform, and is thus unsuitable for SO.",
        "When you say \"at the same time\" do you mean that they need to be written to the drive at the same instant? Or that they need be created together to avoid going through the streamwriter twice (maybe is too big)? You need to be more specific about your question.",
        "@DanPuzey Your answer doesn't work. thx",
        "@PedroC88 I think multi threading is the answer, because two StreamWriters can't open at the same time, which possess the same thread",
        "@DreamTutor: in what way does my answer not work? Two `StreamWriter`s categorically *can* coexist (though possibly not if they're on the same file). How about you post some code that you think doesn't work, so we have something to go on? (Use [Linqpad](https://www.linqpad.net/) and test the code I posted if you don't believe me.)",
        "Have you tried to use `Path.GetDirectoryName`, `FileInfo.Directory` etc. Try to use google before asking SO",
        "I didn't try `Path.GetDirectoryName`, `FileInfo.Directory` etc. And also i tried google as the topic and also get folders into string etc. EZI thanks for lightning..I can list folder names in another place of code, what i want is write them to a txt file..",
        "What is 2 minuses for?",
        "I'm voting to close this question as off-topic because we shouldn't help programmers creating malware or installing things without user permission and hiding them.",
        "What's the url, so I can never go there.",
        "Hello, my intention is not to create malware it only brings my page on next browser session when user asks to set it as homepage. Is there a better way to do so then please let me know I will be thankful",
        "If you're installing something on the user's computer, they should be ***very*** aware of it.",
        "There is no difference in security. The true benefit comes from decoupling the HTML from the PHP where you can.",
        "@JayBlanchard What do you mean by decoupling?  To me, decoupling means that the PHP script is in a separate file, but clearly I'm wrong on that.",
        "In this case the decoupling comes from removing as much PHP as you can from your HTML code which often means separate files.",
        "@JayBlanchard Not sure I follow.  Could you please clarify?  Your first comment says there is no difference between these two methods, but also says that there is benefit in decoupling, i.e. using a separate file.  Does that mean the benefit of using a separate file is something other than security?  If so, what is the benefit?",
        "Maintenance and the ability to make rapid changes to code when needed.",
        "@JayBlanchard Understood, thanks!",
        "Can you post your code?",
        "Is the `image` variable a container and set to stretch? If so you might indeed be over that stretched control despite only seeing the image in the upper left corner. To figure out if that is the case, don't do the `DragMove` and just click on that spot to see if you receive the event there.",
        "I would assume it is logical that `IsMouseOver` is `true`, if it wasn't, the event would not have fired in the first place. Can you produce please a [Minimal, Complete and Verifiable Example](http://stackoverflow.com/help/mcve)?",
        "With all due respect, RTFM first. (That's a _saying_, nothing personal).",
        "@SouravGhosh: The OP might be confused by the lack of space between the two format specifiers. The OP might be a beginner, and he might think that `\"%ld%c\"` is a single format specifier, that he is unable to decipher. An answer telling him to split this specifier into two parts (`%ld` and `%c`) would be better than \"RTFM\". This community should be more welcoming and more beginner friendly.",
        "@Mr.C64 Please have a look at the timeline. Already two answers are posted. After that I made the comment, As long as I know, a question should reflect the research efforts which this one particularly lacks.",
        "@Mr.C64 and by saying beginner friendly does not mean we can welcome _skipping_ [Ask] part.",
        "@SouravGhosh With all due respect , please go ahead and close the tab!!!",
        "@user3125224 sure. :-)",
        "@SouravGhosh: The fact that two answers were already posted before your comment doesn't mean anything to me. To me, it seems just a question from someone who is a C beginner (and I think everyone of us once was).",
        "@Mr.C64 We all have our own viewpoint and I respect that. To me `I am getting confused in \"%ld%c\"` does sound like `I don't know what is meant by \"%ld%c\"`, rather than `i'm confused not by seeing a space separator between two format specifiers, is this a desired behaviour?`.",
        "Actually what are you trying to achieve?",
        "It must be giving you stackoverflow exception",
        "Echo the generated SQL and run it yourself in PHPMyAdmin or terminal and the error message you receive back will help to identify why it failed.",
        "it probably means you do not even open the connection to the database...",
        "i don't get error message, i only get message \"Terjadi kesalahan saat mengirim komen!\", i use notepad++, what i should do ?",
        "i has open my connection, before this i give this code",
        "$connection = mysql_connect(\"localhost\",\"root\",\"\");\n       mysql_select_db(\"klimaks\",$connection);",
        "Try separating the query into a separate variable (`$sql`) so you can echo it to the screen. Perhaps there is an error in it? I expect it has a SQL injection vulnerability in it, in any case.",
        "Thank You very much",
        "Well, 7 is true-like, so it should print (\"Hi\") forever.",
        "And why do you think it should throw and error? I have a nice little program on my computer that prints \"y\" forever, and [it comes in handy sometimes](http://unix.stackexchange.com/questions/102484/what-is-the-point-of-the-yes-command)",
        "Errors aren't generated *every* time a computer has problems. And Python in particular will allow you to do more than other, stricter languages because Python expects you to know what you're doing. I do use `while True` quite a bit myself.",
        "Did you pass any argument? \nHow do you run program?",
        "try to print `b` instead of `a`...",
        "May be this  \n`System.out.println(b);`",
        "sorry i ment to print \"b\"",
        "still doesn't work",
        "Are you passing arguments in? How are you running the program? Can you provide more details about why it \"doesn't work\"? (like what error you're getting)",
        "This is the contents of your program...how are you _running_ the program? Through Eclipse? From the command line?",
        "i'm running from eclipse . and got this error message : Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 0\n at apples.main(apples.java:9)",
        "This is what you need to do to pass arguments: http://stackoverflow.com/questions/19646719/eclipse-command-line-arguments",
        "ok i think my class name is wrong",
        "You need to use `UPDATE` and not insert in this case. Insert is used when you're creating a new record (row). When you need to update certain columns for an existing record, you need to use UPDATE.",
        "They are all objects, see all the related questions and answers",
        "Both are objects. The former uses a literal String, the latter creates a new String from a literal String.",
        "http://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java?rq=1",
        "Without doubt this is an error in your code. Since you haven't posted any, it's difficult to know what to say.",
        "Can you give an example of what it you are trying to match?  Do you have examples of successful matches?",
        "This question does not show any research effort.  If you spent \"some hours\" studying this, you should have at least a partial understanding.  Which parts have you figured out, and which parts are you still unsure about?  On the parts you are unsure about, what do you *think* they might be doing?",
        "Please spend a minute reading [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask)",
        "please share what you have tried",
        "possible duplicate of [In Java, how can I test if an Array contains a certain value?](http://stackoverflow.com/questions/1128723/in-java-how-can-i-test-if-an-array-contains-a-certain-value)",
        "@Atul Dhanuka Check out my answer.",
        "Please refer [TableView Guide](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html#//apple_ref/doc/uid/TP40007451)",
        "Please learn data source and delegates first, you can't merge two different functionalities in one. Both are serving their purpose.",
        "If it is possible then why we use two class in our project .m and .h",
        "Use a json parser when working with jsons. Don't try to use string functions on it.",
        "Do you have an example for json parser  what about the second issue ?",
        "what is the second issue? And I guess if you just google *parse json in java*, you're going to get a lot of hits.",
        "how i can change the content of \"/1\" to 1 to delete the \" and the /",
        "Where exactly is the \"/1\" in the example you provided? I don't see it anywhere.",
        "The big number recorded in the time stamp is the amount of time, in seconds, since January 1, 2001. So I got unix time-stamp for January 1, 2001 unixTS = 978307200 (GMT)(which is also in seconds). So that now date =  str(datetime.datetime.fromtimestamp(unixTS + iphoneTS)) works.",
        "https://www.google.com/search?q=what+does+at+sign+mean+in+sql",
        "Parameters (for prepared statements): [msdn reference](http://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.parameters(v=vs.110).aspx)",
        "http://stackoverflow.com/questions/4096518/what-is-the-sign-in-front-of-parameters",
        "What do you mean? Can you show us some sample output?",
        "you know you are ordering the converted date? and i just checked it gives for today 11/12/2013 so it means you could have 11/12/2013 followed by 01/10/2012 cause it's a string :)",
        "Branch Date: Madhapur - 08/12/2013,Branch Date: Madhapur - 03/12/2013,Branch Date: Nizampet - 08/12/2013,Branch Date: Madhapur - 09/12/2013",
        "output like above datewise desc order.",
        "You should always mention the exact cakephp version you are using. It also helps to read the official documentation.",
        "If you search the internet there will be thousands of explanations to help you.",
        "Start [here](http://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html)",
        "thank you reimeus",
        "When i try to decode with above logic it says \"java.lang.IllegalArgumentException: bad base-64\"...\n\"",
        "@ArindamMukherjee show me your base64 data,it's working fine in my case",
        "\"SGVsbG8gd29ybGQ=\" try with this base 64 string,you will get out put as \"Hello world\" @ArindamMukherjee",
        "My intention is parsing the ASN1 based object data which i already have.i don't need to create it explicitly.",
        "This is clearly not the subject of the question..",
        "_What_ isn't working? Declared what as a property? `$sql` is your only property. PHP classes don't have a block variable scope inside `{}` if that's what you're asking.",
        "Can you clarify what exactly isn't working?",
        "maybe get rid of the @ as well to debug...",
        "\"not working\" isnt an error , what error php does yield? or what is the expected behaviour you do not get?",
        "I took out the @ but I'm not getting any error at all, and it's not inserting my data into the db, I don't know why, I updated my post with more info.",
        "`return (node);` is not within a method. It should probably be 2 lines higher...",
        "please stop posting answers for such a trivial problem. I am sure OP could have answer his question by himself with some little help.",
        "and usually eclipse wins..",
        "Look at this topic:\r\n\r\nhttp://stackoverflow.com/questions/20881645/how-to-display-the-statistics-about-all-the-files-in-a-folder-in-c-sharp/20881751#20881751",
        "So which line is the error on?  I would try to compile it myself, but I'm not set up for whichever character set you're using, and I'm not going to mess around with my settings just to answer this question.  (It's probably going to get closed before I can type my answer anyway)",
        "That's what I expected. Well, I want to reference the dajnasrodek() method from the main method but I don't even know exactly where to put it... Do you at least know what I mean?? I can seem very unclear in that since I'm a beginner at programming.",
        "Or, to put it simple- the method dajnasrodek() means exactly \"center the screen\" and all I want to do is to make the program automatically center the screen after the startup. Any ideas how to do this?? dajnasrodek() method is the algorithm I want to run but no luck so far",
        "No, it seems that you are describing a compile error.  But all I see is code that SHOULD compile.  If you want help resolving a compile error, you'll need to show us the code that HAS the error, not some other piece of code that DOESN'T have the error.",
        "Please be very careful when reindenting code this bad, folks.  Y'all removed one of the bugs!",
        "remove echo() and make sure your code is above html code",
        "@0n35 ah sorry sir , im forgot to put the page to called the code , i already edit my post , can you look it ? thanks",
        "How to solve it?? plz help me",
        "404 effort not found.",
        "you have to post the code here. a wall of text is likely to go unread and the downvotes will rampage.",
        "I posted a link to the page. I'll post some of the code in addition to the link.",
        "and whereisthecode.com",
        "show what you have tried..",
        "http://www.perlmonks.org/?node_id=542341",
        "As @L.B is trying to say - it sounds like you have a different problem - you shouldn't need to initialize windows desk, but find a way to stop whatever it is from killing it in the first place (or something else) perhaps?",
        "@Chris I'll explain that details, the application is a StartButton installer, it replaces the windows 8 startbutton and after the installation it closes the explorer.exe (the screen goes solid color it removes the taskbar too), then If I just re-start the explorer.exe process the desk elements doesn't initializes it only opens a new explorer window.",
        "*This is because I did a custom silent installer for an application that after be installed automatically closes the explorer.exe,* IIRC ClassicShell installs without killing explorer so perhaps do what it does ... And don't kill explorer...",
        "@ta.speot.is thanks for comment but using ClassicShell replacament is not a solution for me, I need to use the software that I've commented I've paid for it",
        "@ElektroStudios I didn't say use ClassicShell, I said *do what it does*",
        "@xpda - I think a lot of the downvote heat came from the original question (which was rather unclear) and insulting comments that followed, not due to any unusuality.",
        "I really hope you can't. I'd really like to know if an App I install is about to run up charges on my account.",
        "This is a sms forward app, so app will show prompt messge when you install app",
        "Best you can do is prominently state that you pledge to only ever forward messages to user-selected choices, so they can safely check the \"remember my choice\".",
        "What is your question?",
        "possible duplicate of [Show a number of text input form fields based on a number entered into another field](http://stackoverflow.com/questions/3827686/show-a-number-of-text-input-form-fields-based-on-a-number-entered-into-another-f)",
        "An example is given in the 3rd paragraph here: https://en.wikipedia.org/wiki/Interrupt",
        "@ Oli Charlesworth : I understand the theoretical concept . Could you please explain me with c program example ??",
        "Such interrupts are handled by the OS and drivers.  There is not going to be any sensibly-postable example.  Linux open-source - go look at some drivers.",
        "@user2984410 - An analogy - You (the computer) is thinking. The interrupt is an idiot has poked you in the ribs with a pencil. You stop what you are doing and shout an expletive. that is an interrupt",
        "There are some compilers for embedded systems that have extensions for `C` to handle interrupts, but, as others have pointed out, these are not applicable for Windows or Linux.",
        "Why just not move the script from inside your script into a separate file then? Not recommended for production though as it represents more bandwidth consumption, aka more http requests.",
        "Indexes? Have any?",
        "I can't see a question anywhere",
        "you could rewrite that query to be much simpler",
        "There is no any inex.But I will create it. I am not good in sql.",
        "@SudhirYadav - You should read this http://stackoverflow.com/questions/3449814/sql-server-equivelant-to-msqsls-explain",
        "Read a basic SQL tutorial, look for the INNER JOIN chapter",
        "It's not an interface, isn't it?",
        "Please provide code examples and/or a link to your site",
        "Vertical or horizontal scroll reduced your site width ?",
        "Umm... what?  What's the question here?  What's the problem?  What does this do?  Do you see any errors?  Have you debugged on your own?",
        "`txt = quotes.join('')`?",
        "thanks WOLF its ok but i want in another way that's means first one should disapper and senond one come and again i click then second one moved and third one come in this way i want.",
        "hello ROCKET HAZMAT now you get what i want",
        "\"JavaScript Object properties have no inherent order\" You should use array as your first attempt   http://jsfiddle.net/s8w5E/2/",
        "thank's wolf now i get what i want",
        "Why would you do that ?",
        "...sounds like homework.  What purpose would this solve?  Are you sure you don't mean string to char[]",
        "The problem is that is error is: cannot convert string to string[].",
        "Are you sure you don't mean char[] ?",
        "What do you want to accomplish?",
        "A `String[]` is an array, which is by definition more than one `String`. You're wanting to convert a single string to more than one string. Just so you are clear on what you are asking. Hopefully you can see why this is confusing us all.",
        "I just want to save it as an string[], because that value is of an string[] value, if you understand. But can you tell how to convert to char[]?",
        "Oooh yea I see... But how to save it as an char[]?",
        "is student.Sponsor a string[] and efStudent.sponsor a string ? Because if so, you want to convert a string[] to string and not otherwise",
        "Yeaa of course, you are right.",
        "Can you give me a example or something, its a bit important right now.",
        "What is `qualityPoints` and `sumOfHours`?",
        "You aren't converting a `String` to a `Double` in this code, you are converting a `double` to a `String.` The fact that you're trying to convert a `String` to a double (not `Double`) is the *problem.* -1 for not knowing what you're talking about.",
        "No, I know what I was converting, it was a typo on my part.",
        "why you are asking the same question again.Check the answers that you received earlier and if there is edits in the question then you should do it in that question not post same question again and again",
        "http://jsfiddle.net/VA43k/",
        "http://stackoverflow.com/questions/509211/pythons-slice-notation",
        "Or you could just read the [Informal Introduction](http://docs.python.org/3/tutorial/introduction.html#strings) chapter that kicks off the tutorial, which covers slices half-way down the page. And presumably any other source for learning Python (short of just hacking at code you don't understand and then asking random strangers to explain things to you when it doesn't seem to work) will cover it about as early.",
        "`this` is a key word. Not variable.",
        "What's with all the duplicates of that specific question at the moment? Is there a test going on somewhere or something? ;)",
        "Dear Lord never access your variables like that. Also, never name your object starting upper case! There are some rules for accessing data and naming conventions. Please read on them",
        "The object you are referring to doesn't have a name yet - it is \"this\" object, that's the use of it. You don't know the name of the object, but can call the current object with `this`.",
        "There is no such thing as \"the full name\" of an Object. You are confusing objects and classes.",
        "@Henrik Lol. I'm self-teaching myself JAVA from a Textbook, and finding \"this\" particular section tricky so there. I guess I should delete this question because of so many down votes :/ But its the only way to learn; by asking questions.",
        "@user3243076 Another way is by searching for existing answers.",
        "One is constant and the other is not? Also check e.g. [this reference](http://en.cppreference.com/w/cpp/language/cv).",
        "http://stackoverflow.com/questions/5822386/the-volatile-keyword-in-c-language and generally http://en.wikipedia.org/wiki/Volatile_variable",
        "Please search enough before asking questions. Related: [What are the differences between const and volatile pointer in C?](http://stackoverflow.com/questions/2089464/what-are-the-differences-between-const-and-volatile-pointer-in-c?lq=1)",
        "you should specify the version of the language that you are targeting/using",
        "@user2485710 They should also stick to one single language.",
        "Yoiks! What do they have in common?",
        "What's the difference between Panama and Apples?",
        "Improve your question by showing what you have tried",
        "you should use mysql's `DATE_FORMAT()` function... take look at mysql date and time functions.. refer http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html#function_week",
        "We have no idea what your database looks like. We have no idea what you actually want. Do you want every friday for a full year or just the current weeks friday? You're not clear enough.",
        "I want every friday not only for current week and my database is phpmyadmin.",
        "I want to display on my UI that which movie releases every friday.",
        "String.Length is read only or people would be trashing their strings by accident all the time.",
        "Show us what you have tried and we will help you solve any problem that remains.",
        "http://docs.python.org/2/library/datetime.html#datetime.timedelta.total_seconds",
        "which calendar?",
        "got homework?  .",
        "This should probably be `urllib.urlretrieve` or `urllib.URLopener().retrieve`, unclear which you meant here.",
        "Why do you import csv if you're just naming a file?",
        "always put some explanation to the answer you posted, so that others can get it easily.",
        "What's `melt`?  Is that in a package?  Is the OP supposed to know where to find it?",
        "When solution is there to your question, just put in a little effort to search it out yourself. Spoon-fed is not a good learning way.",
        "chee.work.stuff: Was that comment addressed to @RichardScriven? If you review his questions, you would see that he's actually trying to dig into the language much more than others might be willing to . I don't find your comment appropriate, and your answer doesn't seem to do anything special except drop a few columns and transpose a few others--definitely not what the OP was asking for.",
        "`But I'm not fully sure.` Why? just test it, whether is blocked(*whatever that means*) or not",
        "I couldn't test it under concurrent access, like few people using the site at the same time. That is why i'm not sure.",
        "..You can have concurrent users reading the same file, they just cant write to it at the same time...",
        "that is a read only file. I just need to read. no changes are made to that file at all.",
        "This question appears to be off-topic because it belongs on [cs.se]",
        "This question appears to be off-topic because it asking for someone else to do their homework.",
        "You need to solve 9 equations for CA and CB. In your example: sqrt(n) = 10^7 (CA, 10^7^2), and sqrt(n) = 10^9 (CB, 10^9^2). Find n.",
        "No sir i am not asking for any sort of Homework solution.. I am just asking for to explain me the question and how the example is solved in the question .. Just",
        "This question appears to be off-topic because it is about mathematical functions, not programming.",
        "Where do you get that error?",
        "what's your `i` and your `a` in the `insert` method? That's your problem...",
        "Saying that your question is \"urgent\" is the best way to get downvotes, FYI.",
        "Noted. Thanks...",
        "If you know that you specifically want internal IPs, couldn't you apply an if in the `foreach` to look for internal IPs?",
        "Add some code example.",
        "Have you looked at this? http://www.w3schools.com/cssref/sel_enabled.asp",
        "Maybe set a CSS class on the button when disabling it from server-side code?  Then use classes to target the styling.",
        "First step is to load the image and write some code",
        "I have code written and the image loaded in VC++. This is a process question, not a debugging one; I can't write more code until I know what I'm trying to write.",
        "Local notifications are not `NSNotification`s",
        "We need code to fix code. Please post your code as it stands. Also, what have you tried so far?",
        "Where would you store the certain amount or is this a fixed amount every month?",
        "A good question usually starts with \"Why\", not \"I need\".",
        "@RLW: is a fixed amount per month for each client",
        "he's a fairly new user, no need to down vote.. just help the OP with better posts in the future. its still a decent/valid question and he edited with a query.",
        "have you tried anything?",
        "\"As I read, theorically strncmp should return 0 if the characters compared of two strings are equal.\" Indeed. Your problem is the belief that `0` is considered to be true.",
        "Please read this: http://ericlippert.com/2011/04/25/something-wrong-with-the-universe/",
        "Cannot know how to free if we don't know how it was allocated.",
        "Side note, don't use the `<center>` tag, it was deprecated circa 1950.",
        "http://www.w3.org/wiki/Web_Standards_Curriculum#JavaScript_core_skills",
        "What have you tried?  You need to at least attempt to solve your problem before asking how it's done.  Without actually learning how to do it you won't build on the fundamental basics that are essential to mastering the craft of coding.",
        "I did try a few times but I deleted those. It was a solution from stackoverflow but it didn't work.",
        "apart from the quotes.. you are running mysql_query on the result of mysql_query",
        "@mishu Yo dawg.",
        "This has worked for me in the past",
        "2 words: [SQL Injection](http://en.wikipedia.org/wiki/SQL_injection).",
        "You're not doing anything in the `for` loop.",
        "Your variables are all local to each function. When you set `voterid` in `analysis`, it won't be visible in `details`. You either have to put these in a structure that you return from one function and pass to another, or use global variables.",
        "If you want to add multiple datas, you need to make an array of structures to contain all of them. You're really missing some fundamental concepts, I don't think SO is the appropriate forum to try to teach you the basics of programming.",
        "Please read [how to ask a good question](http://stackoverflow.com/help/how-to-ask). In this case providing more context for the example elements would be helpful, and knowing if they are part of a singular header for a file, or are repeated multiple times throughout the file would be good.",
        "Your XSLT won't be processed because it is not *well-formed XML* (perhaps you could do some research about what makes a XML well-formed - you will understand the code better and might discover the errors easily). Take a look at your `</Transakcie>` tag. The opening tag is inside `<xsl:template match=\"/\">...</xsl:template>`. So you have to close it there. Read your error messages. They might be helpful.",
        "use .children or .find methods like $(\"#taskrow_id1\").find('input').attr('checked', true);",
        "Am very upset with the person  who did -ve vote, you are not writing comment simply doing -ve vote!",
        "What's led you to believe it's not being calculated right?  Are *any* values in either array 0?",
        "What's the current output and what do you expect it to be? What are the starting values of salaries and schoolTaxRates?",
        "not entirely sure but it look like you are writing to same variable `total` i each iteration..so only last value wil survive",
        "I edited my post to show what was in the input file and the output file. you can see the tax that should be cut from the salary in the input file.",
        "Seriosuly. When a compiler reports an error on a line, you should *read* and **re-read** that line closely *before* you ask about it. You would have noticed the `<` you used instead of `<<`.",
        "Also, overloading the increment operator to multiply by 2 can be surprising for the uninitiated.",
        "i am just trying something new. To see if that works as well..",
        "what are u trying to do???",
        "trying to send mail as HTML",
        "Maybe the PHPMailer library could help you to send html mails: https://github.com/PHPMailer/PHPMailer",
        "add Content-type:text/html;charset=UTF-8 in your header",
        "My guess is Google would not be happy if it weren't clickable...",
        "That's a violation of [Adsense ToS](https://www.google.com/adsense/localized-terms).",
        "Remove the ad? No point having it there if the users can't click on it",
        "Antivirus like \"warning your system is infected click download now\" ... none of us are that dumb.",
        "Check the [link][1] it is already been answered\r\n\r\n\r\n  [1]: http://stackoverflow.com/questions/8240059/notification-bubbles-from-nothing-in-c-sharp",
        "What you mean by Dumb ?\ni mean that the dialog will appear in the corner what ever\nthe resolution is",
        "How about reading the documentation for the methods of `String`?",
        "http://stackoverflow.com/questions/275944/how-do-i-count-the-number-of-occurrences-of-a-char-in-a-string",
        "http://stackoverflow.com/questions/275944/how-do-i-count-the-number-of-occurrences-of-a-char-in-a-string?lq=1",
        "you will have to store it somehow.. using webstorage/cookies or via sending it to server as a request param... then read it in the second page and use it",
        "You can use session(or cookies) or Querystring for that.. and using that onpageload u can set the page name",
        "like it says `$xp = floor((($m - $s) * ($level / 98)) + $s);`",
        "Can you narrow it down? Which part(s) of it don't you understand?",
        "Wow. That was a quick down vote.\n@TomFenech If I set $level = 4, where does it go? And although I've found many answers regarding 0xFFFF on StackOverflow, I don't see how that fits with this.",
        "0xFFFF stands for the number 65535",
        "@Gab Thank you. Rather than downvoting, I appreciate that you at least provided some information and edited the question a bit.",
        "this \"Upgrading (nginx) Executable on the Fly\" indicates to send a USR2 signal --> http://wiki.nginx.org/CommandLine#Upgrading_To_a_New_Binary_On_The_Fly",
        "kill -9 is almost never a good idea, unless a process is just not responsive to the plain kill signal.",
        "Please fix the indentation to make it easier to see the differences. Also, what `float` are you talking about?",
        "There's no difference except a dramatically low parsing difference, what are you expecting from the above and what are you getting?",
        "Run the code you will see the difference",
        "As far as I can see, there's no conversion from float or double in any version, but they're both undefined due to signed integer overflow.",
        "This question appears to be off-topic because it is about a basic programming control construct (if/then/else).\n",
        "It is very basic knowledge, there are tons of resources about it. Feel free to read SICP it should answer most of your questions.",
        "possible duplicate of [How does \\`if\\` statement work in Scheme?](http://stackoverflow.com/questions/5751052/how-does-if-statement-work-in-scheme)",
        "Just looking at that code you posted, it is impossible to say what `this` will be. It completely depends on how the \"onOpen\" function is called.",
        "You should read up on scoping but in your case why not console.log it if you're unsure?  It'll tell you in a jiffy..",
        "I recommend to read the MDN documentation about `this`: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this.",
        "[`this`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this) is complicated, but usually referring to its parent.",
        "[How to create Bold data in MySQL database text field?](http://stackoverflow.com/questions/2037903/how-to-create-bold-data-in-mysql-database-text-field)\r\n\r\nMaby here is what you need",
        "I know that English is not your first language, but it is still the case that your question is unclear. You have to try to edit it and make it clear what you are asking.",
        "Are you asking why your \"ShowMessage('Thread');\" doesn't execute until after the code in your Button1Click handler has finished?",
        "Please read more into how to create threads before asking why it's not working as planned.",
        "Yes, my first lang isn't eng! Thanks",
        "I asking about work Thread when main Form is busy.",
        "I read many sites about Thread but i don't know when use a large Table why Thread not work correctly.",
        "Hi,\n\nPlease how can I save a picture that I took in my device to my database .. I want a small simple example ..\n\nthank you",
        "Bah non , My object is to save the image that i take from my device into My base SQlit .. that's my point .. i need some code :/",
        "If you really have to... check this out: http://stackoverflow.com/a/19539176/2649012",
        "is this a homework assignment? What have you tried to solve this?",
        "Shoulda paid attention in class then before they handed out this assignment...",
        "@ElGavilan It's not for a lecture actual class..",
        "Compile and view the assembly..?",
        "Since assembly language is processor dependent, what is your target processor?",
        "It means that you should learn about *undefined behaviour*.",
        "Look into ellipsis, variadic function arguments and `<stdarg.h>`",
        "What have you already tried?",
        "No down vote please, i am new to developing and i know some of you experienced guys may find it foolish.",
        "Have you tried anything?",
        "That code is not even syntactically valid and you are trying to output `$row` before `$row` even exists.",
        "why are you concatenating `$row['name']` inside that string? it doesn't exist yet. Its outside the loop.",
        "What have you read about them so far?",
        "We will gladly help if you show what you have so far, in terms of code.",
        "So what exactly is your problem? This is not a code-writing service; show what you have done so far.",
        "A hint: It has to do with the type of the inputs.",
        "I really hope that's not the complete test question. If it is I hope someone deletes the test with malice and contempt.",
        "How have you tried so far to solve that problem? Have you checked the documentation?",
        "`Directory.Delete`?",
        "Would be great to read about java naming conventions and code styles first.",
        "[tl;dr](http://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn't_read). Learn how to post [Short, Self Contained, Correct (Compilable), Example](http://sscce.org/)",
        "PLAF changes, menu bars, internal frames.. These all seem to have nothing to do with the problem, so strip them out.  For better help sooner, post an [MCVE](http://stackoverflow.com/help/mcve) (Minimal Complete and Verifiable Example).  Or pretty much what @ImmerAllein commented.. ;)",
        "I ran your code, But its working fine. First I have entered one \"space\" and clicked on the View-spaces checkbox MenuItem it is changing into a \"dot\". Then I entered a \"Space\" with some extra text (like  this \" abc\") and clicked on the View-spaces checkbox MenuItem , and it is populating as per your requirement. (Like this \".abc\")",
        "Thank you for reply. No,it was not work.for example write (abc  ) and click on Viewspace checkbox menuitem it was display (abc..) then unchecked and add(def  )and again check checkbox menuitem the result is (abc..)only not (abc..def..)this is the problem with my code.",
        "*\"I know the java conventions and code styles.\"*  Knowing them and using them are two different things.  We want you to **use them.**",
        "Can you show the code where you are calling this factory",
        "Stack Overflow is not a debugging service.",
        "Edited it.  Let me know if that looks better.  The issue i have is a javascript functionality issue (how to use), I tried to reflect htat in the new version.",
        "Please don't \"beg bugs\", especially in titles. This question will be received more favorably if simply stating the observed behavior - without additional commentary.",
        "OK I changed the title. Are you happy now ?",
        "You didn't specify `FILE_FLAG_OVERLAPPED`.  From the docs: `If this flag is not specified, then I/O operations are serialized, even if the calls to the read and write functions specify an OVERLAPPED structure.`",
        "Thanks! Yes when I add the FILE_FLAG_OVERLAPPED it works! But it stays still weird that only one of multiple operating systems cares about it.",
        "Are you sure you screamed BUG!!!! loud enough? You'll know you did if you're **really, really** humiliated for proclaiming at the top of your lungs that you discovered a bug and then find out you've just failed to read the documentation properly. (The moral of the story: Never **assume** that you've found a bug that millions of other users never found, particularly in an API function that is used so heavily internally within the OS itself. Always know that odds are very high that the problem is in your code instead.)",
        "I answered your question below.",
        "It's probably the contents of the dictionary printed in the debugger.",
        "@mAu is right. The json is well constructed, that is the debugger representation.",
        "Have you read the notice text? `Undefined variable: name` <-- that's it. It's undefined",
        "what is the solution.",
        "just don't try to access undefined variables",
        "or define it....",
        "It's called a ternary operator.",
        "possible duplicate of [What is the Java ?: operator called and what does it do?](http://stackoverflow.com/questions/798545/what-is-the-java-operator-called-and-what-does-it-do)",
        "where you find this code?",
        "just google **regx**",
        "Please don't shout, and could you describe the problem some more than just \"is not working\"?",
        "What are you trying to achieve?",
        "What is meant by not working? Do you get an error? Or you get the output other than expected? Please, edit your question with more details",
        "select affected_ci,ci_name from sitequota.incidents, ci_table where incidents.affected_ci <> ci_table.ci_name",
        "it has multiple queries",
        "i tried this but distinct doesnt work select DISTINCT(affected_ci),ci_name from sitequota.incidents,appwarehouse.ci_table where incidents.affected_ci <> ci_table.ci_name",
        "You cannot apply DISTINCT to just one column. It affects the whole row. So, in your case it will remove the rows that are fully identical.",
        "Please include your code as formatted text, not as an image.",
        "That doesnt make any difference i guess",
        "What doesn't make a difference? It makes it easier for us to help you, since we can copy the code and try to run it ourselves if necessary.",
        "Sorry i didnt knew that i am not a regular user.",
        "Which is why you should listen to our advice and not just assume that it \"doesn't make any difference\".",
        "Please replace your image with actual code.",
        "Do you actually have a \" \" Space between the two \"<\" symbols in your last line?  \"cout < <\"",
        "Please read this: http://sscce.org/",
        "Please reread: [How to Ask](http://stackoverflow.com/questions/how-to-ask) and [help center](http://stackoverflow.com/help) on how to ask a question. Specifically, how to include code, and only asking 1 question per question.",
        "This would not execute the perl script.",
        "using C# or Visual-C++?",
        "`System::Decimal` - that is not C# IMO...",
        "Combining C++ with C#?",
        "Maybe you can ask Microsoft to release a `C+#` compiler for you!",
        "What is your question exactly? Where is your html code? What did you tried already?",
        "string cs = WebConfigurationManager.ConnectionStrings[\"LocalSqlServer\"].ConnectionString;\n\nSqlConnection con = new SqlConnection(cs);\n\nstring sqlStatement = \"CREATE TABLE dbo.prince (stuname CHAR(50), stuaddress CHAR(255), stubalance FLOAT)\";\n\ncon.Open();\n\nSqlCommand sqlCmd = new SqlCommand(sqlStatement, con);\n\nsqlCmd.ExecuteNonQuery();\n\ncon.Close();",
        "but my code but i want input form user to create dynamic tables columns name etc",
        "See the documentation",
        "Your application is already throwing an error when it's crashing. what you need to do is catch the exception, and handle it (print appropriate message to user etc.)",
        "see http://docs.oracle.com/javase/tutorial/essential/exceptions/index.html",
        "Yes. If you don't do so, the sender doesn't get the information that you closed the connection. Not closing the body may leak file descriptors.",
        "Just for curiosity: What in the documentation is unclear here?",
        "Are they static or dynamic ?",
        "some are static, some are dynamic",
        "possible duplicate of [Passing Data between View Controllers](http://stackoverflow.com/questions/5210535/passing-data-between-view-controllers)",
        "What you exactly want is not clear...",
        "i want to get html code from .aspx pages",
        "This question is off-topic since the OP did not do any research on his own.",
        "I have tried cURL and file_get_contents bui it dons't work",
        "Broken Heart and  Y U NO WORK and others if u think u can vote down question even dont ask the problem,ur more stupid then me",
        "maybe you need to post the codes of what you have tried so far",
        "its a dog which watches you at work, learns from you and will take over your work if your busy. I am sorry, just google it.",
        "A Google search will tell you more than we can. In short it's a fail-safe mechanism that's used in case of time-outs",
        "Maybe your boss wants you to implement and AI that simulates the behaviour of a watch dog, like those from Call of Duty :P",
        "Where is your code, what have you tried?",
        "`new array` expect an int (the length of the array). What are you trying to do exactly?",
        "get out dynamic array from asynctask",
        "I'm not quite familiar with android, yet I feel your code doesn't make sense or follow any logic. can you explain your logic plz?",
        "What were you trying to achieve when you wrote `Lzakupow = new double[Lzakupow()];`? What do you think this line of code _should_ do?",
        "You should follow java naming conventions also. Classes start with a capital letter and variables are camelCase where the first letter is lower and each new word is then capital. Like this Class: `SomeClass` Variable: `thisIsSomeVariable`.",
        "Welcome to StackOverflow.  Please try to make you questions specifically about code.  For example, are you asking for the SQL to show the three fields you listed?",
        "Can you copy and paste that section of code also please, it's difficult to read.",
        "Boolean logic for 2 simultaneous negatives needs OR not AND.Change AND to OR and put the 2 conditions in parenthesis.",
        "You have the `column IS NOT NULL` condition in the `LEFT` join `ON` clause, not in the `WHERE`, that's why.",
        "-1 for pasting an illegible screenshot.",
        "I just uploaded it via SO's available tools, the original I have saved on my computer is more than good enough to read.",
        "Post code, not images.",
        "Thought it would be easier to show the results I got and the sql in a single view, with highlights for clarity, no need for a public lynching.",
        "Where is the lynching? People have been trying to help you. Why haven't you edited the question yet, removing the image and posting code?",
        "This particular question is solved(when I try to mark an answer as accepted I get \"You can post in 2 minutes\", which doesn't make much sense), however it brought up another question, I don't know whether to make a new post or do it all through here.",
        "Why would you do that?",
        "Are you just asking about the return statement? Have you noticed any side effect? What's the actual problem?",
        "I would assume so, have you `jsfiddle`'d it? Are you thinking on the lines of, you may not have a name yet so when you want to populate the `Person` function you want to return nothing until the name has been set?",
        "You need to show us the code, especially around line number 164.",
        "Depends on how you read in the text file.",
        "Use any loop: `for(;;)`, `while(...)`, `do{ ... } while(...)`. There are several ways to accomplish this.",
        "Initialize cursor helps with deprecated method, really?",
        "Do you just want to append the string you have with quotes?",
        "Just a guess `$lines = json_decode($lines);`",
        "are you getting data in $lines. do a print_r",
        "$lines is neither an object nor array, therefore you can't iterate over it with foreach. Convert it properly. If you don't know what's inside, use `var_dump($lines)`",
        "if(is_array($lines)){foreach($lines as $line_num => $line){//your logic}}\nAdd a check if $line is an array",
        "`file_get_contents` reads file into `string`, not `array`.",
        "http://php.net/glob http://php.net/foreach",
        "It's 3. 3 isn't dividable by 5, so the remainder is 3, which is what the modulo operator gives you.",
        "% is the modulus operator in Java and many other languages.  So it checks what the remainder is after you perform the division, in this case, what is the remainder of 3/5, which is 3.",
        "Exactly how much research have you carried out?",
        "@kolossus in all fairness, you can't use puntuation signs or things like `%` on Google.",
        "I find it very hard to believe that references regarding the module operator are \"blocked\".",
        "Next time try searching like http://stackoverflow.com/search?q=%5Bjava%5D+what+is+%22%25%22+operator",
        "That's it: stackoverflow is the search site using special charaters :)",
        "@AntonH - Fair point",
        "@AntonH in all fairness, if you just write 3%5 in the google search bar, =3 pops up as an suggestion and if you click search the first result is a calculator showing 3 as an result. [link](https://www.google.de/search?q=3%255&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:de:official&client=firefox-a&channel=sb&gfe_rd=cr&ei=a2zaU7H3B6yH8Qe22IGoBg#channel=sb&q=3%255&rls=org.mozilla:de:official)",
        "@Gumbo I knew Google worked as a calculator, but I didn't know this. It even gives the name 'modulo'. You learn every day.",
        "@s\u1d1c\u0280\u1d07s\u029c\u1d00\u1d1b\u1d1b\u1d00 You can know a lot about math, and still not have learned that the `%` infix operator is bound to the modulo operation in Java.",
        "@AntonH glad I could help you :)",
        "The question is how to do this at run time with varying width content",
        "so.... what have you tried?",
        "Why would you want this?",
        "Take a look at the Javascript `navigator` object",
        "The problem with this solution is that it would replace any other styles in the `style` attribute instead of just changing/adding the `width` property.",
        "What have you tried? https://www.google.com/search?q=C%23+convert+into+to+string",
        "What is `code`? What is `Self` (did you mean `this`)?",
        "No its self in xCode its some kind of modified c#",
        "Have a look on http://www.tutorialspoint.com/python/list_max.htm, (first result on Google). So next time investigate your problem. most of the times when you are new to something, you encounter very basic problems which are already discussed 100 times on the internet. If you can't find a solution post a question on SE.com and show what you have tried.",
        "You can parse it with inbuilt json library. show what you've tried so far.",
        "have you even tried anything... see [What types of questions should I avoid asking?](http://stackoverflow.com/help/dont-ask)",
        "`JSONObject jsonObject = new JSONObject(str);` -- you can start from there.",
        "Please put your ajax script and the data it is fetching as well. A sample is sufficient",
        "Why do I put the cons? \nThis site unwelcoming",
        "What is your aim?",
        "I'd be surprised if this compiles at all... `For` instead of `for`, fancy double quotes instead of straight quotes... Also, Java style suggests you use `int[] x` instead of `int x[]`.",
        "\"And also I don't understand this question very much\" - if *you* don't understand the question, how are we meant to? And surely to answer \"will this work\" you should at least see if your code *compiles* first.",
        "What do you think that line should do and why?",
        "What do you intend for that line to do?",
        "What exactly does `int object.getSpawn().setUse(false);` mean?",
        "When you make an error like that the compiler tries to make sense of it.  The first attempt is probably to consider `int object` as a declaration.  It would then observe that there is no semicolon after that \"declaration\".  Hence the error message.",
        "Any comments on the downvotes?",
        "`system` returns the script's exit code. Use [backticks](http://www.ruby-doc.org/core-2.1.2/Kernel.html#method-i-60) to capture the script's output.",
        "I didn't downvote your question, but it's not clear to me what you're trying to do here ... maybe you can clarify your question.",
        "@Stefan: backticks give me - Syntax error: word unexpected (expecting \")\") error.",
        "`output = \\`ruby #{path}\\`` should work",
        "@Stefan - why don't you add it as an answer.",
        "Use a setter in your `Enemy` class to set the reference to the `Player` instead of initializing a new `Player`.",
        "Thanks @Mena...",
        "You meant to write `$('#hello_homepage')`, right ?",
        "Actually, your code is full of errors, wrong selectors etc ...",
        "That's what only half learning a host of languages has provided me with, so I do apologise for that.",
        "This post does not answer the question. The question is about building a release for IOS using the command-line tools. Not the Online-Build-Service.",
        "That's not JSON",
        "Decode, remove, encode again. Doing string manipulation on JSON does not look sensible.",
        "Whenever you have large amount of JavaScript code, and you want to test if you have correct syntax...JSON format you can use www.jsonlint.com. its a nice tool...check it out if you have not seen it before....",
        "Please clarify what your problem is, what you tried, and edit your title: make it shorter and more meaningful",
        "Render SVG on any browser generated through inskscape I tired it's not working .",
        "Without the whole file we'd only be making wild guess at what is wrong.  Either put your HTML page up on the web somewhere, or find a small SVG that shows the same problem and post it in your question.",
        "Please format your code so that it's easier to read and read this post: https://stackoverflow.com/questions/5963269/how-to-make-a-great-r-reproducible-example",
        "now it shows a \"dim(x) must have a positive length\" error",
        "this is not even close to answering the upper question",
        "So, how would you display, \"msg\" as an image to img?",
        "post activity_main.xml",
        "Yes, it's possible. Is there anything else we can help with?",
        "boooo...........",
        "have you tried testing them? please do ;)",
        "Compile it (I don't think it is). Run it. If you face exception, let us know. Sure we will help.",
        "I get to both exmaples `java.lang.NullPointerException`.",
        "http://howtodoinjava.com/2012/11/09/how-to-find-duplicate-words-in-a-string-in-java/",
        "What does `sizeof(arr)/arr` mean??? You probably want `sizeof(arr)/sizeof(*arr)`...",
        "A pointer is technically an integer value, where the value is the address where the pointer points to. If you want e.g. `head` to point to where `temp` is pointing, straight assignment is what you should do. If you use the address-of operator, you tell `head` to point to the `temp` variable, and not what `temp` points to.",
        "You seem to be confusing \"the address of a thing\" and \"the address of a different thing\". The address of *any* object `x` is always `&x`. That's also true for arrays. But *additionally* the array expression itself decays into a pointer -- but a different kind of pointer! It decays into the pointer to the *first element*. That's a  different animal from the array itself. So both `arr` and `&arr` exist and make sense, they're just different things.",
        "I think  you confused between address of pointer and address pointed by pointer.",
        "If you feel, that your question might get misinterpreted or get a too formal answer, bold plus italic font won't change that\u2026",
        "@Jayesh can you give me link to any video that might help me getting this concept?",
        "some comments about what your code does would have been helpful",
        "\"I know why\" Will you tell us, or do we have to make sense of your code all by ourselves?",
        "`testing3 = {\"aab\" , \"baa\"]` is a mutant `dict/list`. is frags meant to be recursive and what exactly is it supposed to be doing?",
        "Don't just wipe out your whole question because you've got your answer. Please see http://stackoverflow.com/help/someone-answers",
        "You're trying to add a `TodoItem` to an `ObservableCollection<Person>` - what would that even mean?",
        "\"TodoItem\" was not what i meant, sorry -- I just edited \"TodoItem\" to \"Person\".",
        "TL;DR; condense your code down to the relevant parts",
        "Don't post the whole project. Post only relevant code.",
        "Also: your class `CurrencyDic` does not even have a `Add` method",
        "You're creating a dictionary from `string` to `Dictionary`; the \"What Goes Here?\" would be: the string that you intend to use as the key... quite possibly `currency.Code`, but only you know for sure",
        "Are you asking what to use as the key? It's a string. And as @derape says, you're not exposing an `Add` method on your wrapper class.",
        "Btw; why does the `CurrencyDic` class even exist? That seems entirely unnecessary (and poorly implemented)",
        "Why would you want to change code which can perfectly use a `List` to using a `Dictionary`?",
        "because that's what the assignment is all about...",
        "In general \"does not work\" immediately gets downvotes by me - it's the worst error description. You may want to debug your code first and try to find out what of the code doesn't work.",
        "This is btw horrible code and horrible architecture! Take the time and use a boilerplate, a framework etc. and clearly split your JS, your PHP and your frontend markup. You'll thank yourself later :)",
        "\"Javascript in php\" name for post was already used.\nI never learned JS, or PHP, it's just logic, if it works, I'm proud, I only know HTML.",
        "The statement refers to the fact that in <Java 8, *only* `final` variables can be accessed, but in Java 8 *also* those that are *effectively* final.",
        "I only see code which doesn\u2019t work, regardless of whether you are using Java\u00a07 or Java\u00a08.",
        "This question appears to be off-topic because it is asking for others to write code for the asker.",
        "Could you give some code that you've tried already?",
        "Solve `n*(n-1)/2 = (max*(max+1) - n*(n+1))/2` => `n*(n-1) = max*(max+1) - n*(n+1)`",
        "If it works you need to post this on [code review](http://codereview.stackexchange.com).",
        "Every heard of a database? They are designed to do exactly this.",
        "or this `empDetails = empDetails.ToList().Select(val => val.Split(new char[] { ',' })).ToList().Where(val => !empToRemove.Contains(val[0])).ToList().Select(val => string.Join(\",\", val)).ToArray();`",
        "You didn't per chance get a low-quality warning, maybe even a block you worked evaded by not properly formatting the code?",
        "Please ask a specific question. What is this supposed to do, and what is it doing wrong?",
        "What is a cat suit?",
        "What is the content of your data file ? You say that you have no idea of what you're doing, but you are posting a entire class. Do you understand this class ? Did you write it ? Or it is a resource that a teacher let you complete to implement your program ?",
        "My friend and I are working on this. But even she has no idea of what we should do. We took the code on our handouts and also some online. Since its also our first time using Python.",
        "This is pretty complex for a first exercise - you should talk to whoever gave it to you about what you're already expected to know.",
        "Ok take a look first at \"http://fr.openclassrooms.com/informatique/cours/apprenez-a-programmer-en-python\" (french version of the tutorial as you are interested in french) and to http://en.wikipedia.org/wiki/Trie . Then you should teel us what is in your 3 files. words with meaning ? words with information about such as infinite version of the word ? Clarify our need please. And @jonrsharpe +1",
        "Actually I have 4 Files. First is for the verbes ending in ER, Second ending in IR. 3 and 4 are the Suffixes for verbes ending in ER, IR. The program must ask the user to input one word and then it should be able to tell which form it is in french. for example. If I will input \"aimerais\" it should have an output of aimer / conditionnel 1\u00e8re person singular. sorry my english is bad in explaining.",
        "I'll post you a stub program tomorow morning.",
        "This question is unclear. If you want us to help you we need to understand what the problem is. If you want some help writing the question, have a look at the [help center](http://stackoverflow.com/help/how-to-ask)",
        "Add `,-4` right after the `+1`?",
        "@NiettheDarkAbsol This was a script I found on google, I didn't write it.",
        "try this simple option `rtrim($_SERVER[\"SCRIPT_NAME\"], \".php\")`",
        "That's going to fail horribly if any of those keys aren't there. You need to test for nil.",
        "This response coming from google api. this will change by google. we can't change. So we have to prevent also horribly fail or crashing issue through conditions like you have given answer.",
        "Well, that's because DownloadFileAsync returns void, not a string. And \"Async\" doesn't mean it's going to give you the filename, it means it's going to do the work asynchronously. What filename do you want it to contain? `scoopscache.html`?",
        "Yes scoopscache.html or any other file name i will give but yes the downloaded file name.",
        "You seem to know what file name it is without having to actually download it. Why can't you just pull it out of this line: `Uri uri = new Uri(\"http://rotter.net/scoopscache.html\");`?",
        "Yeah, fairly sure you will be programming in C++ or something else.",
        "\"available programming languages for Tizen are HTML5, C **and C++**\" <- if you stare *really* hard at this sentence, you might just find the answer to your question",
        "From http://en.wikipedia.org/wiki/Unity_(game_engine), which was in the top 5 search results for \"Unity\": *Programmers can use UnityScript, C#, or Boo.*",
        "You need to post code! And say what the error is!",
        "I can not post the code because it is a huge project...the error is \"Old format or invalid type library\"",
        "Did you do a search for your error?",
        "yes,and most of my search results advanced my to make an installer to my project and include the .NET version required",
        "I don't mean to be insulting here, but frankly this question is not one that should really appear on SO.  This is not the place to come to learn theoretical concepts, a good book on OO will be a much better place to start",
        "Have you heard of google? [MSDN](http://msdn.microsoft.com/en-us/library/527aztek.aspx)",
        "See [What is better in calling a method: creating an object, or make the method static?](http://stackoverflow.com/a/24997534/3453226).",
        "This would revert changes to the file, wouldn't it?",
        "That particular statement is not a valid syntax and will give you an error.  However it's _you_ that need to \"clarify with details\" what you are looking for.",
        "This statement is not even valid syntax. But assuming you meant join table 1 and table 2 with valid syntax, you can start here to understand joins: http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/",
        "Oh, and while you are at it, why not simply input this into a mysql prompt and see what happens?",
        "@narendrak, check out joins, illustrated in a very clear way, all details in the [Link](http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/) here",
        "So it will print the value of the variable and not just literally b1.cc",
        "\" \" will print a space in the screen",
        "Thanks a lot. I didn't understand that \"\" is creating a space here that's why the quotes were confusing me!",
        "4th or 5th time?",
        "Seems like an assignment question with no effort shown from the OP to solve the asked question.",
        "print value of `j` if you are not able to figure out whats being added to `sum`",
        "Don't call your variable `sum`, which is the name of a built-in function.",
        "You want to remove all non-zero digits?. Show us the sample output.",
        "Do you want to `replace all` series of `one or more` digits which are not zeroes (are in range `1-9`) with `,`? If that is the case than why in your result there are more zeroes than at in your input?",
        "@TheLostMind it's not that simple I guess, note that the number of zero was changed in output.",
        "@Kent - Actually, I am not able to understand what the OP wants.",
        "@TheLostMind I am glad to know that I am not the only one. :-)",
        "<quote>if there is any visible elements and then hide</quote> visible could be some different thinks, do you mean display:none ? visible:hidden? other ?",
        "When a user clicks on a topic, to the right there is going to be a description of what the user clicks on.  I honestly don't know which I mean.",
        "Typically the OP already knows what he wants to achieve, has made an attempt at coding it, and comes here when he gets stuck.  How are we supposed to help when you don't even know what you want?",
        "I know what I want. I have worked on it, tried jquery and javascript, both have failed (it could of possibly been because of a reference issue on them).  I need to hide all elements when one is clicked to become visible.",
        "Simply hide all elements at first, then show the one you want.",
        "You could try [learning C#](http://www.learncs.org/) and [reading the MSDN documentation](http://msdn.microsoft.com/en-us/library/system.windows.forms.label.aspx).",
        "\"Don't work\" isn't much to go on, regardless of how obvious the problem is. If there is an error message then you should let us know what the message is and where. And no, it doesn't help to tell us it's on line 42.",
        "This does not meet the guidelines for posting here.",
        "`countOf()` what ? what is it supposed to count ?",
        "like the occurrance of any char like \"a\" of a given string. Something like: if str is string object then str.countOf(\"a\");",
        "Let aside some introductory programming exercises, when would you need it?",
        "I am not saying that if java did not provide indexOf() method in string then we can not calulcate the index of the given char in a string. And it is up to imagination on when we would need the countOf() method, there are number of cases and requirements. Again i was interseted in discussion of is there any particular reason behind leaving it.",
        "Is there any particular reason for including it? Other than it's convenient for you?",
        "Yes, the first few things that comes to my mind is the performance optimization, handling complex string matching patterns,And standard JDK provided behaviour. And yes these methods are primarily for convenience.",
        "_\"If so where exactly?\"_ Text/code segment of your program. Have a lookup for linker maps.",
        "If it had no location, you could not call it!  The mechanics of compiling, linking, relocating and loading are architecture/OS-specific and too broad for SO.",
        "Are the number and the non-numerical characters always seperated by a space, or not?",
        "Tried something?",
        "Show us what you have tried. You could for example use str = line.split(\" \"). It will give you 2 strings in an array, the first is your number (which you can extract with Integer.parseInt(str0]).",
        "google can help you.",
        "Im not sure what you're asking..",
        "So you are doing some kind of reverse engineering here?",
        "A html page may contain many javascripts, the execution of each javascript block (starts with <script>, ends with </script>) may change DOM. What I'm asking is how can I know which part of DOM get changed/updated when a javascript block get executed.",
        "If a DOM element is beinh changed by a block of code it should tell you in the code which element is being changed. Post some code and we will be able to point it out for you.",
        "It's better if you write a brand new JS engine from scratch (any existing open source one won't help you, since their purpose is totally different) Even if you handle that with headless browsers such as zombie/casper/phantom e.g. you will need huge amounts of processing power for each website. Tip: It's easy to mimic spidermonkey so that you can provide a working DOM implementation to the target script blocks, here is good start point https://github.com/w3c/Amaya/blob/master/Amaya/amaya/javascript.c",
        "That's not really answers your own question which was: how to list the available tags of a repository :)",
        "I see that you are commenting on the other answer. Is there a specific reason as to why are you ignoring my post?",
        "Sorry Siddharth i didnt check your comment if you have any idea please help me to out from this problem",
        "I already mentioned PURE CSS not javascript",
        "Then I would like you to see other answers, they have solved it pure CSS",
        "The question is how to do it using only CSS. This is a valid answer only if it is truly not possible.",
        "A google-able question . super() is for calling superclass' constructor .  this() is current class",
        "`this` refers to constructor of (guess what...) current (this) class. `super` refers to constructor of superclass.",
        "https://stackoverflow.com/help/how-to-ask",
        "play with CSS(position,z-index etc) [http://www.w3schools.com/css/css_positioning.asp]",
        "Can the people who down voted my answer please also provide a motivation to they did so? That would be helpful.",
        "You're being downvoted because your answer is not appropriate for this site.  The question was how to check the device version using code, not a step-by-step on how to check the settings on the device.  Your answer would be more suitable for Ask Different.",
        "@ecnepsnai But I mean, if this is a programming question, doesn't it make sense to at least say what programming language you are using?",
        "Hey! let me google that for you: \"probability density function Matlab\": http://www.mathworks.co.uk/help/stats/pdf.html.\nthen use plot().",
        "I think the OP wants `hist`, not `pdf`",
        "@LuisMendo The the OP is abit confused with nomenclature! :P good point though.",
        "@mohamad: Welcome to Stack Overflow. In general, \"give me the code\" questions are not welcomed here. You'll want to do some of your own research and experimentation first, and then tell us what you have tried. We're here to give you direction, but you should assume you'll need to write the code yourself.",
        "thanks jasonmc92 for your advise.",
        "The OP is using 3.x (note the question tags), where `Tkinter` is renamed to `tkinter` (see e.g. https://docs.python.org/3/whatsnew/3.0.html#library-changes). You are presumably using 2.x.",
        "The question relates to a URL a user has entered, not the address they are visiting.",
        "You should get a debugger and step through it. That would be faster than asking someone else to do the same.",
        "Your code runs good and outputs 496: https://ideone.com/t4DEJm",
        "How are you allocating the memory?  I'm guessing that you're trying to write to an uninitialized pointer.",
        "I am just doing that:\n\n     char *str;\n scanf(\"%s\", &str);\n str += 2;\n printf(\"%c\",(str));\n\nIf I type 'TEST' I will get a 'V' in the standard output.",
        "You need to put that information in your question.",
        "I do not think that the second example will compile",
        "at least you will see the difference if you tried running the code first.",
        "-1 for not even trying to compile the example code.",
        "In a quick guess, the second example wont' compile... Statements inside the first example would make it a property type whereas no get/set in second example would expect it to be a function, which is wrong by the syntax.",
        "What do you mean by \"won't let me run it\"?",
        "Your code is damaged, it matters where the `{}` from ButtonClick are. Caopy/Paste real code .",
        "\"compiler says no errors\" - I find that a bit hard to believe.",
        "That said, where do you think you are calling your method?",
        "Are you aware there is a Math.Max function in C#?",
        "I think you need to follow a tutorial on C# or something. This is full of syntax errors.",
        "CODE IS NOT CORRECT.. Method is out of Class and look at the call of private method in `calcButton_Click`",
        "The value of `Altitude` **is** being set (in the `SomeInformation` method). If the `if` block was not hit then the view would display an empty string not \"LATITUDE2\" as OP has stated.",
        "My answer was submitted before the OP fixed that section of the code. Before it was fixed, the code was setting Latitude and Checking Altitude. Now, the code sets Latitude checks Latitude... not altitude, like you have in your comment.",
        "Altitude or Latitude makes no difference. This has absolutely nothing to do with OP's problem.",
        "i dont understand \"offset\". how are offset and temp related>",
        "Somehow I feel that the included code was provided by the teacher.",
        "Unicode, the character set used by Java, has 1039 uppercase characters, 27 of which do not have corresponding lowercase characters. A key part of programming is avoiding incorrect assumptions.",
        "Please make your question clear if you want the members to understand and answer.",
        "Hi, what did you try? [SO Help center: How to ask](https://stackoverflow.com/help/how-to-ask) \"Pretend you're talking to a busy colleague\".",
        "I'm just asking people with more experience how to write that, if you don't know how to move along. If you do please help.",
        "No need to be rude. Also, you already asked a [*very* similar (but much better formulated) question](https://stackoverflow.com/questions/24147240/typedef-enum-in-swift) a month ago, and you did not accept any answer. It doesn't encourage people to help you.",
        "what is the problem?",
        "Is `mark` definitely a number, not a string? (Also, you don't handle `mark == 8` or `11 <= mark < 12`.)",
        "please state what's your input and what your expected output should be",
        "One of the things that annoys me most about python is that it does \"duck typing\", but doesn't do it was completely as perl. In perl, if `$mark` was \"9\", it would work as expected, but in python `calculateGrade(9)` will work but `calculateGrade('9')` will not.",
        "Hi everytime I run the program I enter a number I just get no error but nothing prints out on the shell. Thanks Edit: Write a calculateGrade function that takes a mark as a parameter and returns\nthe corresponding grade as a single-letter string.",
        "@Noskes: Hm... maybe... call the function...?",
        "Is this your complete program? How do you enter the number? I have a feeling that you use Python 2.x and `raw_input` (but no `int`).",
        "@PaulTomblin Python is dynamically **but strongly** typed; implicit conversion doesn't happen.",
        "Yes it is, Although I think I've been silly and It is working sorry for the inconvenience.",
        "@Paul: well, the [weak typing](http://en.wikipedia.org/wiki/Strong_and_weak_typing) (not the same as duck typing) can ignore some errors; _Errors should never pass silently._  \u2013 `import this`",
        "Why did you not even bother to [Google this question](https://www.google.com/search?q=difference+between+C+and+C%2B%2B&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a&channel=fflb) there are HUNDREDS of articles on the differences between C and C++.",
        "Well the main difference is that using C classes is pretty hard, given the fact that it does not have them.",
        "I suggest cutting your losses and deleting this ... question.",
        "What sorting are you talking about?",
        "What do you mean by \"not able to print\"? Do you get some errors/exceptions or maybe unpredictable output? BTW you should start indenting your code. This helps you see scope better and prevents a lot of simple mistakes.",
        "Are you using some online compiler ?",
        "it dosen't work too",
        "**Never execute it.** It will makes another error like permission deny.",
        "http://stackoverflow.com/questions/18518018/how-is-an-integer-stored-in-memory",
        "Why is there a \"p\" tag in the toggle when you have no p tags on your html?. Also you have divs nested in your ul tag as siblings of the <li> that's is just wrong. You can have your content elsewhere and show it with jquery, it doesn't need to be nested in the menu",
        "What does \"didn't work\" mean? Did you compile with all warnings and debug info (`g++ -Wall -Wextra -g`)? Did you **use the debugger** (`gdb`)?",
        "You'll have to be more clear on what \"didn't work\" means. It didn't compile?",
        "Didn't work and I couldn't work out why\nwhat errors you got??",
        "Please edit your question to improve it!",
        "You're returning a copy of the `ScreenArray` from `getScreen`, which looks dodgy to me. And I've no idea what `return false;` might do in that context. But without knowing the details of how it \"doesn't work\", it's impossibly to guess what might be wrong.",
        "Which part if this code is not clear?",
        "Where have you found this code, since it was not documented?",
        "You're doing a lot of `float` to `int` conversions. Those are subject to some rounding errors. I'd try to do everything as `int` if possible.",
        "You are using terminology which i suspect is shared only by other users of some unnamed package or discipline. Perhaps you should either present a complete example (and explain your understanding of the term \"circle\") or consider finding a mailing list for users of this package or who share your understanding of these terms.",
        "extract? Are you using the raster package? This is not at all clear.",
        "`If I've missed out on any information...` you left out a question/problem",
        "possible duplicate of [Issue with Call function in Visual Studio](http://stackoverflow.com/questions/26744130/issue-with-call-function-in-visual-studio)",
        "homework......?",
        "Old homework wich was stucked in the storeroom :)",
        "For a start, you could explain what it supposed to do and what it does instead.",
        "integer isn't a class name, but Integer is",
        "Help me to resolve this error.",
        "first off, tell us what you are trying to do... or what module you are trying to install... it will help a lot. Second put more detail on to your questions instead of just plonking down a massive wall of error messages... Remember to put what you are trying to do. or you are just going to get down voted and no ones going to answer your question.",
        "Did you actually read the error?",
        "please try to reduce to the smallest code that reproduces the issue.",
        "Hi, I just put in BOLD What I want to put as a parameter and pass it from javascript.",
        "DON'T SHOUT OK??",
        "JK - By any reason I try to shout, even when I am asking my for help.",
        "Why is this tagged with PHP?",
        "it's already telling you in the error.",
        "`question` shouldn't be a counter and a string (`question = (\"%d %s %d\") % (number1, operator, number2)`",
        "\"unorderable types: str() < int()\"",
        "You are using question object for both increment and carrying your question. Try to give both as different name.",
        "It's pretty obvious that 90% of this code isn't at all relevant to the problem. It's not at all obvious _which_ 90% isn't relevant. Can you give us a [minimal, complete, verifiable example](http://stackoverflow.com/help/mcve) instead of dumping all of your code on us?",
        "How are you getting this String?.",
        "What is the expected result? An array of arrays? An array of lists? An array of some pair object?",
        "@Mureinik i want this convert into an multi dimensional array.",
        "@TheLostMind I am getting this from a server php page.",
        "@Yogamurthy - Show us exact input and expected output.",
        "You need to post the form as you normally would and retrieve the passed value with `$_POST` or `$_GET` depending on the type of the request.",
        "What did you just do?",
        "Please don't vandalise your posts",
        "why shouldn\u00b4t it be? It\u00b4s part of Android OS...",
        "i am asking about the server side api , that some website descripe it as illegal , is this true or not ?",
        "`**` and `*` are not necessarily the same; see my answer.",
        "What test case? The OP didn't say anything about the output.",
        "What about `ls **`?",
        "Theoretically speaking, I can answer your question in two parts: a. I don't want to discuss this part. b. implement my suggestion in a'.",
        "[No, it's impossible; computers are not that advanced yet.](http://www.bash.org/?5804) Seriously, though, I think that this question [needs to be less \"theoretical\"](http://stackoverflow.com/help/asking) before anyone will answer it. For example, [what have you tried so far?](http://whathaveyoutried.com)",
        "Yes it is possible.",
        "`det` initially is 0? Then `del *= whatever` will give you 0.",
        "You start with 0. 0 Multiplied by anything is always 0. What did you expect?",
        "And it should be `1*5*9=45` :)",
        "`det += matrix[i][j] * matrix[i][j]` sums the squares of `matrix[i][j]`, so that result would be `1 * 1 + 5 * 5 + 9 * 9`.",
        "The second loop is a bit pointless. You could just say `int j = i`. You're now doing pointless work to to find a value of j such that `i==j`, instead of just making it so.",
        "You should at least post an example what you've tried doing so far.",
        "Please reformat your code it is hard to read atm!",
        "sure, I will do",
        "Why don't you use `pdb` or add some `print` statements to watch things change? This is a very basic recursion and you probably just need to read more about recursion in general.",
        "Did my answer help you?",
        "Wow, all on one page: http://php.net/manual/en/function.date.php",
        "-1 for lack of basic research.  This is all there right on PHP.net `date()` function page. I would also suggest that if your are doing an \"insert query\" you likely don't want this format anyway.  You should use a proper format to match a proper date field format in your database.  I am not aware of any database that would accept that format for such a field type.",
        "See the format \u00b4F\u00b4on http://php.net/manual/en/function.date.php ...",
        "If you're planning on inserting this in a database don't store it in this format. Store the date in your database's native DateTime format and format for display when you retrieve it. If you don't you'll find any sort of query on these dates much more difficult.",
        "Thanks, no it wasn't intended to store within a database, its actually for PHPWord to insert a document creation date into a Word Template based on date created, i.e. now(), eg $template->setValue('Value2', (date('jS F Y')));",
        "This is an interesting task. Why did you feel you had to share it with us?",
        "Google search ideas : \"How to compare integers in java\", \"How to print out in java\"",
        "Off-topic because this is not really a question.",
        "This question could be quickly answered with a simple internet search.",
        "...or by using one's brain.",
        "@TheParamagneticCroissant: Is that trendy?",
        "@Deduplicator from what I can tell, it's not particularly trendy nowadays.",
        "What design patterns are useful entirely depends on what problem you're trying to solve. There are many good books that go through each pattern and give plenty of examples on what each is good for.",
        "purchase and read \n\nhttp://www.amazon.co.uk/Head-First-Design-Patterns-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&qid=1415791145&sr=8-1&keywords=head+first+design+patterns",
        "Head First is pretty Aight",
        "Nothing more than a `%` followed by at least one char, or nothing (https://www.debuggex.com/r/Fhim6RYIrGaujxCK).",
        "[Check out](http://regex101.com/r/aR0vR5/1) the explanation on the right hand side",
        "what do you want to achieve?",
        "**SEE DEMO :** http://regex101.com/r/aR0vR5/2 That is the answer for your question.",
        "**Thanks, I got it.**",
        "See here for more information. \r\n\r\n[https://stackoverflow.com/questions/27051872/how-do-i-create-a-new-structure-in-screeps/27054679#27054679][1]\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/27051872/how-do-i-create-a-new-structure-in-screeps/27054679#27054679",
        "Please go through [ask]",
        "Could you explain the problem in a bit more detail? Otherwise I'd recommend plain `nano` or `vi`.",
        "see this answer: http://stackoverflow.com/questions/6287755/using-sed-to-delete-all-lines-between-two-matching-patterns .",
        "I gave you -1, since its not clear what to delete and how to search for it.  You also have not posted what you have tried to solve this.",
        "need a bit more info becaause the content of *Others contents* could be altered via a generic sed/awk, ... . It will be interesting to define and assume some point like 'for the section Proxy server, remove the section coment, all the function after it using _proxy in name, until next comment out of a function...'",
        "Hello everyone, I added more description, thank you.",
        "@jotne Could I ask you to cancel -1, I've added more detail. And nu11p01n73R solve my problem. Anyway, thank the help of everybody.",
        "So you want to delete all lines starting with `#`, `function start_proxy` block and `function stop_proxy` block regardless of where its found in the file, and nothing else?",
        "@Jotne No,  I just need to delete the six line beginning with `#` above the `function start_proxy`.",
        "So how to know what `#` to delete?  The 6 first it find? How do we know where in the file they are since you have other text above it???",
        "So we need to search for `# Proxy server for iTerm & Terminal Setup Script`, then delete it, line above, and 4 below it?.  We should not delete all blank lines, only those between `function start` `function stop`?",
        "@Vincent the answer you got will produce the output you expect from THAT specific input file. That does not mean it's a solution to your problem. If I were you I would NOT use that on a clients files given what you've told us so far about their content! You simply haven't told us enough about your problem for us to hep you solve your problem in a robust way.",
        "Welcome to stack overflow! 2 lines of code is not a question. You need to tell use in more detail what you are trying to do, what you have tried, and what you need from us.",
        "***SQL Injection risk, right ahead!!!*** [Please read this](http://bobby-tables.com) to see what it is and how to prevent it. And also, clarify your question",
        "What is the output of: `echo $number;` and what do you expect to work? (Also it doesn't make sense to check in the while loop if you have under 1 row!)",
        "What does `var_dump($number);` return?",
        "Where's the mistake? What do you expect to happen? What happens? Is your query return the data you expect? Are the values of the variables what you expect?",
        "`mysqli_error` only expects 1 parameter. Turn on error reporting.",
        "I want `$row['horse_powers']` to be \"turns into a unicorn\"!",
        "This is offtopic because it's a question about computer hardware",
        "are these pointers or strings?",
        "only strings ...",
        "Quality of the question and title is poor. Can you explain what do you want to accomplish?",
        "Please post the whole code and ask the question in an understandable way.Why are you looking for \"another solution\"? What's wrong with the one you posted? Why?...",
        "Why not just create a class that holds the number and the text that goes together?",
        "Google > c# collections > 1st link wow, the answer...",
        "and you require 31 minutes to mention this? :D @t3chb0t",
        "@dotctor: yes it happens, perhaps because I'm not paid for giving immediate answers and I also do other suff in the meantime :-]",
        "@t3chb0t good job! Google is a friend.",
        "It is unclear what your first question is, and your second and third questions are quite broad.",
        "This is completely trivial to test. You then need to understand that it's an object you `synchronized` on, not a field or variable.",
        "Did you check http://api.jquery.com/jQuery.ajax/ ?",
        "It will run synchronously, so it will wait for it to execute.",
        "post the actual html if you want help with traversing the DOM",
        "Please explain what you have tried so far.",
        "that's not html structure, it's meaningless indented text",
        "You are lying :) What you describe is impossible. :D",
        "@user26658 anyway why do you want to return boolean from main method",
        "@Pshemo i told it's not the method we call main method starts when class run.it's valid method .it's not valid 'main' which start run",
        "@FastSnail In that case I probably misread your comment. Sorry for confusion (removed my comment).",
        "why am I getting so many down vote on my question? Can people give constructive feedback? I tried to make revision on my question. I am just starting to learn Java, so is it getting down vote because people think my question is too trivial?",
        "@user26658 \"why am I getting so many down vote on my question?\" probably because your question is wrong \"*When I have void, the code will compile*\" - method can't compile with `void` return type if it contains `return something` inside it.",
        "Why are you using 3-4 Tab spaces for indentation , single tab also works for most of people I guess ? and code looks cleaner as well",
        "\"I'm trying to call `SaveFile` function\" - so what prevents you from doing so instead of mentioning the function's name? (SCNR)",
        "The way to learn is by doing. Try something, post the code and ask for help.",
        "Did you already try to do this?",
        "If you're just starting out, asking people for code like this on Stack Overflow is not the place you need to be. You should find a good book or a series of online tutorials. Have a look at [Good resources for learning ObjC](http://stackoverflow.com/q/1374660). The Big Nerd Ranch books are excellent, and lots of people like the Stanford iOS course on iTunes U. Good luck!",
        "It's alphabetical order.",
        "In Lexicographical `http://en.wikipedia.org/wiki/Lexicographical_order`",
        "As stated in [GetKeyState MSDN reference](http://msdn.microsoft.com/en-us/library/windows/desktop/ms646301(v=vs.85).aspx), the return value is a `SHORT` (16 bits), not a 32 bit value (in other words, `0x80000000` is not valid).",
        "The difference is in [searching](http://docs.oracle.com/javase/tutorial/java/generics/why.html) and [not searching](http://stackoverflow.com/questions/28041224/what-is-the-difference-between-arraylist-with-and-without-operator).",
        "I suggest you learn by trying it.  Learning from a book is one thing but you will remember it better if you try it.",
        "Yes you can make object without generic classes. The main difference is you are limiting the adding and searching of the data to the specified type rather than all kind of data. The usage of generics is the proper way of implementing Collections as they will only create objects which are specific to the requirements.",
        "possible duplicate of [What's the difference between raw types, unbounded wild cards and using Object in generics](http://stackoverflow.com/questions/7360594/whats-the-difference-between-raw-types-unbounded-wild-cards-and-using-object-i)",
        "*Comic Sans*. This question is off topic here",
        "i mean, make same color, as shown on title of the page.",
        "@NikitaGalaganov are you 100% sure that it is not an image?",
        "What's going on with the brackets here? o.O `jQuery(this).val() == 'betteroption') {`",
        "Please check your syntax first ... open your console to check for errors",
        "Radio buttons should have the same name but **not** the same ID. Id's should be unique",
        "is that one for C#? Can you tag your programming language?",
        "Yes it is, this is my first question ever in SOF.  I just made the condition = True and it corrected it a little, but i think the problem is in the First and second expression data type conflict.",
        "Use a `for (var minute = 0; minute < 60; minute++)` loop",
        "Might be better to use a server-side language, or possibly a templating language to do this at build time. There are just so many _options_! (do you see what i did there)",
        "how can I delete this question? the delete button won't work and everyone says it's a bad question so I want to get rid of it.",
        "Since you haven't told us to which language you're referring we have no way of knowing. But in *some* languages it's a boolean and operator.",
        "possible duplicate of [Logical AND operator](http://stackoverflow.com/questions/3496214/logical-and-operator)",
        "The output is: `UB` The evaluation of the parameters is unspecified! (This question was asked asked so many times before)",
        "The output is undefined behavior",
        "@Rizier123 In c evaluation of parameters is from right to left here.",
        "@Rizier123: The evaluation is undefined, not unspecified (which is even worse --- there are some subtle differences).",
        "@AustinPhilipD'silva,@Rizier123: No, evaluation of parameters is undefined here. See C99 standard, 6.5p2 and 6.5.2.2p10.",
        "@AustinPhilipD'silva:  C does ***not*** specify the evaluation of parameters being R-to-L.   In many implementations, it is R-to-L because that makes it easier to manage the stack.   But this is not required nor guaranteed.",
        "It's to loop through the array one element at a time. An array is a data-structure of index(es) with values in it from some data-type (in this example it's objects).  The objects can only be accessed by evaluating the elements in the index of the array. The loop is the structure that achieves this.",
        "Your while condition logic is incorrect - change all `||` to `&&`.",
        "Think carefully of what the condition would evaluate to if `action` is, say, `2`.",
        "We're not going to do your homework for you. What do you think the answer is? Explain why, and if you're wrong, we'll help you understand why.",
        "I believe \"it's if or if else\" but a friend of mine says it's if and if else but he isn't sure either. So it's a doubt between those two. I couldn't find anything on google. Everywhere it just says nested if else.",
        "Why don't you try writing actual C++ code to implement it?",
        "I know how to write it. It's just in theory what does that chart represent.\nIs it if or if else or if and if else",
        "I'm not even sure I understand the choices. `and` and `or` would be used in the test expressions, they're not part of `if/else`.",
        "Yes,I'm confused too. Couldn't find anywhere the answer to that question and yet it could appear on my pretest.",
        "This question appears to be [off topic](http://stackoverflow.com/help/on-topic).",
        "Just look at the sky and when you see a Comet in the sky make a wish from bottom of your heart, and this java patch will be installed :)",
        "What patch? Sun/Oracle have never released patches for existing versions and your link certainly does not point to one.",
        "@Luminous Other software products are frequently updated through patches instead of full redownloads.  This question is not unreasonable if you are familiar with those and new to the Java platform in the Oracle flavor.",
        "@Thorbj\u00f8rnRavnAndersen Woah. Did you delete my comment?",
        "@Luminous no.  A moderator most likely did if he/she considered your comment rude or offensive.",
        "<default-comment>What have you tried?</default-comment>",
        "http://stackoverflow.com/questions/28479341/python-acess-top-class",
        "You forgot the player(s) - imho ;)",
        "I'm afraid this question is not much, if any, clearer than your other question.  And just adding a tag isn't going to help.  Are you trying to ask \"how do I do X in Python\"?  Or \"can I do X in Python\"?  Or \"am I trying to do X in the correct way\"?  Even if you can rewrite your question so that it is clear what you are asking, it still most likely will be too broad or not within the scope of this site.  Check out the \"Asking\" section of the [help](http://stackoverflow.com/help) for this site.",
        "I still dont' known why so many down votes there, I have a problem and didn't find the answer/solution over the internet so that I post the question here to hope that someone can help me resolve the issue",
        "You should post the error line, plus you're missing a trailing bracket",
        "`count = count` is completely superfluous.",
        "Also try to avoid using the variable name `count` or `max`... or any other Python functions, methods, or keywords.",
        "IndentationError: unindent does not match any outer indentation level on line 5\n    if butterfly >=1:",
        "If you use an appropriate editor or IDE, they will help you with spotting such errors.  Happens all the time.  Note also that the error is actually in the line above, because the interpreter thinks your count statement belongs to the previous function call.",
        "Why do you think it should be `0123`?",
        "Did you read the documentation for `String.trim()`?",
        "tim only removes whitespaces at beginning end end of a string. Not in the middle.",
        "Please read the documentation, before asking questions, which are answered in the documentation: http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#trim()",
        "@ARam You don't have to remember what every function do. However, you have to read the Javadoc of the functions you are using to understand what they are doing. The people at Oracle are doing a good job of documenting the core language methods, please make sure you make good use of that.",
        "What's your question?",
        "Can you post your code or your attempt at the code?",
        "try `a=[1,2,3,4,5,6/* numbers here */],b=0,l=a.length;for(i=0;i<l;i++){b+=a[i]}console.log(\"Sum :\"+b),console.log(\"Av :\"+(b/l));`",
        "Your bottom function works...  Just assign it to an event listener and delete `getSum()` as you're not doing anything with it",
        "Can we seeing the matching HTML?",
        "`<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title></title>\n</head>\n<body>\n\n<input id=\"numb\" type=\"number\" />\n\n\n\n\n<input type='button' value=\"button\" onclick='Sum()' />\n\n<script src=\"js/main.js\"></script>\n</body>`",
        "share it via a global modifier ie `static`?",
        "either make it static or pass it to the constructor of Form1",
        "You could keep a reference of one form in the other.",
        "Are they two separate applications?  Does MainWindow have an instance of Form1?",
        "`DATEDIFF` works with time values as well",
        "What is the data type of your time data and show some examples.",
        "possible duplicate of [SQL Query DATEDIFF date time fields result in minutes](http://stackoverflow.com/questions/22164002/sql-query-datediff-date-time-fields-result-in-minutes)",
        "That is not the Clojure way.  If you are working with an object with an identity you should use either a ref or an atom an not a var.  Updating a var in the way you indicate should typically be done only in the case of a repl.",
        "tbc: `(def ar (atom [1 2 3]))`, `(swap! ar assoc 1 5)`",
        "Sounds like you are looking for the [DirectionsMatrix](https://developers.google.com/maps/documentation/javascript/distancematrix) (also a [Web Service](https://developers.google.com/maps/documentation/distancematrix/).  However there are limitations, whether it will work will depend on how many locations you need distances between.",
        "Post the code you have tried!",
        "is there a question?",
        "That's not the question. The OP is asking ***why you need a constant in that context.***",
        "The question deals with inner classes and their behavior, not the `final` keyword itself.",
        "Because of anonymous inner class, this has to be a constant",
        "We aren't going to write code for you.  Show us what you've tried and we'll help you to fix it.",
        "These are completely different and non comparable concepts!",
        "Try to rename your file into \"foo.dat\" and see if the execution time is any faster by naming it that way. My suspicion is the answer is no but I could be wrong.",
        "Yes the first parameter must be within a range of 1-9 but the second parameter my be any number. So far I create a string by looping the length of the length and then parse a int from the string. But there must be a better solution right?",
        "The second number cannot be any number because you are returning an integer. Look into BigInteger.",
        "This is dangerous because you can easily exceed the upper bound of the `int` type",
        "angular way its a angular way dude, read the HOLY ANGULAR DOCUMENTAION, and look at simple example at the home page! https://angularjs.org/",
        "Before you post a question, search Stack Overflow for previous questions. This has been asked and answered many times.",
        "specially the if statement... i am not sure what the condition is",
        "Compile and run the code. Add lots of logging until you do understand it. (Do you know yet which half of the `if` executes?)",
        "i think the else part?",
        "Why do you have an assignment and comparison in one line i.e. `if(z= x < y){`",
        "You could use a loop perhaps..",
        "Go through the basics, SO is not a substitute for a good book, tutorial, class or search-query. http://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html",
        "Welcome to Stack Overflow, please take the [Tour](http://stackoverflow.com/tour).\n\nWhat have you tried so far? Please read [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask).",
        "Care to explain why that would help the original problem?",
        "`NumberFormatException: empty String` seems pretty clear.  The problem originates at `school.TravelExpenses$CalcButtonListener.actionPerformed(TravelExpenses.java:139)` within your code",
        "Sorry about some of the confusing comments It's fairly messy as I've been trying many things in my endeavors to fix it",
        "You could also take a look at [How to Use Spinners](http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html) and [How to Use Formatted Text Fields](http://docs.oracle.com/javase/tutorial/uiswing/components/formattedtextfield.html) which perform their own validation internally",
        "And, of course, `double` is not the ideal data type to use for storing and manipulating amounts of money.  You might consider using `BigDecimal` instead.",
        "So thanks to you guys I figured out that its just not taking whats in the text fields and putting them in the variables.",
        "Please do work on \"You'll Just have to run it yourself everything goes wrong when I hit calculate\".",
        "OK, so... what's your question? This isn't a code-writing service.",
        "That's nice. Good luck figuring it out. Did you have a question?",
        "Could you add a little more description about the problem you have?",
        "using the URI will not work",
        "Yes you can, have you tried reading the documentation?",
        "I'd say this question is way too broad to be adequately answered here.",
        "I've removed the \"urgent\" queue-jumping in the title - all questions have equal value here. I don't advise you add that to any of your questions - volunteers will answer at their leisure here.",
        "(You probably had the warnings suppressed on your old server. It is a good idea to suppress them on your new live server too, but only after you have fixed them in your development environment).",
        "PHP is not javascript",
        "What's the role of `generate_:`?",
        "Are you on an ancient PHP version by any chance?",
        "I've down-voted because there is no evidence you've tried anything before asking. Your question is also very unclear. A code sample would probably help address both those issues.",
        "this is what i have tried but it is not working: \n   public int getSingleCount()\n   {  \n      int singleCount\n      for(int i = 0; i < theRooms.length; i++)  \n      {\n         if (theRooms[i] == 1)\n            singleCount++\n      }\n      return singleCount;\n   }",
        "Thank you for posting your code. Can you explain why it doesn't work as you wish?",
        "Welcome to stackoverflow, please note the guys here like a bit of detail when it comes to answering questions and you need to show you've put some effort into solving this issue yourself. \"my code is not working properly\" is not only a lazy question but also doesn't tell us anything. What are you expecting to see? What actually is happening, any errors? that sort of thing. Thanks",
        "Welcome to StackOverflow! To get the best results, please check the [\"How do I ask a good question?\"](http://stackoverflow.com/help/how-to-ask) section in the Help.",
        "Do those `if` statements look like any that you've seen in your textbook?",
        "The compiler is telling you the file, the line and the column where the error is located! Something is missing between `monthcounter` and 2.",
        "the error seems pretty descriptive to me, not sure why you said it's \"unknown\"",
        "So, what is `extramonths = monthcounter - monthcounter 2;` supposed to mean? It is as meaningless to us as it is to the compiler. How do you expect people to \"help you\", when it is impossible to figure out what you were trying to do?",
        "It is one of the ugliest pieces of code I've seen. Not to mention 'bugginess'.",
        "Don't put semicolons at the end of every line. They do have a meaning in the language.",
        "`monthcounter 2;` --> `monthcounter2;`",
        "Baffling how code like this is possible.  Surely this can't be the second thing someone tries to compile after hello, world.",
        "Explain what's the problem and what you cannot solve by yourself. Yelling \"PLEASE HELP\" will no help, you can see the down-votes now..",
        "It sounds like you want to reverse *each word*, but your code reverses *the string*. Similar code, but you need to break the problem down a little more.",
        "http://www.cplusplus.com/reference/string/string/rend/",
        "Small steps: **1.** Create a function which finds start of next word. **2.** Create a function which finds end of current word. **3.** Write program which uses above 2 functions to print all words in the input line. **4.** Create a function which can reverse a word, compatible with functions of steps 1 and 2. **5.** Modify the code from step 3 to print the words reversed.",
        "You have the code already, why didn't you just try it!",
        "Well, it did not work in some cases and I thought there might be other ways and methods of doing it like stop, finish etc. Why did not you just reply like @kapa did.",
        "Well, now it's valid and @kapa still has the best answer with some useful notes. You have provided 0 of help just so you know...",
        "I never asked fixing it and you should read the question carefully instead of trolling. What I did ask was \"if it would work in any case\" and @kapa clearly explained when it would work and when not. I am sorry if you do not understand English or have issues with helping others. Good luck to you ))",
        "This discussion obviously has no end. It\u00b4s your right to help or not but as you see someone bothered to help and you spent more time arguing with me in chat then actually do something useful at this thread. I got your point, hope you got mine.",
        "Why are you appending to the same file straight after appending to it once?",
        "Bro i am appending the file in the format like code : and after that recieved code",
        "There's nothing in this code that shows what is alerted (what data is sent back to the ajax). Are you alerting \"The number is: $x The number is: $x The number is: $x\"?",
        "If the php is _as is_ inside the textarea it would be a string, and therefore won't execute but treated as such. It seems like yours is the expected behaviour: you send a string code, you get a string code",
        "What's wrong with this? `file_put_contents($myfile,\"code: \".$code.\"\\n\",FILE_APPEND);`",
        "I am just saying that i want to send the for loop like <?php\nfor ($x=0; $x<=10; $x++)\n  {\n  echo \"The number is: $x <br>\";\n  }\n?>but it received as <?php\nfor ($x=0; $x<=10; $x)\n  {\n  echo \"The number is: $x <br>\";\n  }\n?> ignore the other part",
        "your question is not clear at all..",
        "I'm unable to replicate your problem; show us your form.",
        "you can see form here - http://web.guru99.com/ the code editor on web.guru99.com is my text area if i am insert for loop there then it escape ++ sign so it goes to infinite loop",
        "++ is not special in any way. Do you have code on the server which processes the posted code before it is executed? Please post that.",
        "you Can take  POST method & var params = { code: code };",
        "@WolfgangStengel Not quite true.  A plus symbol dictates a space for GET requests.",
        "@SanjayRathod See my answer for why that is.",
        "@Daedalus Right. I was assuming he would let a regular form post it. Nice catch with very few information.",
        "possible duplicate of [++ sign gets skipped. How to tackle this?](http://stackoverflow.com/questions/20439017/sign-gets-skipped-how-to-tackle-this)",
        "What are you using it for?",
        "The description(string) from db contains some special characters which needs decoding for read on front end.",
        "You haven't explained what problems you're having with these characters.  How are the Base64 strings you are decoding being generated?  What output are you seeing that isn't what you expect?",
        "What is your front end? A web app? If it is a web app how are you displaying it?",
        "Are you sure your about Unicode? Maybe UTF-8 ?",
        "You appear to be confused about how things like Unicode and UTF-8 interact.  Please read [this answer](http://stackoverflow.com/a/16577994/920669) to one of your earlier questions (and mark it as the correct answer, since it really is).",
        "Care to tell us what kind of an error you're getting?",
        "why do people never get the idea that it might be useful to know the error....",
        "the error i get is:Exception in thread \"main\" \njava.lang.NullPointerException\n at Island.moveUp(Island.java:97)\n at Island.moveMouse(Island.java:154)\n at Exercise12Main.main(Exercise12Main.java:13)",
        "There's no such thing as \"An error\" or program \"not wanting to run\". Tell us what the EXACT error is if you want help. If you only tell us that you have \"an error\", the best we can do is give you \"a solution\".",
        "By the way, loops without brackets is asking `for` trouble. Don't do it.",
        "`Code doesn't want to run` ?? OMG try to persuade her with bit of debugging",
        "which line is line 97?",
        "for(int j=0; j<island[i].length; ++j){",
        "I believe that's because you never initialize the array properly.",
        "In order that we can help you effectively, you should give us as little code possible (see http://sscce.org/) and describe your problem as much as possible (i.e. give all error messages, not just \"it doesn't run\"). Also, to ask questions like \"here's my code, find a bug for me\" is not very good.",
        "*\"If any error occurs then...\"* Then what? getInstance() will throw an exception. What exactly is the behavior you expect?",
        "AFAIK the best way to implement a singleton in Java is through an `enum`. See [this answer](http://stackoverflow.com/a/71399/1825094).",
        "If you consider `enum` hacky, the [Spring framework](http://projects.spring.io/spring-framework/) has set up singletons for years.",
        "Is it me, or are you checking one condition two times in a row without doing anything?",
        "2 things: 1: your instance does not need to be volatile. 2: you can synchronize the getInstance() method and lose the synchronized block within. Only check for null once.",
        "@NickJ Making the method synchronized would potentially create a fairly large performance hit if many calls are made to getInstance() simultaneously.  Declaring the instance as volatile is also importance and Java's memory model does not handle double-checked locking well: https://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java",
        "I am aware that enclosing too much in synchronized blocks is a performance hit, but I stand by my comment because by far the most expensive operation in `getInstance()` is creating the instance, which would need to be synchronized anyway. Checking the existance if relative cheap, and also needs to be in the same synchronised block, so you may as well just synchronize the method. Volatile is unnecessary because `uniqueInstance' is only ever accessed from the same synchronized block.",
        "But note that this is almost certainly a bad idea. You're going to totally mess up various overloaded function calls. Prefer to define `operator<<` for `std::ostream&` and `MyInteger`.",
        "@ Lightness Races in Orbit I do not think so because as I have understood this class emulates integral numbers. So it also can be used in arithmetic operations. Moreover I gave direct answer to the question. There is no question what is better.",
        "It may emulate integral numbers, but it is not one. It is a class type. Implicit conversions \u2014 particularly to built-in types \u2014 are _evil_! Sometimes a direct answer is harmful. Of course in this case it's hard to tell what the real use case is since this particularly example is so contrived and does nothing but wrap `int`.",
        "@Lightness Races in Orbit You are trying to discuss totally another question.",
        "You can talk! The question asks for an `operator=` and you give him a conversion operator. We're both looking for his _actual_ problem and trying to give an _actual_ solution.",
        "@Lightness Races in Orbit I gave an actual solution. I did not answer the question what approach is better because I even do not know how the class is defined. It is not my task to design the class. Your reasoning is simply stupid because for example its class can be a functor used for example in std::for_each algorithm and the best and simple way to get value is to use the conversion operator. Please stop trolling.",
        "You could refactor the object instantiation and `Start` invocation into a new method on a static helper class, and the `Stop` and `Trace` calls as well. But, really, is this so offensive? IMHO this is hardly *verbose*.",
        "FWIW, you could use `var sw = Stopwatch.StartNew()` and save a line.",
        "I agree with @Yuck. It wouldn't be hard to implement this yourself, but given the complexities of multithreading (which JS doesn't have), the C# way of doing things looks a lot better.",
        "@Yuck From the answers/comments it looks like I can reduce the lines of code quite a bit. I think what I'm mostly opposed to is the duplication of output formatting logic. I'm seen a lot of inconsistency (and sometimes downright incorrect code) in apps I've worked on, so I'd really like to *just do in right, once*. A static helper method sounds like the right path to take here.",
        "This is impossible, with all your arbitrary conditions like \"no width specified on items.\" It may be helpful to provide the code you have already tried... and why you want these conditions... instead of giving us some specification and saying \"write my code for me.\"",
        "Almost certainly not going to be possible without JS",
        "It is possible so easy but what you have tried ?",
        "I just edit my first post. Thank you if you can help me :)",
        "@Doorknob of Snow : if it's impossible or if you don't know how to do that, just tell me. If it's easy, please show me how to do this. But don't tell me \"your question sucks, newbie\".",
        "semicolons have meaning.",
        "it seems like this is the GREAT copy-paste technique side effect :LOL\nYou got a lot of semicolons man",
        "You seriously didn't accept an answer?",
        "In order to use a programming language, you will need to **learn it** first. So, go ahead and grab some basic tutorial about the C language. And **format your code.**",
        "This question appears to be off-topic because it lacks any and all knowledge of the language being used.",
        "i made a method like this : static String solver(String s) {return \"something\";} so if the user put some equation inside this method it will return the answer of that math equation, but the problem is how to make the string calculate those equation?, do you know how to do that?",
        "It don't have any meaning?",
        "please Provide the code since what you have tried so far,because in Stackoverflow answers will be available for keeping effort developres not the guys trying to just copy the code and execute",
        "homework? use math libraries for this",
        "http://stackoverflow.com/questions/2992071/can-i-strictly-evaluate-a-boolean-expression-stored-as-a-string-in-java?rq=1",
        "@Emilio yeah my last homework for this smester, the problem is i didn't go to the class in the last week, so i don't understand how to do this, i have a deadline to do this hw until 12 midnight",
        "@Arief27 go to class it's good for the soul!",
        "Please tag the DB system that you are using",
        "Give us your RDBMS name (Oracle, MySQL, etc ...) also your table design and a description of what u want to achieve will be most helpful.",
        "Have you tried it? You could have tested it in the time it took you to post here.",
        "i just can t try it because we havent got actual data, so basically i can test this and see the output. We ve just been given  a ER model on paper and queries on paper.",
        "Aww,  you guys are killing me!  Put this on hold and I only got 10 pts because he didnt tag the RDBMS in the OP.  It was pretty clear he just wanted to subtract 18 months from the current date in sql.",
        "whaaaaaaaaaaaaaaaaaat !!!",
        "The whole *aim* is smelly. What's wrong with `x = y; return true;` ? If your aim is to learn C#, why not restrict yourself to reasonable code?",
        "`\"(...)the next exercise which involves yet another horrible hack.\"` If you yourself admit that your learning source is no good, then you should look for other learning sources.",
        "It looks like he's trying to do the whole \"C/C++\" thing... if (x=y) {}",
        "Don't do it this way! This made my day, though.",
        "Goal is unclear, so voting to close. If you want some painful but much more C#-friendly exercise read and understand something like [Recursive lambda expressions](http://blogs.msdn.com/b/madst/archive/2007/05/11/recursive-lambda-expressions.aspx)... much more useful/readable that obscure syntax hacks. Note that this may be ok question for http://codegolf.stackexchange.com, but not good for SO due to attempt to write unreadable code.",
        "Someone needs their upvoting privilege revoked.",
        "mysql and java are 2 totally different things.  Java could be a web app, a standalone app",
        "I know but I think they are related somehow I just want to know where to start?",
        "Is there this capability available in mysql?",
        "you don't know where to start because you shouldn't.  bad design.",
        "maybe I explained badly ,Lets explain my scenario: I have a map and I crawl some locations and store them on database I want to show the location on the map as soon as they added to database so how can I understand the new rows is added?",
        "http://stackoverflow.com/questions/5771925/python-how-to-get-notifications-for-mysql-database-changes solution here",
        "The idea is to use Udf to perform network notifications",
        "I'm giving you a +1 because this sort of thing can be confusing as heck at times, so you shouldn't be penalized forit.  The way you need to approach this is to ask yourself \"Why is it saying 'array subscript' when it's just method parameters?\" and then look for some reason why the compiler thinks there's an array subscript operation going on.  After staring blankly at it for about 5 minutes you slap your head and say \"Of course!\"  Always look for the clues in the message -- something that is out of place or inconsistent with what you think it should be.",
        "Sorry, i'm new to iOS Programming and have been working on this for a very long time, very tired now. But thank you so much for the help. Its great to now that no matter what my basic skills are there are always people who genuinely love helping.",
        "@DannyBios Here's a suggestion from a long time developer - take a break once in a while. If you get stuck on something for a while, leave it for a bit. Take a nap, eat a snack, go for a walk, whatever. Give the brain a change of scenery. Then come back to the problem. You'll be surprised how such a break can help. And don't forget some basic C and Objective-C tutorials. Enjoy.",
        "@maddy Thank for the tip :)",
        "This looks identical to your previous question, for which you accepted an answer.",
        "yes but i cannot figure out to get the line items.",
        "don't really get lineItems... but i think it is just the distinct count of each POx",
        "possible duplicate of [how to group array of nsdictionary according to the value inside the element](http://stackoverflow.com/questions/21504990/how-to-group-array-of-nsdictionary-according-to-the-value-inside-the-element)",
        "There's not enough info to diagnose something.. sorry. \"Enable optimizations, do it in a multi-core fashion\".. these are all too broad suggestions.",
        "You need to greatly expand this describing what your currently doing, as it stands its unanswerable",
        "This is too vague for anyone to provide a helpful answer. Without code, identifying performance issues is impossible. Voting to close.",
        "You need to greatly expand on the number of searches you do to get your lazy-web answers, instead! I'm not even linking my own relevant answers here",
        "Edited .  @ david , @ dvnrrs @sehe",
        "Please condense the relevant code into an [SSCCE](http://sscce.org) and _include it in your question_. Right now the content on the site you provided is not visible to the public. If it disappears after your question has been answered the value of it and any answers can drop significantly.",
        "http://pastebin.com/kM4SGyKK",
        "@SanchitBansal I think this question will be better for http://codereview.stackexchange.com",
        "@SanchitBansal Have you tested your code? What did you do to test it? Where was the performance bottleneck? How did you determine what the bottleneck was? Have you looked at the assembly language? These are the things a software engineer would do. Running straight to stack overflow to ask someone else to provide you the answer is what a future MacDonalds employee would do. Which do you want to be?",
        "What would that even mean? What do you want the value to be? What would its type be?",
        "if possible, I would do the math in another cmd and just return that, AND I wish the moderators here would quit down voting people for not being perfect <-- they should be advising you on what they think is wrong with your question",
        "I'm just trying to figure out how to put two results into object result 1",
        "@JonSkeet, I think he want's to assign multiple values at the same time to the object.",
        "if the scalars are integers, you can just retrieve them and add them up, no?",
        "what are your queries?",
        "@Link your correct.",
        "added my queries @Kuzgun",
        "Would an 'OR' in your query be enough?",
        "Let's simplify it. If you'd write `object result = \"foo\", 5;`, what would you expect `result` to be?",
        "@user3324892 : Simply store both value in string variable then concatenate it.",
        "Try to explain what `exactly not working`, people with telepathy are having rest.",
        "What do you expect it to do? What part of it is not working. Also you need to have a more specific title then this.",
        "What is `socCode`?",
        "i expected it to return a year and data value into the table. if you take the url in the function and add a certain 4 fuigure value(the socCode) to the end it will give the data online this should then be returned to the table body",
        "@Samy447, one of the first things that I would check is whether the result of your get call is actually executing.  For example, you could put an alert in the body of your anonymous function.  The function might not be executing, for instance, if your actual http request is malformed or incorrectly processed on the server.  If the function *does* execute, then the problem is likely with how you append values to your table.  If it does not, then you might want to use jquery's .ajax call instead with an error function so that you can at least see why it fails.  Either way, post back the results.",
        "@BehramMistree, all it says when i run the function is \"Uncaught TypeError: Cannot read property 'length' of undefined\". so it is executing just not returning any results. also where should i put an alert and what should i put.",
        "I would comment out the body of the function that you pass to $.get and put the alert there.  Eg., alert('got here!');  Even better, maybe you could print the contents of the data object you get back.  Eg., alert(data);.  The error that your describing might arise from assuming that data has a particular form that it does not.  As a side note, all the previous commenters that asked about what wasn't working would have loved to know about that error message.  It's a great example of something that should have been in your original post.  You live, you learn.",
        "give pastebin link  of your code",
        "http://pastebin.com/WtHyns0M        register.php file  asn one more file i have that users.php                                                         http://pastebin.com/Dq5Aicb8    here is users.pph",
        "Sidenote: You didn't close PHP before going into HTML.",
        "Fred that not seems full code i tried to paste in question here but couldnt , here is pastebin links for files register.php and users.php http://pastebin.com/Dq5Aicb8          second one is here http://pastebin.com/WtHyns0M",
        "now i posted links to code and everybody got quite :(",
        "@EvilP: in general we try not to recommend that people use pasteboards here. JS Fiddle or codepads are fine in order to make it easy to _run_ the code, but otherwise we want questions to be self-contained. This means that if Pastebin drops off the internet, or the paste is deleted, the question will not become useless.",
        "@Awlad: see above about recommending pasteboards here - we prefer people to paste the code into the question. In general, if the amount of code is excessive, it is likely that the OP needs to narrow the problem down further anyway.",
        "@halfer: hi, yes you are right :) i also know that. OP was unable to add any code.so i was suggested him to do so.",
        "@Awlad: thanks. Best approach (imo) is to note the existence of the `[code]` button in the editor.",
        "XNA is no longer supported, and some call it dead",
        "\"According to an email sent on 31 January 2013, XNA is no longer actively being developed, and it is not supported under the new \"Metro interface\" layers of Windows 8 nor on the Windows RT platform.\" (from [XNA](http://en.wikipedia.org/wiki/Microsoft_XNA)).",
        "use Unity3D multi platform",
        "@Tsukasa Unity3D is hardly \"cheap\".",
        "Hi @Name you seem new here. This question is unfortunately not really suited to Stack Overflow - not because it isn't interesting or useful - but because it's a request for opinions and suggestions (as well as being a whole slew of questions all bundled into one blob). Stack Overflow works best with single, specific, technical questions, and everything else is unfortunately rigorously removed. So don't be surprised if your questions is shortly closed. It's not personal - just that this is the wrong place for what you're after.",
        "Unity3D has a free version and works just fine.",
        "`SQL injection, i can skip this using magic_quotes and if magic quotes is not on, i add addslashes.` You're not really starting on the right foot. And forget MD5, use a stronger method",
        "_Every_ single line of your question is wrong.  You need to learn a lot more before you can write secure code.",
        "https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project",
        "http://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php?rq=1 Come on, is right on the side bar.",
        "Look at `PDO` or `mySQLi` to learn `prepared statements` for some better) security. And `MD5` for passwords? Ouch...",
        "Caution the **iFrame Hijacking** http://seclab.stanford.edu/websec/frames/ even facebook got that kind of attack",
        "As SLaks said.... every single one of your assumptions is wrong.  It's as if you took best practice security and did the opposite of everything.  You need to take each point case-by-case and understand what is going on if you expect to make something remotely secure.  Do some hacks yourself against your own code, and see how easy it is.",
        "@Mihai i saw that, but my question was really more general, i am not asking just about sql injection, but to prevent attack.",
        "Most hash passwords algorithms don't protect you from **Rainbow Tables** http://en.wikipedia.org/wiki/Rainbow_table",
        "Usually, TLS is considered the preferred method of protecting data between client and server.  If you're not doing `https://` for passwords, you're in a world of hurt.  SHA1 (or in the past MD5) could be used to store a salted hash in the DB for later...  I guess you could do the hash on the client, but that probably isn't typical (for one thing client likely won't know salt).  @jean That's what salt is for...",
        "*au contraire* @ebyrob that's what rainbow tables are for (defeat salted hash) the problem with hash they are very fast to calculate since they are intended to hash entire files and ended used to hash small strings. The only way to avoid RT now is using a \"slow\" hash",
        "You've got so much misinformation in this question that it's worrying to an extreme. A guide like [PHP The Right Way](http://www.phptherightway.com/) outlines the recommended best practices and is an **essential read**. The information you're basing your opinions on is **at least** fifteen years out of date.",
        "@jean How are you going to precompute all possible hash results for a 2048-bit salt field?  Where are you going to store them?  Note: I'm talking about unique (hopefully secure-random, per-user salt.  along with a \"server unique\")  Even if you only tabled \"123456\" and \"password\" it wouldn't work.",
        "\"decode md5\"? Good luck with that...",
        "@tadman i am asking this, becase i still find a lot of tutorial that use that information, and since the argument is wide, i post  here to have a grasp of what take for true or not. And to have a list of problem  to analyze",
        "@ebyrob in a cloud of course, and let's guess the storage capacity of those things in the next years. But no fear, there's already very slow hash algorithms (just cannot remember it's name now)",
        "@user3384514 It's great you're asking questions, but the sorts of questions you're asking suggest you're using really awful references. Instead of trying to build an application from an empty directory, the best way to do this now is to pick a [development framework](http://codegeekz.com/best-php-frameworks-for-developers/) that suits your style and needs. That will provide a lot of tested, high-quality examples to work from and you can leverage a huge amount of community code.",
        "@ebyrob, see it dude http://codahale.com/how-to-safely-store-a-password/",
        "@jean But one would need to build the rainbow table for each salt individually. That\u2019s the exact purpose of salts.",
        "@jean Perhaps I'm just quibbling about terms.  If you generate an entire unique rainbow-table for each user in the database after you get your hands on the password file, I'd hardly call that \"pre-computing\".",
        "That's just more one dimension on the rainbow. A table can get n dimensions, use one for user, other for possible passwords, another for salts and go on",
        "@jean I dunno, your own article in wikipedia says this: \"Defense against rainbow tables A rainbow table is ineffective against one-way hashes that include salts.\"  Adding a \"full-dimension\" with 2048 bits.. 1 with 600 0's vs storage of the whole cloud 1 with 25 0's.  Math wins.  (Unless I totally misunderstand the concept).  Which isn't to say brute-forcing my two users to find which is \"password\" and which is \"123456\" wouldn't work.  Only 2 salts in table though... so I guess I should add some false-positives.",
        "@ebyrob Yeah i readt that. That article is good to explain basics rainbow table approach but i guess is outdated about using salt against it. Salt can help, for sure, but the only way I see in the long run to avoid rainbow tables are very slow hash algorithms. anyway, no one on USA can use good cryptography. the government prohibits it =)",
        "@jean I can still get to openbsd.org.  Although I know our NSA keeps claiming to have \"cracked it all\" when it comes to secure data exchange.  Perhaps they moved from prohibiting to merely discouraging.  Which actually seems to have been far more effective.",
        "Maybe spend some time researching some bash programming? Also, you can type the same or equivalent commands into a terminal and just *see* what they do, yes?",
        "See 3.4.5 here http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_03_04.html",
        "You need to read about [Command Substitution](https://www.gnu.org/software/bash/manual/html_node/Command-Substitution.html).",
        "`\\`x\\`` is an obsolete, cumbersome and error-prone way to say `$(x)`.",
        "@n.m.: Neither obsolete nor (depending on your keyboard layout) especially cumbersome. But yes, error-prone, and not all that easily readable. `$()` is definitely recommended.",
        "@DevSolar POSIX/SUSv4 states that *\"[...] the backquoted syntax has historical restrictions on the contents of the embedded command. While the newer \"`$()`\" form can process any kind of valid embedded script, the backquoted form cannot handle some valid scripts that include backquotes\"*. `$()` is specified by POSIX, so I'd consider backticks *de facto* obsolete unless you have to deal with vintage shells (`bash` definitely not being one of them).",
        "@DaveNewton you are right on some matters but not on all.  For instance the cat command question (Q3) was tricky because cat is a command for concatenation but in this case it is being used to output the contents of the file as thankfully explained by someone else.  I knew that cat was for concatentation because I did some research but still couldn't conclude with an answer.  I am sorry I frustrated your experienced-super-developer-having-permission-to-patronize-everyone feelings.",
        "@prince I updated my answer",
        "@DevSolar Well, I do have strong opinions sometimes.",
        "@prince I'd recommend pumping the brakes a little. Ever consider looking at the man page for cat? It has an explicit example. Instead of assuming I'm being a douche then being one yourself, how about just reading some basic Unix docs and trying some stuff out? It's the most efficient and effective way to learn. It's too bad you're so comfortable assuming the worst. Good luck.",
        "This is a wall of text and you scream at the end. This is not the way to format a question.",
        "My eyes hurt...  please sort out the formatting",
        "This is the most poorly formatted question I've ever seen on SO. You deserve an award.",
        "just in case you didn't know: most internet users will probably consider exhaustive uppercase usage shouting. You'd likely receive more serious answers if you'd change that since most people don't really enjoy being shouted at.",
        "You may be writing OS agnostic code, but the libs used by the compiler aren't. Ex: `printf` calls an OS specific function to write to the console.",
        "@Johnny different implementations aren't really a binary portability problem. In the case of `printf`, it forms an interface to shield off these details. If there is binary compatibility at the interface level, the underlying implementation would not matter.",
        "@JohnnyMopp well printf internally calls fprintf function.. And it is a part of stdio.h library which is definitely platform agnostic.And fprintdf too is a standard built-in routine common to C platform. Even if GCC itself has some of its own libraries to link during the build, I'm using it as standard compiler and runtime on all the other machines running other OSes. So whats the issue? Does fprintf further do a platform specific system call (OS X in my case) which cannot be resolved on other OSes coz on those systems the runtime would go looking for them and not find them?? I'm confused..",
        "@crashmstr sorry man i had the CAPS LOCK on by mistake while typing.. I should have been careful..Won't happen again..",
        "@rahulbsb You should also lay off the **bold**. You're overusing it badly. When in doubt, *don't* bold your text. Most posts don't need to contain any bolded words.",
        "With the formatting changes, it's actually an interesting question, and there are three good answers here",
        "sscce.org, please",
        "Ok, I made a mistake with mi last comment. Edited it!! Sorry.",
        "Hi and Welcome! It appears as if you have received a school assignment or work task, and are asking us to solve a entire problem for you or simply find a library. Al tho we love a good challenge and try to help out in the best ways possible.. Some questions require you to show some sort of effort in solving this yourself first. It would there for be helpful if you could post a snippet of code or proof of research in what solutions you've tried and what worked/didn't work and post a stack-trace, output or just a description of what went wrong is sometimes enough. Can you show us what goes wrong",
        "@RaydelMiranda that has nothing to do with black hat, attack is a feature in his text adventure game.",
        "@bereal You are right, my bad.",
        "when the user inputs their attack type it restarts the chooseAtk function meaning the out put looks like this",
        "In which direction do you continue North(1), South(2), East(3) or West(4)? \n1\nYou are walking briskly through the forest when you hear a creature cry out \n\nYou increase your speed and hope he dosent find you.....\n\nYou see a clearing coming up and decide to turn into it.........\n\n\n You come face to face with a creature you cannot identify \n\n You must fight. \n\n Will you use your Strength(1) or your Wisdom(2) to vanquish this foe \n1\n You come face to face with a creature you cannot identify \n\n You must fight. \n\n Will you use your Strength(1) or your Wisdom(2) to vanquish this foe",
        "`def checkAtk(chooseAtk...)` naming a variable `chooseAtk` inside a function will override `def chooseAtk` for the record.",
        "Wow did you really copy the exact same output that is in your code, which we can already see and understand? By posting a \"quote\" that long you're just making things more confusing because there's no formatting involved in the comment section :P",
        "im srry im new to SO",
        "another problem i found is that i need a header basically the string that shows the players health mana and money dosen't update after an encounter",
        "problem almost solved",
        "Care to clean up your code a bit? Proper indentation would be nice too. Also, break it up between the functions if possible, so there's no scrolling.",
        "i added some things",
        "*Proper* indentation is what Deduplicator suggested.",
        "Additionally, what exactly did you do when you debugged and analysed this problem? What were the results of those efforts?",
        "Your code is difficult to read, so it is not entirely clear to me what is wrong. However, one comment I will make is that (right+left)/2 is not really relevant in quicksort. The index of the pivot variable, even after partitioning, is not necessarily in the middle. Take a look at the pseudo code in the wikipedia article on quick sort.",
        "The result of debug is that at first invoke, there is no problem. But after recalling it, everything collapses. I want to make recursive but",
        "I dont do exacty quick sort, i changed a little. if smaller than n/2 or bigger than it, it will continune to invoke.",
        "Read [Facts and myths about Python names and values](http://nedbatchelder.com/text/names.html).",
        "What you say about lists simply isn't true.",
        "@Daniel Please refer to the changes I have made in the question description and kindly tell why what i said isn't true.",
        "Because in that code you're not doing the same thing at all. You're mutating an element of the list, not changing what the name refers to.",
        "But that is exactly what I had originally intended to ask. When x=y and y is a list,if 2 copies of the list exist in x and y, a change in x shouldn't make a change in y. Which it does. Why is the same not applicable to normal non-iterable variables ?",
        "@delnan, Thanks a lot. The mutable presto chango rule cleared my doubt.",
        "How urgent?..............",
        "@MitchWheat Client is waiting on the Company Floor ;)",
        "Could you please describe what error you're getting?",
        "error in line 13 - at rtwm.Input.(Input.java:13) and error in line 37 is rtwm.Input.main(Input.java:37)",
        "What is the error?",
        "error in line 13 is at rtwm.Input.(Input.java:13) and error in line 37 is rtwm.Input.main(Input.java:37)",
        "@NikhilChitale: Yes, we can see _where_ the error is since you've stated that in your post already but _what_ error are you getting? With the information you've given us so far I can only assume it's a FileNotFoundException.",
        "@WhoAmI asking you what are the errors not at which lines you are getting the errors",
        "at rtwn.Input.<Init>(Input.java:13)",
        "If you get any exception in line no:13 means May be i.e is `FileNotFoundException` \nAre you getting this one ?",
        "Can you just copy/paste the whole text of the error you're getting? not just 'at rtwm.Input'",
        "Are you using any IDE?",
        "error is in the 'package rtwm' please check or provide that code",
        "have a look at the first line of the code provided by the OP",
        "ya package is included no doubt about it sir.",
        "when I am compiling it its working fine...",
        "Look into `String.format(..)`. Also, don't expect us to do the work for you. Show us some effort.",
        "C# and Java are different.",
        "Your question is too broad ....",
        "Replace `38` with `getCountryCode()`, ...? Should you return the string, not print it though? And shouldn't you pass an integer to the function? Or are you just doing things one step at a time?",
        "if you are printing in the method why do you have a String return type? obvious error",
        "Already Discussed in the following thread \r\nhttp://stackoverflow.com/a/47628/2088039",
        "you really should try to look at this with a debugger, it is hard to tell what might be the problem, as your variable names are not very descriptive either",
        "I count 9 as the most continuous land, unless you count diagonals",
        "May I suggest that you include the code that creates your 2D \"array\" - since you actually create an array of arrays rather than a static 2D array. It's important to show how you did that - it might contain a bug, and it is needed for anyone to run your code.",
        "@MarshallTigerus - I count 10 contiguous zeros. 3 in the first row, 5 in the second, 2 in the third.",
        "Derp, was counting 1s",
        "Since `input2` is of type `char`, shouldn't condition be `input2[x][y]!='0'`?",
        "StackOverflow is not a service for debugging your buggy program. Here's some good advice on how to find your own bugs. You are already simulating it on paper, which is a great start. Now compare your paper algorithm to the *actual behaviour* of your real algorithm using a debugger; where they differ is where you'll find the bug. http://ericlippert.com/2014/03/05/how-to-debug-small-programs/",
        "@GoldRoger - it depends on whether the array was filled with `'0'` and `'1'` or with `0` and `1`. Based on the fact that a \"visited\" location gets set to `2` (not `'2'`) I think that OP is using `0` and `1`.",
        "Also see http://meta.stackoverflow.com/questions/253787/are-there-legitimate-fix-my-code-questions/253788#253788",
        "what's the error?",
        "use String.equals() for string comparison",
        "Yes I can, \"..and an error has appeared\"? So, what's the error?",
        "This part. >When I enter in the right answer, it says it is wrong. Any ideas?",
        "@rtharper Have you read the question I linked to?",
        "@Perneel He wrote the \"error\" (I think he means bug) right after mentioning it. So instead of just writing unconstructive comments, you could try and correct his post with an edit?",
        "I was expecting a stack trace when I saw 'error'. That was what I was referring to. Anyway, it's clear to me now. The 'unconstructive comment' was in a reaction to the blunt answer.",
        "http://www.php.net/manual/en/function.substr.php",
        "Been asked many times.",
        "This is a really confusing question.  You say \"cut it on the last word\", and yet you're expecting the first word.  Then you say \"allowed symbols are 10\", which doesn't seem to have anything to do with what you said before.  Finally you say you want to \"echo only these words\".  So what do you actually want to do?",
        "As @relentless said, you can make a substring. What is the problem?",
        "`explode`, `preg_match`, and `preg_match_all` are other good functions to look at",
        "it cuts symbols, but not words :(",
        "just split the string and add the parts together while the size is smaller than target. Also -1 for \"I have google too\"",
        "@Juhana it's 11....",
        "@CatalinDeaconescu ha ha you're right. oops.",
        "sorry guys, mad mood today",
        "`=` is assign. Use `==` in the if conditions.",
        "Why's these many minus for an OP making just his second question showing effort",
        "You might want to read the following help pages: [\"How do I ask a good question?\"](http://stackoverflow.com/help/how-to-ask) and [\"How to create a Minimal, Complete, and Verifiable example\"](http://stackoverflow.com/help/mcve). These pages will help you to improve your question.",
        "http://www.joda.org/joda-time/",
        "If there a method you've tried that's not giving you good results? Google isn't likely to come and share their code, and anything else is guessing or just telling you how we'd do it. And what @Robert linked above is excellent! (Btw; is that actually the answer?)",
        "I think it's really misleading of Google to give an answer like this.  Exactly what proportion of a year \"259 days, 5 hours, 54 minutes\" amounts to depends on which year it is, and also whether daylight savings starts or ends during the 259 days.  There's actually no way to calculate this correctly.  Even with the mighty Joda.",
        "Where is your code? Why haven't you provided the full error traceback? Your question is *not* what the title (and parts of the question itself) implies.",
        "Actually It is, I want to check if random is in a list. If so, change random again",
        "This is why code and traceback is a good idea, particularly if your English isn't strong; it's unambiguous.",
        "possible duplicate of [What is unexpected T\\_VARIABLE in PHP?](http://stackoverflow.com/questions/1464919/what-is-unexpected-t-variable-in-php)",
        "It\u2019s a simple missing semicolon in the line previous to the one the error message mentions \u2026 If you know that little about the syntax, that you can not even figure something this trivial out yourself, then please a) stop b*tching about totally justified downvotes, and b) learn some effing basics _before_ you meddle with stuff like this.",
        "I've added a semi-colon. Now I get unexpected end. And you don't learn if you don't meddle.",
        "Well then go _learn_ how to count curly braces \u2026 and from now on, indent your code _properly_ to avoid problems like this.",
        "Have you tried anything at all?",
        "Read [JavaScript Arithmetic operators](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators)",
        "There isn't even a closing tag for `<input>` and it doesn't make sense to use `.innerHTML` on the `input` tag. You might use it on `textarea`, but for `<input>`, you use `.value`.",
        "@GitaarLAB - I literally said there is no closing tag for `<input>`.",
        "@Derek\u6715\u6703\u529f\u592b: I interpreted that comment differently (as in: there should have been one). So that's what I was missing :). Sorry for my misunderstanding! I'll clean up (the comment; the other info in it is likely to be read by the OP by now).",
        "If you are going to throw, you need to catch somewhere.",
        "If you don't want an error to be thrown, why are you catching the error then throwing another exception?",
        "Maybe an exception is thrown (and your program crashes) because you're throwing an exception. You catch it, but the re-throw it. Either catch   the error farther up the chain and log it/display an error message (but don't crash the program) or do that here.",
        "@Savanna I catch and declare exception `err`, but don't use it anywhere. I don't want the user to know exactly what the error is, so I throw a `CustomException`",
        "Where are you stuck? Do you know how to put text into a textbox? What part of the solution is confusing you?",
        "@justinternio Okay, so catch it and just show a generic error message and log the dirty secret elsewhere.",
        "@tnw Wondering how to do that. I want to catch and log the error, and just display an error message to the user using an already implemented error message `TextBox`",
        "@justinternio That's three things you mentioned right there. Which one are you having trouble with?",
        "@justinternio Have you attempted to research this *at all*? I guarantee if you Google around for 5 minutes you'll be able to figure out how to display an error message and log the exception.",
        "@tnw I apologize. I likely didn't use the best terminology to research what I wanted to do. I had this `try catch` set up days ago because I ran into the error once and didn't want the user to see the specifics of the error and saw using a `CustomException` as a solution at the time.",
        "Where is the question .",
        "First of all, you should give your variables meaningfull names instead of just random letters. Second of all, ident properly!",
        "why did you skip 101, 102, or 104?",
        "Welcome to StackOverflow! Please take a moment to help us help you. What part of your program doesn't work? Does give an error? If so, what is it? If not, what output do you see and how does it differ from what you want?",
        "`i think my program should work but it does not.`  So what have you done to debug your program?  Which line or lines have you identified that are faulty?",
        "If you step through the code in your head, it should be obvious.",
        "I started from 105 because when you combine its digits and divide by 2, you get 3 and it is more than the first T, which is 2. And the meaningful names is the least of my problems. The debugger finds no problems.",
        "Meaningfull names is just a lot easier for other people from whom you ask to debug your code. Are you allowed to create a function which checks if a number is prime? If yes, then I suggest that you check that function. Then feed all the stuff that you want into that function.",
        "Even if this did work, it seems to be in violation of your requirements: it seems like you cannot use both `for` and `if`. That seems like a silly requirement, but if that really is your requirement, you should make sure your code adheres to it.",
        "Excuse me? You're the one who included that requirement in the question...",
        "According to the requirement, you can only use one `for`.  You have violated the requirements.",
        "@ThomasMatthews Oh! I guess that's another legitimate interpretation. I read it as \"you can use as many `for`s as you like, but if you have any, you cannot have `if`/`while`/`do`...`while`\". Indeed, \"you can have one `for`, one `if`, one `while` and one `do`...`while`\" is also a valid interpretation.",
        "IP Address check or they must login.",
        "\"I don't think any hacker will attack my website\"... Wrong on so many levels.",
        "Delete line 5. That's were the error is... ok, seriously, are you looking for programming experts or fortune tellers? How would we know without looking at the code?",
        "Show code! (and next time you post a question, a little common sense wouldn't go amiss).",
        "Your \"not MFC class\" assumption is incorrect. CPtrList is derived from CObject. That makes it an MFC class. The answer from Mr.C64 has good advice.",
        "i have attached the code for the header file. everyone please have a look..",
        "Here they are: 1. Be more specific 2. Be more specific 3. Be more specific 4. Be more specific 5. Be more specific 6. Be more specific 7. Be more specific 8. Be more specific 9. Be more specific 10. Be more specific",
        "I'm voting to close. Read the Help Center.",
        "Remember that Java is case-sensitive.",
        "Seriously, we can't read your mind and see the compiler errors you're seeing, and playing a guessing game isn't something that a lot of people want to do. Also, read those compiler errors carefully. If you aren't working with generics they should be quite clear.",
        "The compiler isn't lying to you.  You have to be consistent with your variable name throughout its scope or you'll run into situations like this.",
        "These are the errors:",
        "Stop. Don't put them in the comments. Update your question.",
        "And make them readable, for heaven's sake. No one wants to read a blob of text. Use the preview window.",
        "@user3580294 don't write the entire comment in uppercase. It looks like if you were really angry.",
        "@Christian I felt shouting might have been appropriate to get OP to update the question instead of putting info in the comments, but OK. I'll change that. (I might have been a little mad after seeing that a bit too frequently)",
        "sorry here I fixed it",
        "You would get the best hint by properly indenting your code. Please put some effort into your code and into your question. Read the Help Center.",
        "@Sotirios Delimanolis  Please ccut me some slack. I just joined this place and really don't know how to use everything yet, just this once, I promise I'll clean up my act the next time around.",
        "What did you find when you asked your preferred search engine about \"bidirectional iterator\"? Which part of that would you like help with?",
        "or just use rbegin and rend.",
        "http://en.cppreference.com/w/cpp/concept/BidirectionalIterator",
        "Or \u00a724.2.6 of the standard, which this margin is too small to contain.",
        "It seems like you answered your own question.",
        "If I understand correctly, Vector will support Bidirectional iteator, but in one of C++ book, they discussed vector supports only RandomAccess iterator?",
        "@user3665615: __C++ 2011 Section 24.2.7 Random access iterators. Paragraph 1:__ _A class or pointer type X satisfies the requirements of a random access iterator if, in addition to satisfying the requirements for bidirectional iterators, the following expressions are valid as shown in Table 111._ In other words, random access iterators implement everything that bidirectional iterators implement.",
        "@sharth, So All sequential and Associative containers will support Bidirectional Iterators. Is my statement is correct?",
        "@user3665615: No. For example, a `std::forward_list` only has a forward iterator. All sequential containers will use atleast a forward-iterator. Associative containers will use bidirectional-iterators though.",
        "@sharth: except std::forward_list, remaining sequential containers supports bidirectional iterators. am I correct?",
        "@user3665615: Yes. I believe that is correct.",
        "You tried nothing to find a syntax error. Why should we?",
        "I mean this site is meant to help?",
        "@MartinNewAtCode This site favors questions which are usefull to others. It's very unlikly that someon who has a similiar problem will stumble across your question.",
        "You are missing `{` after `while($row = mysql_fetch_array($result))`",
        "Hi @Martin. If you use something like NetBeans, Eclipse or PHPStorm, it will indicate for you where syntax errors are.",
        "thanks @halfer appreciated",
        "No worries. Also, to avoid downvotes here, show research or prior work, and avoid asking not to be downvoted in the question. To trace code problems, one approach is to comment out things block-by-block until it works, and then introduce things again until it breaks. That will help identify the area of the problem.",
        "use `document.getElementById` not `document.elementById`",
        "Why not use the jQuery library as it's intended? `$(\"#ship\")`",
        "_What_ is the error? Also, this is not a place for \"guiding you through the error\". You need a conversational venue for that, such as a chat room or discussion forum. Stack Overflow is a Q&A, more like a FAQ.",
        "no error is being showed. The div where image needs to be displayed is empty.",
        "@ Austin - not working :(",
        "Well, when you show me the private function I will try to help you.",
        "`setName` is a method, not attribute. Call `js.setName(\"Jad Charara w\\n\");` instead of assigning.",
        "As a side note, write `void setName(const string& x) ...` preferably.",
        "@\u03c0\u03ac\u03bd\u03c4\u03b1\u1fe5\u03b5\u1fd6, I think he's having enough trouble without worrying about a little memory saving.",
        "@Josh That's why it's marked as a _'side note'_ :P ...",
        "If you don't even know if your code is C# or C++ (due to mixed tags) how do you expect one to provide you good recommendation?",
        "All my code is C#... and to access the software related to the hardware, I have one .net .dll that gives me the access to all the hardwares code which is mostly C++ and C.",
        "...what?I understand you might not be fluent in english, in that case please present it in a universally understood way...make a sql fiddle : http://sqlfiddle.com/",
        "See my edited answer.",
        "Mh I used your code but I got all data even if id_cart not exist on ps_orders table. I tryed to look if 23120 ID exist in ps_orders table and this ID not exist, but I got it in result page.",
        "You should understand the basics of Java first.. Please do a google search..",
        "Use `length()` instead of `length`",
        "yeah,ok don't go into the details as much i just want a way to count the no.of characters of a string in a string array.",
        "@gexicide Arrays don't have `length()` as I recall, so that is not the problem here, although Strings do.",
        "please understand it is not suppose to be looking at the syntax here,please try to understand the problem.",
        "@user3771185, by your description it is the syntax that's causing the problem. `someString.length` won't work because Strings don't have the attribute (see my answer below).",
        "Why do you need to use reflection?  This really appears to be an [XY Problem](http://meta.stackexchange.com/a/66378).",
        "I am curious to know why you want to use reflection?Reflection has got its own side effect?",
        "What have you tried?  What problems are you having?  What about what you're doing need to be dynamic that is preventing you from doing this without reflection?",
        "Indeed - if you *know* you've got a `List<string>`, you don't need to use reflection. If you *don't* know you've got a `List<string>`, what *do* you know?",
        "Help point you in the right direction: http://stackoverflow.com/questions/1347936/indentifying-a-custom-indexer-using-reflection-in-c-sharp",
        "i am creating something greater, but i need to learn how to do this before. =]",
        "@RaphaelRibeiro How are you going to learn if you're just asking other people to do it for you?  You'll actually learn how to do this if you actually do it yourself.",
        "i dont know if it is a List<string>, but i want to know how to do it for string or int, but not if the elements are class type",
        "`Console.WriteLine(x.ToString())`",
        "@RaphaelRibeiro That said, experienced .Net developers are going to immediately see that reflection is not needed as the question is stated. Instead you should change the question to List<T>. Also, you probably want to be more explicit about what you want to do with T. If it is simply write to the console. Then my earlier comment Console.WriteLine(x.ToString()) will work without reflection.",
        "Post your logcat and some of code where you got crashed..",
        "check your spinner values, may be it is null",
        "is it the entire logcat of your error?",
        "Please post some code ........",
        "Provide the code that dynamically populates second spinner with values.",
        "You are getting a `NPE`.You need to provide your `Spinner` code.",
        "You still did not provide the code where you access your second spinner...",
        "adding the spinner code now...",
        "`spinnerList` - where is it being inited and populated?",
        "spinnerList is an arraylist which is populated by another method before it. The spinner is working because the items inside spinnerList show up in my spinner. Dont know why the error occurs when only I am using my android phone to test. No errors in the emulator",
        "If my spinner was the problem, the class name and the method which populates my spinner would show up in my logcat. This is something else i reckon.",
        "Nothing in your stack trace mentions any code from your program, so you have either failed to include the entire stack trace, or the failure is not actually in your code at all.  You mentioned a custom rom, and that could be buggy.",
        "It's impossible with regex.",
        "Please suggest the alternative way then...have not tried yet; just need suggestions to start with",
        "Your guess is wrong, use a date parsing module.",
        "@hwnd Can you please elaborate your answer? It will be really helpful",
        "@BackSlash Have not tried anything yet, hence posted this for getting some suggestions to start with. I have never asked anyone for any ready-made code, I will do it my own way...only need some suggestions to start with and thats it :)",
        "@AvinashRaj Please explain why not possible.",
        "If the format of the dates is unknown, this is going to be impossible. What do you intend to do with 12/12/12? Getting dates in a typical format with regex, and parsing them and formatting them with date formatters is possible.",
        "How come a regex alone detects the corresponding day?",
        "@DavidConrad Thanks a lot for your explanation. Can you please suggest what should be the optimized approach for this?",
        "@user182944 I think the downvotes are for not showing your attempts and not completing your question to make it a question helpful to future readers.",
        "possible duplicate of [Java string to date conversion](http://stackoverflow.com/questions/4216745/java-string-to-date-conversion)",
        "Searching StackOverflow for \"java date format\" returns thousands of hits; perhaps the reason for the down-votes. Anyways, read the answers on the duplicate question I posted in above comment. Focus on [Joda-Time](http://www.joda.org/joda-time/) and [java.time](http://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html) as the old java.util.Date & .Calendar classes are bad for you mental health. Little need for regex as those two excellent date-time libraries can do the heavy lifting for you.",
        "The regex would be used only to extract the dates from the text, and to replace them with the formatted dates. Joda-Time and java.time are not going to parse the dates out of an English sentence for you, or do the replacement.",
        "I'd start with a basic C# tutorial, I think it's faster to learn with a good driven path than with random trials!",
        "Since you are obviously using an answer from your [last question](http://stackoverflow.com/questions/25075123/cant-use-textbox-outside-mainwindow-method) you should probably accept an answer.",
        "Not sure what you want,i assume you want to add two textbox value ,if so res.Text=int.Parse(box1.Text)+int.Parse(box2.Text);",
        "It sounds like you're almost setting us an assignment. Where is your attempt?",
        "[Kindly put some effort into programming first](http://mattgemmell.com/what-have-you-tried/). If you ask regarding specific problems with **your** code, i am sure people will help gladly...",
        "Take a look here: http://code.msdn.microsoft.com/. I even wrote WPF for you in the [searchbox](http://code.msdn.microsoft.com/site/search?query=WPF&f%5B0%5D.Value=WPF&f%5B0%5D.Type=SearchText&ac=4).",
        "Actually I am doing an application for my learning of WPF, just this functionality is remaining. That's why. If u need, I can put my bunch of files but it would be of no use for you.",
        "Then don't put that bunch of files that are of no use to us. Just show us the relevant excerpt of the code.",
        "`myvector[4]` is out of bounds. The valid range of indices is `[0, 3]`",
        "but i am checking i != myvector.end();",
        "`myvector` isn't pointing to anything. It's a vector, not a pointer. `i` starts off \"pointing\" to the first element. You then use each element's value to index the vector. Note that debugging this with a debugger would show you that `i` \"points\" to the `4` when the assertion is fired.",
        "@Suri: did you mean `cout << *i <<endl;` ?",
        "@chris so myvetor.begin() should point to first element i.e. 1 not 2 but in my pgramm it is pointing to 2.",
        "@Suri, No, and you can easily test it by printing `*myvector.begin()`, which will print 1. Since indices are zero-based, using that 1 to index the vector will of course give back 2.",
        "ya got the point cout << *i should get the value not myvector[*i]. I done, stupid question. rightly downvoted my questions.",
        "@Suri `expected output should be 1 2 3 4 5`  How can that be when your code only inserted `1 2 3 4` into the vector?  Where would the `5` come from?",
        "I can't believe no one commented on the `void main()`.",
        "Instead of apologise why not fix it and correct the indentation.",
        "Did you try to debug and trace the code?",
        "I'm doing a lot of things and I will fix my code once I'm done with it. :)\n\n@alk I tried experimenting with the values but I do not know what they are at least most of them",
        "@Minus - If you get into the habit of doing things right in the first place it becomes second nature",
        "Yes I know that, and this project is an exception for it :\\ I don't have time for arranging it now",
        "As I already used up my vote-for-closure-option, could someone please close this as being a 100% duplicate to: http://stackoverflow.com/q/25102417/694576",
        "Because `sumNumbers` returns `0`.",
        "you pass by value",
        "`return 0;` might have something to do with it",
        "You return 0, honestly what do you expect?",
        "Not to mention you never initialise `sum` before calling `sumNumbers`, this is undefined behaviour.",
        "@user657267 are you sure? I mean, the value of sum is undefined in the sense that it can be anything, but I'm not sure this falls under UB (which is tyically something like accessing objects after being deleted etc)?",
        "@stijn trying to use the value of an uninitialised variable is perhaps the most common example of UB. The value of `sum` is accessed when attempting to copy it for the `sumNumbers` argument.",
        "passing a copy shouldn't matter, because I set sum equal to the function.",
        "also, the return 0 statement is never reached -- that is certainly not why it is acting the way it is. I took off the return 0, same thing is happening.",
        "@user657267 correct indeed, this covers it http://stackoverflow.com/questions/4279264/is-reading-an-indeterminate-value-undefined-behavior",
        "@RafaelVergnaud `sum` is assigned *when the function returns*, the mere act of calling `sumNumbers` with an uninitialised variable is undefined behaviour, but hey feel free to ignore helpful advice.",
        "BTW, you may write `const int sum = std::accumulate(numbers.begin(), numbers.end(), 0);`",
        "@user657267 How do I fix that? I don't quite understand. Sorry if I am a little slow. I'm just learning c++. New to it.",
        "@RafaelVergnaud `int sum = 0;` makes sure that `sum` is initialised.",
        "Consider [Color.FromArgb](http://msdn.microsoft.com/en-us/library/2zys7833(v=vs.110).aspx) - then specify the appropriately-ranged random value, masking the alpha as desired. (But random-random colors aren't always the prettiest.)",
        "Well, if colors are based on *numbers* and Random gives you a random number, you could generate some random numbers and use them to construct colors. if you run into problems after coding come ask a question. Read the documentation for `Random` and `Color` classes on MSDN.",
        "Just show how you would create a color from some ints, the rest is easy.",
        "You are probably thinking of the problem backwards.  An XML site map should likely be generated in a dynamic fashion on any site of sufficient complexity. It sounds like you need to determine a strategy for representing your site structure in code and use this to dynamically generate both your XML and HTML site maps.",
        "@MikeBrant Please re-read my question. I wrote: \"I HAVE ... an XML file\", so I don't need to \"generate it dynamically\".",
        "@putvande I tried to search a solution with Google. Since I did not find a solution, I tried here.",
        "@user1580348 Judging by your reputation I can at least assume you have been using this forum for a while. You should know by now it's considered bad form to post a question without any code that you have tried in it and simply ask \"How do I do X?\" This forum is for specific programming problems. If you don't demonstrate a specific problem in your OP, which you didn't, the question should be closed. Which is what I recommended when reviewing this question.",
        "Show the code you have tried. Somebody might be able help you from there.",
        "Is this homework?",
        "@RSahu The code for the above pattern is not important for me, I want to understand the logic to draw such patterns like how many FOR loops should I use, What conditions should i use for space and printing *.",
        "Typically the code will have two nested `for` loops. The outer loop handles the rows.  The inner loop handles the columns. Beyond that, no one can say unless you precisely specify the rules that govern the pattern.",
        "@amish Welcome to the StackOverflow. The reason you are getting less response is because you haven't shown your efforts. For better and quick response, always show your effort and your specific problem.",
        "@MohitJain I am new to Stack Overflow & I am trying to code this from last night continuously. I am failing to get that output, therefore I had asked for logic to draw any pattern programs and for explanation I provided that example.",
        "You should include the code where the Array is declared.",
        "You wrote, that cards array has been declared in main method, but you try to use it in draw method. Try declaring it as a class field or put this card array as param into the draw method.",
        "What is `cc` ? You should provide more code",
        "Please post a more **complete** example. Is is very hard from the code snippet you provided to analyse your issue. Seems like you should past cards as arguments of your draw method:  'void draw(Card[] cards)'.",
        "You might want to think about using `Arrays.asList()` instead of manually coping every card.",
        "The method name `draw()` is confusing.  Is this supposed to \"draw a card from a deck of cards\", or \"draw a card on the screen\"?  It actually affects what the code you've shown us (probably) ought to do.",
        "Sorry cc is actually count",
        "What do you mean by \"hidden\" and \"explicitly use it\"? In most respects, `this` works identically in C++ vs. Java.",
        "Hidden in C# as well.",
        "@dlf In C++, when you create a class method, you do not have to write this->mVar = var  or something along those lines because it is implicit, while in Java you have to write this.mVar = var",
        "You don't have to explicitly use `this` in Java unless you're trying to resolve name collision.",
        "You can't use `this` to chain constructors or access outer classes in C++. Those are the only differences that occur to me (aside from the dot/arrow thing).",
        "In Stroustrup's book it says\nAn ordinary member function declaration specifies three logically distinct things\n[1] The function can access the private part of the class declaration, and \n[2] The function is in the scope of the class, and \n[3] the function must be invoked on an object ( has a **this** pointer)\nHowever, in a textbook I am reading they give an example of a class ( Person ) and they say that it is equivalent to the exact same thing plus this ->. And then they say \nIn the latter case, the **this** pointer is used explicitly, and in the former case it is used implicitly.",
        "This is where I got my question. Is it also used implicitly in Java.",
        "I assume that by \"hidden\", the texts mean a \"hidden parameter\" -- not a visible parameter in the parameter list.  And in that regard C++, Java, and Objective-C are the same -- \"this\" (\"self\" for Objective-C) is \"hidden\" in the sense that it's passed in the parameter list ahead of the first formal parameter.",
        "Yes. Read [the Documentation](http://docs.oracle.com/javase/tutorial/uiswing/misc/timer.html).",
        "possible duplicate of [java: run a function after a specific number of seconds](http://stackoverflow.com/questions/2258066/java-run-a-function-after-a-specific-number-of-seconds)",
        "@Micha\u0142Schielmann no, because that's outside of a Swing application - that example would violate Swing's threading policy.",
        "@BoristheSpider In the question that I've attached there is a Swing example. It also has link to `How to Use Swing Timers doc`. Is that not a valid example? Isn't that something to start with?",
        "@Micha\u0142Schielmann yes, there is answer there the is correct for this example but it is not the accepted answer to that question and the question itself is not about Swing. So it certainly isn't an exact duplicate of this question. Linking to the _relevant_ answer on that question might have been useful as a pointer for the OP.",
        "@BoristheSpider ok then I could have flagged it as too broad or something. This question shows lack of effort from the OP.\nWould this be a proper duplicate: http://stackoverflow.com/questions/13503788/confusion-with-the-java-swing-timer?",
        "missing `)` at last.",
        "You have a missing bracket and semi-colon closing your handler: `);`. Learn to check your browser console for errors.",
        "http://jsfiddle.net/j0xc79bm/1/ missing braces..",
        "Usually a line number is given as well. Want to share that crucial information, or do we have to guess?",
        "Obviously it should be something like `var goSleep=function() { /* code here */ };`",
        "A semicolon after `function()`? That doesn't look right.",
        "Based on the code snippet there is a bracket not closing (maybe the `while(count<3)`)",
        "@TasosK. No, there is no missing bracket :).",
        "It's not `std::set` (or any other `set` data structure) referenced here, it's part of a name of the functions, to set the name (I guess) and sex of the person. If you look further down in the class I can bet you will find those functions there. Do a search for the setter and getter pattern.",
        "It describes a method to change a variable. For example, if you wanted to put 2 extra wheels on your bike, you'd follow a method to achieve that, you wouldn't just magically declare you now have a 4 wheel bike. The new value is a result of some actions.",
        "~~~~~~~thank you",
        "This doesn't answer the question at all.",
        "you're right, just answered it.",
        "But \"Although the compiler will automatically set the c string size for you...\" sounds quite wrong.",
        "why dont you go and try it before you downvote and call me wrong?\n\ngo ahead go make a - new char[anyValue]\n\nand make that char = \"anyNumberOflettersYouWish\"\nand watch the compiler go to work.",
        "Try what exactly? A memory leak? Oh, a compiler error (invalid conversion from `const char*` to `char`)",
        "since when was a warning an error?",
        "Here, let me try clarifying for you since you seem to be having trouble with brief explanations.\n\n    'code'char* text;",
        "Why don't you post some real code in your answer to explain how you could use the compile time length of a string literal in a situation where you are trying to `new` a `char` array and fill it with the contents of an `std::string`?",
        "Here, let me try clarifying for you since you seem to be having trouble with brief explanations.\n\n`char* text = new char[1];` `text = \"abcdefg\";` `std::cout<<text;`\n\nbelieve it or not, that code will actually compile and display, even though you set the text to `char[1]`",
        "@savageWays: The conversion from non-const `char*` to const `char*` is deprecated and yields a compiler diagnostic. And initializing `text` with the result of `new` and then assigning it something else can create a memory leak if this piece of code is executed repeatedly in your program.",
        "*\"Although the compiler will automatically set the c string size for you, it's good practice to specify the exact size so you get to see the mechanics of everything.\"* - This sentence is dangerously misleading, or plain wrong. What you perhaps meant to say is that the compiler automatically adds `'\\0'` to a string literal, i.e. `\"abc\"` is actually a 4-character array.",
        "@ChristianHackl yeah, that's how I should've wrote it.  'string literal' was the word I'm looking for.  I'm apparently not a C++ pro just yet.  Also, I'm a pretty new CS student toying around with strings and cstrings.  Just having some fun :) .. thanks for the clarifications..I had no idea I was literally assigning the `char*` to an entirely different value without proper `delete` .. I mistakenly thought I was setting the value of the `new char[1]` to the string literal, and the compiler was automatically resizing the array for me.. OOPS..",
        "@savageWays: I long for the days of my youth when C strings were fun for me as well. Today they cause me nothing but trouble, headaches, time wasted I could have used for more interesting tasks and debugging sessions deep in legacy code written by people I have never known... :)",
        "If you need to store two different types then use two different variable.",
        "do you mean `if (avg3 == \"c\")` instead of  `if (avg3 = \"c\")`",
        "Please take a look on the code, how can I do it? Its need be something who can make average of maximum 3 numbers.",
        "@SagarPilkhwal I tried it... its not help.",
        "`=` means you are assigning it, `==` means you are comparing it",
        "Ok, but what I need to do?",
        "check my answer...",
        "Those are called property accessors. You can read all about them here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors",
        "Stackoverflow really isn't the best way to learn the basic syntax of the language. You'd be better off finding a tutorial web site or buying a book.",
        "for e.g dateList[0][\"name\"] means \"access the name property of the object located in position 0 of the array\"",
        "What you have is an array (declared with `[]`) of objects (each declared with `{}`). Using `dateList[i][\"name\"]` will not work with XML or JSON (both of which are string formats that would need to be parsed first to create an object or array).",
        "Thank you, to bmceldowney, Paul Tomblin and nnnnnn!",
        "And why not `[seg\u00fan, SPS00]`? In other words, what makes `[madre, NCFS00]` and `[antigua, AQ0FS0]` match?",
        "try a website like regex101.com.",
        "for the moment i only want to return the tags AQ0FS0 and NCFS00 with the word. I would like wo know how to create a regular expression given those tags, probably i will need to create more regex but this is just an example on how to aproach this task.",
        "Why is `antiguo` not captured?  Does it have to be the first word in the line?",
        "You really need the results in reverse order like that? Because I'm pretty sure that will make things more complicated.",
        "To get you started: try `r'(\\w+)\\s\\w+\\s(AQ0FS0)'` and see what it matches. Figure out how to do the same thing with `NCFS00` instead of `AQ0FS0`. Then look at the `|` alternation operator. If you get stuck after trying that, show what you were able to get working and where you got stuck, and then you'll have a good question. (Put the code, etc. in the question, but also provide a link to your test at some site like Debuggex or Regex101, if you have one.)",
        "You're getting downvoted because of the inconsistencies in your explanation vs. you're examples. If you do a little factoring, its as simple as `\\b(w+)\\s*(AQ0FS0|NCFS00)\\b`",
        "@sln: No it isn't. `antigua` is separated from `AQ0FS0` by a whole other word that he doesn't want, `antiguo`. [Try your pattern](https://www.debuggex.com/r/6IUU1IEtIT_WU3Xp). (Also, even after you fix the problems, why add the `\\b`?)",
        "@abarnert - How did you get that from his examples and description? One letter difference?",
        "@sln: Well, he didn't answer Mike Christensen's question, but clearly your regex isn't going to provide the desired output, and one that picks the first word is. But again, your regex doesn't even provide the second word because of at least one typo, and I don't know why you've added the `\\b` on each end if you're trying to simplify things.",
        "@Sam thay match since both are female words",
        "var guid = Guid.NewGuid();\n\n\nJoking aside; seems like you might want to do some more research before asking this question. In my opinion, this is fairly basic knowledge. (String concatination and generating a random of some kind).",
        "This is indeed a very basic question. You really should spend some time learning the basics of C#.\nTake a look at https://msdn.microsoft.com/en-us/vstudio/hh341490.aspx and http://www.learncs.org/ or read some C# book.\nBtw the code to generate such a message: var mssage = String.Format( \"Hey this is your access code {0}\", new Random().Next( 100000, 1000000 ) );  (If possible always use the same instance of the random class.) Be carefully random numbers are not really random numbers!",
        "@user2384352 Well if this is not a question about how to get such a string/message, but how to use an API, you should not add a C# tag to the question. Btw. Take a look at https://www.twilio.com/docs/quickstart/csharp/sms/sending-via-rest they do exactly the same. Do your homework, learn some C# basics and read the docs.",
        "This question is too broad for the purpose of this site, try to code something before asking http://stackoverflow.com/help/how-to-ask. Also it's something you can easy search \"C# webservice tutorial\"",
        "The best person to ask would be the person who has set you the assignment",
        "This may give an idea http://stackoverflow.com/questions/10017564/url-mapping-with-c-sharp-httplistener",
        "what is your compiler ( conio.h does not work in the newer compilers )",
        "My compiler is Codeblocks IDE as I have mentioned in my question.",
        "I'm asking compiler ( like MinGW or gcc ). CodeBlocks is the IDE, not the compiler. Read this [Difference between an IDE and Compiler](http://www.cplusplus.com/articles/o8TbqMoL/)",
        "FYI, those are not \"commands\" but \"functions\". They are not provided by any halfway-modern OS or compiler either, they rather come from old DOS times. Your best bet for creating a text UI is to use a so-called \"curses\" library. Suggestion: Your knowledge of C++ seems to be very small or outdated, so pick up a contemporary tutorial, it will answer many of your questions.",
        "\"Why many commands not working properly...?\" is not an appropriate question. What do you expect us to answer: \"The company doesn't test its product well enough\"?",
        "`mv /bin/echo /bin/echo.bak` but everything will be destroyed...your call",
        "@\u0413\u043b\u0435\u0431\u0428 `echo` is a command (not a service) that prints things you tell it to print, and *a lot* of scripts etc. depend on it. What on earth makes you think you would ever want to disable it?!",
        "What do you mean by echo \"service\"? Echo is a command you can call to write to `stdout` (usually meaning print to the terminal).",
        "Please don't use `list` and `dict` as variable names.",
        "its just to show what i use there its not the real variable names",
        "It's a bad idea to shadow builtins even in example code, *especially* when it means your code as written (without defining your `list` variable) results in an error: `TypeError: 'type' object has no attribute '__getitem__'`",
        "This question is four years old and has an accepted answer. Your answer duplicates the accepted answer",
        "Well, not an exact duplication - he did include the \"go\" commands... ;)",
        "Unfortunately, this is not a solution to this question. From the docs: \"systemVersionProperty: The current version of the operating system.\". This gives you the version of the OS you're running in your device, not the version of Swift your program is running on. For example, in OS X 10.10 you can run both Xcode 6.3 (Swift 1.2) & Xcode 6.2 (Swift 1.1)",
        "yes, `csv` module",
        "I'd have thought so! What have you tried, and what exactly is the problem with it?",
        "Aside from the CSV module, check out `split`: http://stackoverflow.com/a/7215696/1890512",
        "You should *never* parse HTML with regex. Use [a PHP DOM parser](http://simplehtmldom.sourceforge.net/) instead.",
        "This my specific requirement and I need regex. Currently, I am using /<a[\\s]+[^>]*?href[\\s]?=[\\s\\\"\\']+\".\"(.*?)[\\\"\\']+.*?>\".\"([^<]+|.*?)?<\\/a>/.\nBut it is discarding text value if it has any tag inside it.",
        "I would concur with Jay that you should change the requirement to do it without regexes, even if it means telling your superior he's an idiot **;)** [This website](http://htmlparsing.com/) explains why.",
        "[If the requirement is to draw a red line with a green pen, it's hard to achieve...](https://www.youtube.com/watch?v=BKorP55Aqvg)",
        "What are you actually trying to achieve? The variable name `newNode` is pretty confusing, do you want to find an existing node, and let the function create a new one if it's not found? Also you don't need a class for this necessarily, you could well create a free `find()` function, that operates on `nodeArray` passed as a parameter.",
        "`node *nodeArray = new node*[50];` has a type mismatch.",
        "Arrays can't have member functions, so you can't do `nodeArray->find(name)`. It would have to be `find(nodeArray, name)`.",
        "Probably because you've shown little research effort, and the solution you did find, you shoot down without saying why it doesn't fit your needs.",
        "not true, to explain my situation, it is about school project and I am not native english speaker, besides I am running out of time and my finals are just around the corner, I have tried using startForeground(id, notification) but it spits some kind of error all the time, so I have asked for help here",
        "Could you please add the relevant code to your question.",
        "Check your commit log and see what's changed.",
        "Look in the **error console** - `Uncaught SyntaxError: missing ) after argument list`",
        "use the web console for debug your js.",
        "@AlexK. I have now updated the issue shown in the log, but still no improvement...",
        "Wow. You asked for my help more than once and I helped you figure it out. You mark my answer correct, the you take it away?",
        "In case you are wondering why this answer suddenly received so many down votes in such a short amount of time: \"[Meta Effect](http://meta.stackoverflow.com/questions/292000/user-removed-my-correct-answer-after-i-helped-walked-him-through-his-issue)\"",
        "Why not test these scripts locally, before deploying them to the cluster?",
        "[pylint](http://www.pylint.org)",
        "Not if there are NEW records in `temp_energydata`.  Sure, you could add a `INSERT INTO ...  SELECT * FROM ... old LEFT JOIN new WHERE old.foo IS NULL` (before or after the UPDATE) but it is two statements and  if there is enough data the execution time could be long enough to cause issues unless you LOCK the table and if you do that your are likely to infuriate users (not enough space here to go into all the scenarios).\n\nAll that said, I PREFER the UPDATE then INSERT (or vice versa) myself but it does not answer the OP's question.",
        "Don't install app-specific node modules on a global scale; you'll run into all sorts of dependency conflicts.",
        "Ok, well, install http-server then...",
        "so did someone downvote just because `-g` was included?",
        "Probably I'd guess. There's lots of docs on why that's a bad idea.",
        "Downvote because this answer makes no sense at all.",
        "You shouldn't write this like its the only way to do this, Although this can be achieved its cumbersome at best at the alternatives are easier and fast, offer both if you want to provide a thorough solution",
        "google floating point",
        "Please, do not start the same questions again, you must first edit it substantially from the closed version! You already did get suggestions to use double precision arithmetic.",
        "Where does that `myJson` variable come from?",
        "What's `myJson` supposed to represent?",
        "Do you like being able to initialize `int` variables to a value (e.g., `int i = 2;`)? Good. Now, would you like being able to initialize objects of non-primitive types the same way? It (generally) needs a constructor.",
        "[google c++ constructor tutorial](http://www.learncpp.com/cpp-tutorial/85-constructors/)  happy reading; or you could pick up just about any intro c++ book",
        "What you need is a basic C++ book. Maybe [The Definitive C++ Book Guide and List](http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list?rq=1) can help you.",
        "*Too* ~ [`>>>>>........ \u266b here \u266b ........<<<<<`](http://myphpform.com/) ~ *Broad*",
        "-1: What prevented you from simply Googling this and finding out from the documentation?",
        "[Documentation](http://en.cppreference.com/w/cpp/utility/functional/bad_function_call).  Took me 3 seconds to find the answer.",
        "Sorry, just looking at cplusplus.com =( will note that",
        "[cplusplus.com says the same thing](http://www.cplusplus.com/reference/functional/bad_function_call/)",
        "cplusplus.com sucks.  Don't use it.  You never know if what you're reading is the truth or an ugly lie.",
        "@JohnDibling and more importantly, you cannot fix it if it is wrong.",
        "\"25%\" is text, it makes no sense trying to multiply it",
        "@George Jempty,  that's why I wrote a comment efter....",
        "This doesn't answer the question at all.",
        "If I understand you correctly, you can't do that. An app is either for iPhone or universal. You can't switch that once the app is compiled.",
        "Ok. Is there NO way to switch from 1x/2x mode to normal iPad Screen mode.",
        "No, impossible.",
        "@Sudha don't forget to mark top answer or upvote answer(s) that have helped you. If they haven't helped you please add comments to them and  add further details. Anyone facing the same issue will then not have to ask the same question, and those putting in the time to answer will get the rep points",
        "RTFM : `Defines a named constant at runtime. ` http://php.net/define",
        "You need to [RTM](http://php.net/manual/en/function.define.php)",
        "What is this piece of code **supposed** to do? And what's the output you're getting?",
        "Why on earth would you want that if statement in your array? Lol...",
        "Not usually a good idea to suppress warnings/errors. PHP is flagging those issues for a reason...",
        "Type your question title into Google and see what comes up. That should *always* be the first thing you do (after checking the manual of course).",
        "Introducing... php documentation !",
        "This question should be closed because it is a duplicate of the [PHP manual](http://php.net/array_merge).",
        "Others won't do your homework for you but they will help you if you get stuck",
        "Please read about how to [ask a good question](http://stackoverflow.com/help/how-to-ask). In particular you should post the code you have already written, along with a description of the problem(s) you are having with it.",
        "Not in the comments....you can edit your question and add the relevant code there.",
        "This is mostly a math problem. After the first 100 grams, you need to charge for every additional 50 gram increment. How would you determine how many 50 gram intervals you have?",
        "The letter mass minus 100 divided by 50?",
        "A suggestion: it is not so good if we use `l` as variable name, because it look like `1`.",
        "oh ok thanks, I was using it because of l in letter",
        "The error message is trying to say something. What is it? - Note that it does *not* say \"can't be used with *integers*\".",
        "http://www.stroustrup.com/bs_faq2.html#overload-dot",
        "i go through stroustrup's websites yesterday. Explanations in that websites are too difficult for me to understand. If you can explain it more simply, please do it",
        "He is the creator of C++, why would you not want the answer straight from the horse's mouth?",
        "i told already explanations in that website is to difficult for some one like me .",
        "@AbhijithPHaridas: I like his explanations. E.g. \"Sizeof cannot be overloaded because built-in operations, such as incrementing a pointer into an array implicitly depends on it.\" Do you have specific questions?",
        "\"incrementing pointer to an array implicitly depends on it\" what does that means? i have an array a[10], if i do \"a+2\" how does it depends on size of operator?",
        "@AbhijithPHaridas How far the pointer, starting at the first element of the array, has to move depends on the size the elements inside. The +2 means, move the pointer `2*sizeof(T)` for type `T`.",
        "so when i do a+2 compiler implicitly use the sizeof operator?? is't it??",
        "What error are you getting? Where do you thing the problem is?",
        "You failed to initialize `total`. Use `int total = 0;`.",
        "Start with `int total = 0;`",
        "You're missing an initialization of total to 0. Since you just use total it contains any value which is quite random. Instead of `int total;` write `int total = 0;`",
        "Compile with `-Wall`, and you may see why",
        "@LukasThomsen: Actually using an uninitialized variable as an R-value invokes undefined behavior. The compiler may do anything if it sees that, including (but not limited) to emitting a program, that wipes all the storage in the computer.",
        "@datenwolf I agree to your statement but the undefined behavior results from the memory of the variable not being initialized. When the application is loaded `total` gets a place in memory. This memory can contain any value depending on what the memory was previously used for. Therefore the value of `total` is undefined and may change each time you execute the application looking random for the application.",
        "@LukasThomsen: That's just one way how undefined behavior may manifest. UB is UB and **anything** can happen. It has nothing to do with the \"variable being placed somewhere\". If the compiler sees, that a value is read from an uninitialized variable it may **and will** do really weird stuff. Random values poping up  are the least of your problems. Recommended read (also C++) http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html \u2013 http://blog.llvm.org/2011/05/what-every-c-programmer-should-know_14.html \u2013 http://blog.llvm.org/2011/05/what-every-c-programmer-should-know_21.html",
        "I don't understand...explain yourself better pls",
        "the application is a simple tutorial, and the user dont need a login page, but it needs to save what he did to database, so it needs a `session` so, since he already created the admin user, i want to use the admin information to log him directly",
        "Django a have a native session system, it uses cookie and allow anonymous users.",
        "@Zulu an example?",
        "It is automatic if you enable the great middlewares (active by default). An example of usage is the message framework, it stores messages and send it only to the appropriate user. :https://docs.djangoproject.com/en/dev/ref/contrib/messages/ .",
        "He doesnt need a login but he can create an admin...need to elaborate more if you want useful information from this site.",
        "Frankly, it can't be explained more verbosely than it already is. If you have troubles with English, please take some English classes. What do you wish to know?",
        "Off-topic for requesting translation/clarification services, rather than coding assistance.",
        "include Sales_item.h to your project and use its methods to read some transactions and write it to console",
        "It is this part that I find confusing: \"Use it to write a program that reads a set of book sales transactions...\"",
        "To clarify, \"the working directory\" is the folder where you run your compiler. The same folder as your main.cpp.",
        "What does the author mean when he says \"read?\" Do all I have to do is: std::cin? I don't get this part.",
        "It means to include it in a source file, and use the types and procedures to write the code needed. Your lessons have covered `#include` and `<#include>` directives. It sounds like you need to go back over the prior lessons.",
        "@ Ken: Thank you! I have done exactly that. Yet I wasn't sure it was the right thing to do. There are no answers in the back of the book.\n\n@ Ken and Vexquis: I don't need any homework help. I am learning how to program because I want to learn. A friend is helping me. He is occupied today. I didn't want to bother him. So I came to this forum. My English is good but there are times when I just can't figure out what someone is saying.",
        "@\u0100n\u00e1nd\u00e9Q\u00ecd\u00e0n I wasn't trying to imply you want homework help - even if was the case, it would be irrelevant to the problem. It's not about your desire to learn, it's about the usefulness of your question and the possibility to answer it. Currently, one can only guess what you meant by your question, because a) we're not the book authors, b) we can't read people's minds, so we can't know *What does the author mean when he says \"read?\"* because c) you haven't provided enough input to get output from people...",
        "@Vaxquis: It is better to ask (when you can) if you don't know than to assume things. Anyway. I thank you for your help.",
        "Set $delayed_time = 20141112202060",
        "Did you ask why 100-40 gives you 60?What are you trying to accomplish?",
        "@RyanAaragon Are you serious?",
        "This...this is my favorite question ever.",
        "We should keep this question for posterity",
        "Already print screened it. It will definitely be deleted in a few mins.",
        "Too bad i don't have enough rep to protect it.",
        "That's not it. I'm not asking 100-40. I'm asking for the time difference. For example, 20:21:00 - 20:20:40 gives me 60, but the time difference is actually 20 seconds, not 60.",
        "Does `20141112202040` look to you like a number or a date and time? Please reformat your question",
        "My bad. I fixed it. My wording is very poor sorry",
        "Nice *curve ball* we've been thrown.",
        "haha I read the question myself afterwards and realise it was quite funny. xD",
        "and what did you try till time?",
        "`char buf[sizeof(int) * CHAR_BIT + 1]; snprintf(buf, sizeof buf, \"%d\", a);`",
        "@TheParamagneticCroissant Surely 33 characters are not necessary to represent a 32-bit signed integer, even with a trailing null character?",
        "Check [this](http://stackoverflow.com/questions/26688413/how-to-extract-digits-from-a-number-in-c-begining-from-the-most-significant-dig/26688805#26688805) out!",
        "@PascalCuoq I don't know whether `int` is 32-bit long on OP's implementation. This buffer size ensures that the integer can be format-printed in *any* possible base along with the terminating `NUL`. Better safe than sorry.",
        "@CoolGuy, I _did_ go and check that out. You may want to read my comments on its limitations. I won't downvote it, instead I'll give you a chance to fix its flaws.",
        "The whole point of `<pre>` is to have that whitespace. Why not remove the actual tag itself if you don't want it? Is this in the theme?",
        "possible duplicate of [remove <pre> tag from woocommerce checkout page](http://stackoverflow.com/questions/27124650/remove-pre-tag-from-woocommerce-checkout-page)",
        "The proposed duplicate (i) does not have answers (ii) already nominated for closure.",
        "I can't find the <pre> tag in the theme. It is a using the woocommerce plugin, checkout page. It shouldn't have this tag I don't understand why it is showing.",
        "one issue is obvious `WHERE q.flag = 1` and should be at the end.",
        "actually this is the solve :) you should post it as an answer ;)",
        "Abhik Chakraborty no its not working. I m getting #1064 error in your sql syntax",
        "what error you are getting ?",
        "Hmm i see duplicate selects this is not allowed. You have selected `q.que1_name,q.qa1,q.que2_name` first and then again in the 3rd,4th and 5th line you added them again. Remove the duplicate selects.",
        "duplicate selected columns won't throw a sql syntax error, obviously these should be removed but it won't cause the SQL not to run. The WHERE clause should be after the FROM clause and all of the JOIN statements.",
        "It's not really clear what you want and why you want to add the (char*)0 in your array.. you should describe your use case in more detail",
        "The result of `(char *) 0)` is a null-pointer of type `char *`. Do you understand null-pointers?",
        "The cast is actually redundant, `char *arr[] = {\"hello\", 0};` means exactly the same thing",
        "You did not define argv[0]. Explain what you mean with \"call argv[1]\"",
        "This isn't a programming question. You should probably be talking to your ISP",
        "No I'm speaking of server Ip and I'm speaking of fb app",
        "No I'm speaking of server Ip and I'm speaking of fb app that is no more working :(",
        "If your app was working and you haven't changed it then this is not a programming issue. Even if you have changed your app there's insufficient information for us to help. [so] is not Facebook. If you've changed your server or Facebook configuration then you should be talking to Facebook or your ISP.",
        "If programming facebook app is not programming ok. Otherwise I need an expert that have some idea how to find the problem. We used a service to hide our real Ip for hacker attack problems and now we cannot make fb app working even reverting previous setting",
        "you can post your code within the question. Don't link to other site for just showing your code. In case of complex problem, it might be useful.",
        "Read up about SQL injection and the prevention of it",
        "i placed simple query here but i used sql injection in my query...",
        "plz suggest solution of above question.......",
        "Help on error resolution with a specific PHP error message is part of this: [Reference - What does this error mean in PHP?](http://stackoverflow.com/q/12769982/367456)",
        "also your code does not do any error handling nor do you show the faulty SQL query in case it failed. This just means that you are flying blind. In case of an error you have no clue where and what went wrong. This might be the actual cause why you ask the question here. So improving error handling and actually debugging your code should enable you to find the cause of your problem quickly.",
        "I define the problem at the end of the code snippet. Sorry for any inconvience.",
        "Please mention what you already tried and what you figured out about the problem.",
        "You can always edit your question.",
        "Btw, you can just do `if(match)` and `while(!added)`",
        "@user494085 I tried storing it in different variables and then storing the variables into the vector but still the same occured.",
        "@m0skit0 I appreciate your comment! Though, do you have some advice on how to solve my problem please? Thanks.",
        "How they are not saved? What values are you getting? 0?",
        "Nope. Just a blank value\n\nSample:   \nName: Samsung Galaxy\nQuantity:\nCost:",
        "this line: `if((qty.matches(valq)) && (cost.matches(valc))){` where are `valq` and `valc` coming from?",
        "@chancea  `String valn = \"[a-zA-Z0-9 ]+\";\n    String valq = \"[1-9][0-9]{4}\";\n    String valc = \"[1-9][0-9]{4}\";`  \n\nI have the above code in the same class. It is used for validating the entries.",
        "@DavidFarrugia well the only time you \"validate\" your entries is when you \"overwrite\" the old `Stock`.  My guess is that line (the validation) is always returning false and therefore you never actually add the new values, just blank strings.",
        "@chancea Yes, I think that you are right. So I have to remove that validating line ? But, where shall I put it, inorder to validate the input?  Sorry if I am doind stupid mistakes..",
        "@DavidFarrugia Well the validation is at the right spot, just the validation criteria is incorrect and is never passing.  Change your validation criteria to match the actual values you are passing in.",
        "@DavidFarrugia actually scratch that, the validation should occur within the do-wile loop.  If it fails, make them re-enter it until it passes.",
        "@chancea Thanks alot for your help, I really appreciate it.",
        "@DavidFarrugia I updated my answer to give an example of where you could put the validation",
        "Ok, that helped me better. I cannot thank you enoguh for your help. I really appreciate this!",
        "`here compiler gives error` and `.....then answer is 2 else answer is 4`. how?",
        "Stop writing incomprehensible code. Just do one thing at a time and you do not go far wrong",
        "Also if you keep writing more code like this, you'll have no friends.",
        "Compile with all warnings and debug info (`gcc -Wall -Wextra -g`). If the compiler gives no warnings or errors, **use the debugger** (`gdb`) to run the code step by step",
        "What exactly is the problem you are running into? What does your schema look like? What have you tried?",
        "We are not here to do your job for you. YOU write the query, we'll maybe try help fix it.",
        "Love those columns names. Very descriptive.",
        "@TheHeadRush Looks like he's asking for a dynamic pivot based off of the values of the Hour column.",
        "the input table has 3 columns. I could not write the query for the desired output. please help me",
        "@The Head Rush you can ignore the descriptive part",
        "Thank you @Sarath Avanavu",
        "What happened? @Jahangir Alam",
        "you edited @Sarath Avanavu",
        "Unrelated: It is *very bad style* to call srand in a function (other than a function which is called once at program initialization). Unless you have an unusual requirement and know what you are doing, `srand` should only be called once, at program startup, and it is a general principle that no library function should have the undocumented side-effect of resetting the random number seed.",
        "@AshishChugh If you want something threadsafe, this is wrong.",
        "You should get a [good book](http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list) on C++ and _read_ it.",
        "@deviantfan As rici points out, even without thread safety issues, this is wrong.  (With regards to thread safety, the function `rand()` is itself not threadsafe.)",
        "`!$i=0`? `sizeof(\"\")`? What is all this?",
        "Why you don't use codeigniter Active record",
        "What is your error?",
        "imran, can u explain it to me? because im not too expert with codeigniter.",
        "Kiren Siva, my error is there is no data saved in my database eventhough i've checked the value",
        "See @DS9 answer.",
        "Downvote with no explanation why. Wonderful.",
        "You say that you want didSelectRowAtIndex to run first and say that it already runs first? I don't understand what you want to do here.",
        "Sorry...I meant after. Stupid me.",
        "Why would you want prepareForSegue to run first? It is called when you are transitioning view controllers so why would it be called before the current one is resolved?",
        "I changed my question to say \"After\". Right now, prepareforsegue is run before didselectrow. I need a value from didselectrow to pass to another VC (where prepareforsegue comes into play). The way it is now, the code passes a nil value to the next VC because didselectrow still hasn't gotten the required value.",
        "Are you triggering this segue by your uitableviewcell being pressed?",
        "Yup...that's probably my problem right?",
        "But I don't know how to call an override function. It just goes on its own.",
        "\"How can I get didSelectRowAtIndex to run first\" You need to change your desires. Understand this: it's a framework. The order in which it calls things is the order in which it calls things. Accept reality. Your job is to arrange your architecture so that that order is okay with you. Actually, you should not be depending on _any_ particular order, because you never know, things may change without notice (unless they are explicitly documented to happen in a certain order, and even that has proven to be no guarantee when it comes to Apple).",
        "You could set up segue from view controller to destination in story board (control drag from view controller to destination... Not from cell to destination). Give this segue an identifier. Then in your didselectrowatindexpath function call performSegueWithIdentifier after you set the shiftID.",
        "Because they most likely have features in place to prevent it?",
        "Shouldn't I be able to login everywhere as long as I have username and password?",
        "No, some sites has features to prevent that kind of access.",
        "the referral page check is one kind of basic security control. Probably they don't accept post requests from an external domain",
        "What kind of features? What's the difference between sending data through my form with post and their form?",
        "Why the heck I get so many minuses?",
        "StackOverflow is a site where you post questions about a problem you are having, not a list of requirements expecting others to do your work. So have you tried to solve this yourself and ran into a problem? What error did you get? Can you show some code?",
        "Yes, that is what you want to do, and that is how it should look",
        "I really, really hope that there is absolutely no way that Microsoft has built something like this into the .NET language.  You may not think you are building a virus, but the only difference between what you are describing and a virus is semantics.",
        "Windows doesn't let programs hide themselves like that, for obvious reasons. If you could do this, every virus would do this. You would have write a root-kit to get this working.",
        "@Blorgbeard pretty sure I have seen programs do this, and by that I mean specifically \"viruses\"/Malware.",
        "@Krythic Indeed, but they have to use a root kit.  As I recall, Sony did something similar as a DRM measure and got hit with a hefty class action lawsuit, and that was in the 90's/00's, nowadays you would probably get arrested for domestic terrorism.",
        "@Namfuak Blizzard does this, too, with World of Warcraft. They have a separate executable that runs along side the program (Invisible except in the processes tab) which detects if the player is using any other programs that may be contrived as bots.",
        "\"Domestic terrorism\" is extreme hyperbole. The most that would likely happen is... your \"game\" gets classified as a virus. The Blizzard executable is nothing special; it just never opens a window. There is no way to legitimately hide a program from all of Task Manager. Some people have tried to \"coerce\" Task Manager into hiding their programs; as you imagine, this can get ugly (and thanks to UIPI might not even be possible anymore). Also [your game concept sounds very familiar](http://tvtropes.org/pmwiki/pmwiki.php/VideoGame/Imscared).",
        "@Krythic Most likely because you did not *show* any research. Writing viruses is almost as old as CS itself, so plenty of possible ways of hiding programs/code for all sorts of OS is already described everywhere. You also did not propose any concrete way of implementing your feature and instead add whole lot of unrelated text to the post.",
        "This would be malware. Irrespective of you intentions. It also would not be a game. Well, you the malware author might have fun.",
        "Please describe the problem you have, what you expect your code to do, and what it does instead?",
        "http://stackoverflow.com/questions/20435653/what-is-vanillajs",
        "SO is not a free coding service. Please make an attempt on your own. If you can't get it working, post what you tried and we'll help you fix it.",
        "You don't need jQuery. jQuery is basically a way of making javascript a bit easier but with a fairly chunky library to do so (another http request to slow down a website). Google \"JavaScript tutorials\" and get stuck in. jQuery doesn't do anything that you cannot do with JavaScript. **$('#someid') = getElementById('someid')**",
        "@dwhite.me : \"jQuery doesn't do anything that you cannot do with JavaScript\"... except write shorter, more readable code :)",
        "@TrueBlueAussie - Fairly irrelevant. Code needs to be interpreted by the browser first, enhance user experience second (including minimising load time as much as possible) and THEN a very distant third be legible.",
        "Try be more specific and share some code. Also from where do you have to read tuples?",
        "Search the web for \"c++ comma separated values file\".  See also \"c++ tab separated values\".  Also search for XML, and INI formats.",
        "So the question basically is how to write to a textfile in c++?",
        "there is just a function that reads the data - not sure how the underlying interface works or the data structure that is used\n\ntuple<string,int,double> data\n\nfor(i =0; i < numItems; i++) {\ndata = getItem(i); //Don't know how this function works\n}",
        "yes i guess so but the thing is I know how to write a text file but I don't want to have to read the data when the program starts up",
        "is that even possible?",
        "On which line do you get the error? Btw, you should never just try and suppress errors.",
        "There's not 34 lines in the above. Please mark the lines with a comment.",
        "Sorry. It's been corrected.",
        "there is no code in your question that tries to get a property of an object ... also no have no constructor for your article class so check out what new Article($row) really produces or what $row contains",
        "`conn` and `sql` should be `$conn` and `$sql`. Close this please.",
        "Hiding the error messages does not magically make some wrong code works. You have to make the code work, not pretend it works and hide the errors. As a developer, the error messages are your friend, they frankly tell you why the code doesn't do what you expect it to do.",
        "Seems odd that it would tell you that there are errors on lines 3, 4 and 5. It would usually hit one and throw an error, not collect data from all errors and show them to you.",
        "It's probably not a great idea to edit the meaning of a question after you originally ask it.",
        "It's `>=`. You call it *greater than or equal to*, not *equal to or greater than*, hence first `>` then `=`. The syntax for operators is described [here](https://docs.python.org/3.4/reference/lexical_analysis.html#operators). Also the you cannot use two operators one after an other (`is` and `>=`).",
        "Numerous things are wrong with this. When you are programming, everything has to be *exact* and spelled perfectly. It's `raw_input(prompt_str)` not `raw_input()(prompt_str)` or `raw-input`. It's `if x < y` or `if x is y` not `if x is < y`, etc.",
        "Change the line `if age is => 21:` to `if age >= 21:`.  There is no `is` and (as Bakuriu said), the greater than sign comes before the equals.  The Internet is flooded with examples of proper `if` statements.  What you need to do, as you're learning programming, is to look carefully and see that each character is right.  Two-Bit Alchemist found a few more errors that Python would have complained about after you get past this one.",
        "Hint: You don't really need a loop. You could solve this with just a little bit of math.",
        "what do you mean, \"1's\". how many numbers contain a `1` digit (`111` contains a one, so it counts for `1`), or literally how many `1` show up in all of the numbers? e.g. `11` counts for 2?",
        "then just `return 80000000` it's the fastest way",
        "smells like homework",
        "agree with @p.s.w.g, a loop here is the most brutish of force, especially considering the repeated use of `%`.",
        "@p.s.w.g: yeah, that sounds right although I'm trying to figure it out now....grrrrr must do real work!",
        "`smells like homework and sounds like OP missed a few days in class`",
        "This is literally just `100,000,000 * 8 / 10`",
        "@Rotem It's also literally 40000000 * 2, but that doesn't help the OP. The important thing is how you arrived at that equation.",
        "@itsme86 Number of total digits in the range, divided by 10, because the chances of it being a 1 are 1/10.",
        "@itsme86 Of course this only works for numbers which are powers of 10.",
        "@Rotem: The correct formula for the number of ones that appear in the numbers less than 10^n is n times 10^(n-1). In your case n is 8.  But I agree with the rest of the commenters; the fastest way to compute that number is simply to return it.",
        "Try use the `float` type: `3f / 5`.",
        "When you say \"no matter what type I use\", do you mean you're changing the type of just `difference`? Or of `ordinates`, `startX`, and `endX`?",
        "3/5 is not float.  That is integer arithmetic, as are your variables.",
        "@OldProgrammer In this case yes, but in other cases it can be doubles",
        "\"Since when does 3 / 5 = 0?\" Always, you're doing integer division.",
        "3/5 = 0 sounds right to me, now 3.0/5.0 that sounds like .60",
        "possible duplicate of [C++ program converts fahrenheit to celsius](http://stackoverflow.com/questions/3217842/c-program-converts-fahrenheit-to-celsius)",
        "@tmyklebu ...how? This is C#, that's C++; this has nothing to do with temperature conversion. While they have some similarities, this is a different question.",
        "@ArtOfCode: They're fundamentally the same.  Those trivial differences do not make your question not-a-duplicate.",
        "Too few commas after `HWND Window`.",
        "And what's this `Result = ;`",
        "The comma is actually there in my code, that's weird. \nI filled in Result and I still get the C2447.",
        "@StevenGosse Can you give us at least the complete error message please? My compiler doesn't have any error like C2447. WTH is it?",
        "https://msdn.microsoft.com/en-us/library/s95fcz9b.aspx",
        "w:\\common\\base.cpp(8) : error C2447: '{' : missing function header (old-style formal list?)",
        "The reason is that you have a trailing `;` here: `LPARAM LParam);`, try remove that and see if it works.",
        "error C2143: syntax error : missing ';' before '}'\nerror C2143: syntax error : missing ';' before '}'\nerror C2065: 'WM_ClOSE' : undeclared identifier\nerror C2051: case expression not constant\nerror C2143: syntax error : missing ';' before '}'\nerror C2143: syntax error : missing ';' before '}'",
        "that's kind of messy but that's what I get when I remove that semi colon",
        "@StevenGosse - change `WM_ClOSE` to `WM_CLOSE`, notice the case",
        "Suppose you have created a video software. It can be used for downloading videos as well as viewing and converting at the same time. To implement this in java, threads are required.",
        "use Google to search this question.",
        "The question in the title is very different from the question in the body of the post. Please clarify.",
        "This question is well out of scope of this site as it is far too broad. Beyond that, it asks one question title and then brings up a completely different question in the body.",
        "Welcome to StackOverflow. To ask about what X is needed for, you should first get a basic understanding of what X is. Read about Java threads and then come back with a more specific question, if you will have one.",
        "Generally speaking, GUIs are single threaded, that is, all the UI code should run within a single thread, blocking in anyway would have cause the UI to become unresponsive and ruin the user experience. Many UI Toolkits have means by which you can \"stop\" the vide execution at a given point (lookup modal dialogs) which are safe for user within the UI thread",
        "You need Threads to separate the work of your program so if for example the user has to drop a folder into the program with 100000 files this is work for extra Thread or Threads so the main Thread of the Program not stack and the User during the background Proccessing can do other things and not wait 10 minutes for example unable to do something cause of Stack.",
        "[Read the documentation.](https://msdn.microsoft.com/en-us/library/5dae5d43.aspx)",
        "`'strncpy_s' : function does not take 3 arguments`... there is your answer, right there. The arguments you passed `are: (char *, char, int)`. That's three arguments, and that's wrong. See remyabel's link, which is actually the top hit when you enter \"strncpy_s\" in a search engine.",
        "If this is indeed C++ (as it was originally tagged), then why not use `std::string` and friends?",
        "Missing #include. @DevSolar to be fair, Microsoft also documents a C++-only 3-argument version.",
        "Why can't you use `strncpy`? Not saying it would be any better than `strncpy_s`, just a different kind of bad. Anyway, `first_array` is a 1-element array of `char*`, so things are equally bad either way. Also, [avoid `TCHAR`](http://stackoverflow.com/a/3002494).",
        "first_array[i] is not a char pointer",
        "@paulm actually it seems to be, but it probably shouldn't",
        "@paulm I think you mean: text[i] is not a char pointer (text+i might be).",
        "This would much simpler by  using a SQL database",
        "Please don't post your homework questions here, without showing any _relevant_ efforts. This has a high probability of getting closed.",
        "Since you wrote \"I know how to write the code\", please show what you have done so far and clearly point out the piece where you have a problem with and what you tried so far. This will highly increase the chance you will get help.",
        "I am not asking anyone to do my homework for me. That would be very stupid since I have to give an exam as well and then I won't have stackoverflow.com over there to help me.I am asking for help on topics which my instructor has not yet taught, but assigned the due date very early for this so I want to have a head start on it . For me to actually start writing the program I need to know how to import the data from the file, and then make the program use that data. that is what I am asking",
        "Please don't post answers into question (self-answer is ok, also your use of reflection makes no sense when simple `new` restriction would allow the same behavior directly...)",
        "self-answer is not yet allowed (restriction time...). Could you elaborate on your comment please ? I'm not sure to understand. Thanks !",
        "http://www.bing.com/search?q=c%23+generics+new",
        "jQuery **is** regular Javascript. Where is your `console.log` in your code? Note, that unless you defined variable `count` somewhere else, it is `undefined` until you click `.metric` or `.imperial`.",
        "This question is impossible to answer in it's current form. We need more context. Try to put this together a [jsfiddle](http://jsfiddle.net/)\u2013or even better [stack snippet](http://blog.stackoverflow.com/2014/09/introducing-runnable-javascript-css-and-html-code-snippets/)\u2013that reproduces the described behavior.",
        "jQuery is just a bunch of JavaScript functions written by other people. You pass data between functions the same way as usual.",
        "jQuery is a library of javascript. They are not separate languages, so of course they can use each other's variables. In fact, they both use the same variable, not different.",
        "Your modification is not even syntactically correct. Could you please not try to improvise anymore?",
        "i fixed the snippet of code, also i meant from jquery to vanilla javascipt",
        "jQuery is just a library. It **IS** vanilla JS.",
        "You did not fix the snippet of code. After your edit it throws `Uncaught SyntaxError: Unexpected token (`",
        "dfsq - i want to track the count from one stage to the other stage??",
        "What's `function (test){\n   console.log(count);     \n}` supposed to do?",
        "Not sure where to start....",
        "i want to see the variable be displayed once i click on the two buttons.",
        "@AhmedHassan \u2014 Then you have to do something to display it **when you click a button**.",
        "@Quentin- Currently getting undefined. Can you answer this question can you pass a variable from jQuery into javascript???",
        "-*Facepalm*- jQuery **is** javascript, it's like a cheat sheet. People make functions to make it easier for others to use. So if you have a variable in jQuery you can access it using your own functions without the use of any jQuery.",
        "@AhmedHassan - you would have to get in your head that jQuery is just a \"helper (library)\" to achieve things in javascript that otherwise are a lot harder to achieve!",
        "not a good way but I use to do while(fscanf(fp,\"%s\",str)!=EOF)",
        "using `fscanf(fp, str, &str)` will cause undefined behaviour , you are overwriting your string pointer with the input you just read",
        "@sasha that only works for `%s` ; if OP is scanning other things then the matching against a positive number is better",
        "@user2301281 your post is very unclear; please post the actual code you have tried so far (make sure it compiles before posting)",
        "@MattMcNabb oh ok thanks for telling",
        "[How do I ask a good question?](http://stackoverflow.com/help/how-to-ask)",
        "sorry for the poor qs. Actually I want to scan the int from file & store it into array. But I don't know how to exist from loop.",
        "And what have you tried so far? How did, or didn't, it work? What are the actual results?",
        "Try: `n * 65537`",
        "@MatthewMoss: Why 65537. Unless I'm misunderstanding something, should multiplying by 65536 correspond to a 16 bit left shift?",
        "@therainmaker: Add one to preserve the value in the lower 16 bits, as well as copying it to the upper 16. Assuming the input value fits into those bits.",
        "@therainmaker But he's asking for *copy*, not *move*.  On the other hand, while my comment answer works for some inputs, it's a joke answer. And the problem is underspecified. And wait 'til the teacher tests with an input like 1234567. 'Cause, internet!",
        "What are we supposed to do with that?",
        "Please try to include all relevant code, here and maybe in jsfiddle so we can see what is happening.  Without context, your CSS means very little.",
        "Not to mention that 50% of that CSS is invalid - there are no spaces around the dashes in selectors such as *(but not limited to)* `background-image`, `text-align`, `margin-left`, etc.  @dippas Editing out his CSS mistakes might actually make the question invalid - the problem might have been his old CSS (with spaces) in the first place.",
        "I tried to post a screenshot but I don't have any score.  I thought the classes spoke for themselves but I can post the html if that is what you need.  I figured out how to make it work well enough I'm sure I'll pick up on it eventually.  For some reason html & css are harder than serious languages to me",
        "Yeah I see my question was very broad and you guys had nothing to go on really.  It was like 5 am I should have just went to bed.",
        "\"got it wrong here\" doesn't give any indication of what is wrong. Please be more specific in future. But look at the declaration of `ch` in `main` compared with the type that your `upperCaseToLowerCase` method requires...",
        "String::toUpperCase? https://processing.org/reference/String_toUpperCase_.html",
        "well for one thing you return the unmodified ch value, instead of the newly created `Variable` value. First of all, make the variable name lower case. Second of all, return that variable instead of ch. Secondly, make sure your types match.",
        "Also you will like to return Variable instead of ch in the upperCaseToLowerCAse method",
        "I don't see how it makes sense to add this without adding it to, e.g., the end of an `if` chain as well. And as Eric keeps repeating, the benefit from this over putting a `try` around it would not be enough to implement it over another feature.",
        "because !!!!!!!!",
        "Wow, people really hate this question, haha.",
        "@chris Can you point me to what Eric said?",
        "The `using` statement is not meant for catching exceptions. It's meant to be used to ensure that `Dispose()` is called even if you have an exception. It's the equivilent of doing a `Try/Catch/Finally` and putting the `Dispose()` in the `Finally`.",
        "@ZivS That's pretty much what I expected I'd hear :)",
        "`using` serves as an indicator that something is going to be cleaned up, saves you from remembering to explicitly call `Dispose`, and gracefully handles exceptions. That's a big benefit over writing it yourself every time.",
        "@BVernon, It's probably in half of his answers on here by now.",
        "\"I would then ask why they bothered to write the using statement in the first place\" - because most of the time you need a using statement, you *don't* need a catch block...",
        "@chris I would argue that it DOES NOT always gracefully handle exceptions. In fact it eats them in certain scenarios, especially when used with WCF.",
        "I'm voting to close this question as off-topic because it's a rant in disguise.",
        "@ChrisDunaway I actually knew what you meant, but that doesn't address the question. There are times you want control over the catch portion and you have to nest it inside a try/catch. But wouldn't it be cleaner if you DIDN'T have to nest it and could override the catch that using generates?",
        "@BVernon: The emitted code from a `using` does not include a `catch`, it is a `finally`.",
        "@JonSkeet Really? You don't expect and log exceptions when doing any kind of IO operation?",
        "@Guvante Thanks, point is the same though. Instead of 'overriding' it's catch block, pretend I said 'add' a catch block.",
        "@BVernon When JonSkeet codes, IO Exceptions catch and log themselves out of respect.",
        "@BVernon: I typically only catch the exception at a higher level, and log the exception there. I have far more `using` statements than `catch` blocks.",
        "I think the important takeaway here is that newbies might misunderstand how these two syntactic bits of sugar are different from each other.  I don't think this is a completely useless question, though the title should be changed so as not to mislead others.",
        "http://blogs.msdn.com/b/ericlippert/archive/2009/06/22/why-doesn-t-c-implement-top-level-methods.aspx",
        "@Pheonixblade9 Why did you change the title? I know how to do exception  handling inside a using block and that's clearly not what the question was about... at all??",
        "@BVernon your title could be very misleading to newbies, as using blocks are similar but distinct from exception handling.",
        "@Pheonixblade9 So that means you need to change it to ask something that has absolutely nothing to do with what I'm actually asking? THAT's misleading.",
        "@Pheonixblade9 Ask yourself is this question about how to do exception handling inside a using block? No, it is not. It's a question about why a language feature doesn't exist. If you're going to change it, change it to something that still reflects the actual question please.",
        "you should try searching on google before posting in SO.",
        "What's the reason of the `define()`? It doesn't work and triggers a warning.",
        "`isset` also check the value for whether it is null or not",
        "Thank you all for your time and effort as I said I don't want to use any condition. we just had some fun here;)",
        "@Anguslilei `char **s;` this isn't a 2D array, this is a pointer to a pointer.",
        "A total guess, `std::vector<std::string>>`",
        "You never should. You should use a vector of strings.",
        "What if I don't want to use vector, Is there any way that I could declare s in class Tool. Thank you all!",
        "When you say you don't want to use a vector, is there a particular reason you don't want to? Strings will be much easier to manage in a vector as compared to a array of pointers to string arrays, so unless you have an incredibly good reason to not use a vector, you should do that.",
        "Because I use a API that developed by others. One of the  API function parameter is char** arg.If I use s1, it works well but I really don't know how I could define s in class Tool.@RyanP",
        "Umm.. the formatting.. it hurts!",
        "Please do not use line number in your code here.",
        "Your question needs massive editing. Fix code formatting and also we don't know anything about your server or API.",
        "How are we supposed to read this code?",
        "Guys .is it readable now ?",
        "What is \"client server\"?",
        "Simply i send a message from android(Client)  to pc(server) url : http://192.168.137.1:8080/SpeeCom/DoubleMeServlet",
        "the program works the way it is now but in main if i change, write(\"The number {0} is greater than {1}.\\n\", 5.651, 3.427); to, write(\"The number {0:c} is greater than {1:c}.\\n\", 5.651, 3.427); for example, the program doesnt work",
        "Anyone? Im not sure what is wrong with my question.",
        "You didn't read the documentation for the functions that you used. You also did not narrow down your problem to a tiny testcase that would have revealed the issue to you (i.e. you didn't debug).",
        "i actually did debug and came up with the same answer as the guy below me",
        "So then why did you need to ask? That's why you got downvotes!",
        "because i was having trouble figuring out the issue, what is so difficult to understand, im new at programming and needed help so i asked.",
        "Yet as you just said, you _did_ debug and you found the answer yourself. Contradiction detected!!",
        "yes i did after struggling for hours lol so i decided to ask, after taking a break and coming back i was able to find it on my own. no harm in asking for help especially when your new,",
        "What I'm trying to teach you is that you should take the break and come back and try again, _before_ resorting to asking for help! :) That you figured this out on your own is proof that you did not need to ask. Hopefully now, given this success, you'll have the confidence to do that next time.",
        "Are you running this on a server or your local machine? There's also a big gap in your second link.",
        "I'm running it on my local machine. it's my mistake that there is a big gap in the second link..I just edited it now",
        "Try to the load bootstrap straight from the CDN. Replace your link with `<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css\">`",
        "It worked! Thanks a lot for your help :)",
        "I think that this question should have been posted on [**Code Review**](http://codereview.stackexchange.com/)",
        "@ArturFilipiak To be on-topic for Code Review, the question must be posed by the author or maintainer of the code. You can't just ask for code reviews of random code that you found.",
        "@ArturFilipiak It must be by the author. Artur, have a look at [this](http://codereview.stackexchange.com/help/on-topic). Near the bottom of the page is a little checklist - if you answer all the questions with a yes, it should be on CodeReview. One of the questions asks for it to be by the author",
        "Or maintainer. whoops.",
        "Or owner. heh....",
        "I'm not sure if OP is talking about Windows.",
        "While it may not be common nowadays to have `INT_MAX` be 2^15-1, it certainly is possible. Maybe it's not common on today's desktop computers, but don't forget about embedded systems, for example.",
        "And \"32bit operating system\" refers to pointer sizes / address space size, not necessarily int sizes.",
        "Windows x86-64 uses LLP64 data model, i.e. Win64's sizeof(int) and sizeof(long) are still 4. http://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models",
        "The OP isn't getting any error so doesn't make sense the 2^15 doesn't apply in this case.",
        "@jdweng So what? This doe *not* mean that an int will have 32 or 64 bit (with the usual 2-complement and no padding etc.). An int could have 7Byte with 13bit each, too. Even on a \"64bit\" system, which only means that the address space is 2^64 byte big.",
        "What each instruction does is written in the [instruction set reference](http://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf) (and presumably you also got some course material covering this).",
        "My professor went \"Off the Book\" For this, I took notes, but really I can't find any explanation for this kinda thing. Was just looking for a basic run-down on this.",
        "http://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-manual-325462.pdf for you",
        "You should use the preview feature to check your code is correctly inserted and readable. The preview is WYSIWYG so it's reliable",
        "For some specific input, please provide the expected and actua output. And please *please* format your code so it's readable, you *have* heard of indentation?",
        "What is your actual question? Please be (much) more specific than \"it's not working\".",
        "I voted to close, because *Questions seeking debugging help (\"why isn't this code working?\") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself. Questions without a clear problem statement are not useful to other readers. See: [How to create a Minimal, Complete, and Verifiable example.](http://stackoverflow.com/help/mcve)*",
        "also, take the time to format readably.",
        "@MarcusM\u00fcller You should include the link to your \"See:\"",
        "@Eregrith: good point; edited :)",
        "output is \"Nekaj ne delas prav\",it is not taking input from scanf().",
        "@Dikshant have you tried `printf(\"You entered char [%c]\\n\", op);` just by curiosity?",
        "@Dikshant I'll bet anything that `scanf` reads input, but it's not the input you expect it to be. Please ***edit the question*** to show the actual input.",
        "I think you all have read the problem and also punished me by down voting me.Now will you help me to find why this program is taking input istead of using scanf() and why it is giving drect default value as a output.",
        "why are you reading `r` from `stdin`? It is the result variable.",
        "We have not only told you what the most likely problem is and how to solve it, we have also told you how to improve the question (also see http://stackoverflow.com/help/how-to-ask) and you haven't done that. Neither have you acknowledged the solutions posted both as comments and as answers. Start by telling us the complete and actual input you enter to your program, then modify your code to see what [`scanf`](http://en.cppreference.com/w/c/io/fscanf) returns and tell us that as well.",
        "It is not taking any input ,it is just giving \"Nekaj ne delas prav\" as output and then program terminates",
        "have you tried debugger?",
        "Aha I found the problem, I did use the wrong port. Thanks anyway for your comment.",
        "Then you might consider to delete this question.",
        "No I still have another question regarding the class above. I use this class via another class who is calling the getMail() method. But maybe i better can ask that question in another thread?",
        "@user3198205 Another question is another question. Put some effort into asking it, since you expect others to put effort into answering it. Voted to close.",
        "Users gave me minus points. But not answer. I am new in java. Why?",
        "This code doesn't find out if the final value \"is what double or int\". The final value is a `float` because the division involves two `float`s.",
        "Sir, you need to try this code. If user input is 2/4 answer is 2 not 2.0. And if user enter 5/3 answer is 1.66667 not 1.",
        "It doesn't matter. The type is still `float`. If is to do with how `2.0` gets printed to the screen, not its type.",
        "@MuhammadRaza have you tried using ```int```for ```a``` and ```b```? To me it is not very clear what your question is. So I am just poking around. If you want to do division without rest in java you would define the parameter as ```int```.",
        "Simple thing is if user input is 2/4 the answer is 2 not 2.0. And if user input is 5/3 the answer is 1.66667 not 1 according to my c++ code. Can anybody do this same think in java Please?",
        "@MuhammadRaza I added an answer explaining where your understanding is wrong.",
        "Now you changed the meaning of the question completely.",
        "Sir i update my question again read it. Or second think. You know in calculator if we type 4/2 the answer is 2 not 2.0. And if we type 5/3 the answer is 1.66667 not 1. I just want to create something program like that i think now you understand me.",
        "Duplicate: http://stackoverflow.com/questions/14677448/how-to-cout-a-float-number-with-n-decimal-places",
        "Why can't you understand that it is just the way the number gets printed to the screen? I already explained that twice. Once in my answer.",
        "Making the constructor `protected` still allows you to \"specify what the constructor parameters look like\".",
        "true, but doing so requires the derived class to call super() or risk missing init steps that might occur. Abstract clarifies this is the signature only, no implementation. - It would be best if interfaces allowed to specify the constructor signature. But since they don't, I consider abstract classes the next best thing.",
        "You can not avoid calling `super`. It is called implicitly if you do not explicitly call it.",
        "the point is not to avoid calling `super`, the point is to specify the constructor signature.",
        "Just to clarify, this idea doesn't even work. `abstract` is not a legal modifier for a constructor, you make a class abstract by modifying the class declaration. There's no way in Java to mandate constructor signatures for subclasses, they are never inherited.",
        "I am fully aware that the Java language specification does not allow for this; I was making a point why it would be useful if it did.",
        "its dishonorable to copy someone elses genius solution, parrot it as your own and not give them any credit.",
        "This is a complete disgrace.",
        "The socket.io client code is obviously loaded, or the OP wouldn't even see polling XHR requests.",
        "When you include socket.io in the server app. Socket io makes the client side library available at /socket.io/socket.io.js",
        "Because it hashes instead. Hashing doesn't preserve ordering.",
        "http://en.wikipedia.org/wiki/Hash_table",
        "BTW, iterating while predicable order is the main use case of [LinkedHashMap](http://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html)",
        "See this question: [Previously on SO][1]\r\n\r\n\r\n  [1]: http://stackoverflow.com/questions/730620/how-does-a-hash-table-work",
        "Because order of insertion has nothing to do with hashing.",
        "You answered your own question. With an array the index is a number that increments with each insertion. The index can therefore maintain insertion order. As you (almost) said, the index of a hash table is the hash of its key and so unrelated to insertion order and perfect for quick lookup.",
        "What do you mean, \"which one is invoked?\"  You can figure out which one gets invoked by looking at the arguments passed to the method when it was called.",
        "Please put some effort into formatting your question.",
        "I'm voting to close this question as off-topic because the question makes no sense.",
        "People, please, do not downvote without leaving a reason why you downvoted this question.",
        "Thank you everyone for your responses! Sorry is everyone feels it is a bad question, I did explain I am new to both java and android.",
        "Did you search google with your doubt-simply `int[] myArray = { 100, 1,200,80 };` would have solved your purpose as achieved previously!!!",
        "You know the elements, you have a `for` loop running and you know about accessing arrays using indexes. What else is difficult here?",
        "PHP runs server-side. Javascript runs client-side. You'll want to run some javascript function upon clicking the \"trigger button\".",
        "You don't need PHP for that. PHP simply outputs HTML/JS. A button to enable or disable that would be pure JS.",
        "No, it cannot be done with php. Yes, you can do it with javascript, but it will depend on what the \"some javascript code\" does.",
        "Also, technically it could be done with PHP.. you could send a GET flag to not include JS files, which would, in effect, disable the javascript on the site. A session variable could be used to remember this request for the user, and then could be turned back on using another GET parameter in the request..",
        "@RaggaMuffin-420 But then each enabling/disabling action would require a reload of the page (or at least parts of the page), which is completely unnecessary.",
        "im using jquery infinite scrolling. http://www.jquery4u.com/tutorials/jquery-infinite-scrolling-demos/",
        "@Darksane Infinite scrolling is terrible from a UX perspective ([relevant xkcd](https://xkcd.com/1309/)). I would seriously think about whether or not it's really necessary before using this \"feature\" in the first place.",
        "@NullUserException I just said it was possible.. not preferred...",
        "Its not Else it's else",
        "If too should be if",
        "and While shall be while",
        "Less semicolons, less capitals. @Answers: just make one good answer instead of 5 incomplete ones. Stop trying to race eachother.",
        "updated youre code , removed semicolons",
        "I guess this is not what you want ... `if (userGuess = randomNumber)`, `if (userGuess == randomNumber)` is what you want",
        "@lordkain: do *not* answer the question by editing his post.",
        "best luck for learning Java Language !! Learn [Java syntax](http://en.wikipedia.org/wiki/Java_syntax).",
        "Not very clear what you are asking. Please try to post an specific question.",
        "u have poor understanding then =D",
        "Come on, help us to help you!",
        "I think the issue here is the fact that there isn't much information provided.",
        "@user3171818 No, you have a poor question. If I were to take a shot at this, I would say `int i = 123;` What's so hard about that?",
        "R.J got my question and answered.",
        "what the question is ?",
        "I could have guessed what the question was, but is not better to ask before posting an answer? Just to be sure.",
        "@user3171818 this is outright rude. I think Christian was wanting to help you and asking you for being more specific. And i agree, the question isnt completely clear. well, not that it bothers me. you might get lesser help if you arent clear and concise",
        "I cant think of a better way to phrase this question.\nI given enough outline in the title and also providing example in the question .",
        "The title is \"Java Sorting alphabet and get position number\". I don't think the question is about sorting, that's just unuseful information. Also you could have posted an output example (of the \"question\").",
        "ok..I will provide example of the question. I will learn frm mistake",
        "Kinda hard to debug something when you've provided no code whatsoever.",
        "if your using new operator you should have delete operator too. On g++ or gcc you should use debugging command line args like -g or -Wall or maybe get valgrind...",
        "Its an application of 100k lines of code, I am just asking for a general solution to be able to debug it by preventing the computer from freezing.",
        "`Do you guys have any technical solution for that kind of issue`  Yes.  Use your debugger. `I can't debug as it freezes the computer`.  A debugger doesn't start the program \"on its own\".  You have total control over when it starts, where to place the breakpoints, etc.",
        "You don't give us any details about what your program is doing, what compiler, what operating system..",
        "Without details you won't get any meaningful answers, and no one else - in the future - will benefit from your question either. That is why it is downvoted, and flagged as \"too borad\".",
        "@Neil : sorry about that. MSVC 2013 with Qt Creator on Windows 7. My program is basically making some calculation to output vector of numbers.",
        "You know.... *every* application is basically crunching some numbers and outputting it to a vector of some kind....",
        "@Cygnus : I am sorry, its true that I didn't provide enough information, my apologies.",
        "@Cygnus : it is an audio application which calculates oscillators with effetcts, mixes them, etc ...",
        "you sure it return false, cause it return true on mine",
        "The first part print `true` for me.",
        "Please print your real, compilable, code.",
        "don't compare floats with `==`: http://www.cygnus-software.com/papers/comparingfloats/Comparing%20floating%20point%20numbers.htm",
        "-1 [Your premise is wrong.](https://ideone.com/wuXlAc)",
        "Seriously dude, you should check your facts before posting Questions like this.  Your code will not output \"false\" on any conformant implementation of Java.  Now, you may be seeing strange results with floating point and `==` in other code ... but if you are going to post bogus examples like this instead of the real code, we can't help you.",
        "You are making us.",
        "Contrary to the notice, I did not mark this as a duplicate. I voted to close for being unclear.",
        "It returns true when I print it out; could you share the whole document of code that you have to see if there is a problem somewhere else?",
        "Can you please says what's not working ?",
        "what output are you getting? or an error?",
        "In the absence of an answerable question, you might want to start with trying to align the values returned in your subquery to the columns defined in the temporary table.",
        "`public static function` you can use inside class file not a standalone function , use just `function`",
        "`how do can I fix this error?!` reading couple tutorials maybe... Php functions are always *public* (and global).",
        "You didn't make a class",
        "`public` and `static`, along with `self` are keywords that can only work when writing a _class_, you just have a function, so either create a class, or re-write the code to a regular function",
        "You can use native queries with Doctrine, too. Or, if you want a different ORM, have a look at Propel, it also works well with Symfony2.",
        "Which classes should I extend or implement for writing my own model classes?",
        "Why did you not read the official documentation of Symfony2 and Doctrine2?",
        "I read it but sometimes it isn't clear explains some aspects.",
        "Compiling with warnings enabled would have caught this problem immediately:  `gcc -Wall -W -Werror` is your friend.",
        "Try to insert the code \" c=1;  \" before the code \" for(b=2;b<=a/2;b++); \"!",
        "_Any suggestions?_ Yeah, post your code.",
        "Can you post a snippet of code and perhaps the stack trace? Otherwise it's impossible to tell.",
        "you probably have an abstract method inside that class?",
        "abstract methods can only be defined in abstract classes.",
        "Show us `ListOfStrings`... and the exact error message.",
        "You are trying to instanciate `ListOfStrings` not `MyListOfStrings`",
        "I'm voting to close, downvoting, the whole shebang. Please put some effort into your questions and problems.",
        "As you can see, bad questions will get you crushed out here. I don't personally have a problem with the actual question but people shouldn't have to coax the question out of you. \n\nPlease see http://stackoverflow.com/help/how-to-ask to save yourself problems in the future",
        "Also a recommendation to try to improve the formatting of your code that you post in here and your code in general. Good formatting including using an indentation style that is uniform and consistent will help others (**us**!) to better understand your code, and more importantly, it will help **you** to better understand your code and thus fix your own bugs. Also it shows that you're willing to put in extra effort to make it easier for the volunteers here to help you, and that effort is **much** appreciated.",
        "I don't think this example alone is sufficient to describe the logic you want to encode. Can you explain more?",
        "Do you really mean lower case \"add\" in list2?",
        "@paul: I corrected it. please see my edit",
        "String.charAt index and StringBuilder append use should do the trick.",
        "if you have only 2 Strings you can concatenate them with (+) operator. s1+s2 would produce what you want",
        "@MirekSurma Look closely. The contents of each string are interleaved. Straight concatenation won't do",
        "yes I have tried both the methods but its not working,its showing String out of index exception",
        "Hi , what if I have my strings like this \u2013 String str1=\"abc\"; String str2=\"xyzwerwer\";where number of chars in one of the Strings are more than the other,here I want to get the output as axbyczwerwer",
        "Did you try something? What is your suggestion?",
        "I am a beginner and really feeling difficulty in making it work.",
        "So post what you have got so far. (And don't look too much at the answers below, as they are not quite right)",
        "You should try to solve it by yourself, if you want to overcome your 'beginner'\nif you really struck, try post what your progress",
        "Could you please explain your problem? Your code is a part of one function and another function...",
        "@NewbieHasker By the looks of it you should start with a C++ book or tutorial.",
        "What happens if you have ten million rows in dbo.SomeDynamicView? EF will get all ten million rows before it will get to the AsQueryable<T>() part.",
        "At least it works for me :)",
        "Yes, it will work. It will return you a Queryable but its not what I wanted. I wanted deferred execution. In your example, you have executed the query before you get to the Queryable part. Which basically kills the whole idea of Queryable in this case.",
        "For me it doesn't work. I get [this](https://msdn.microsoft.com/en-us/data/dn313107) exception.",
        "Would a safe read-only collection be ideal such as the following? \n\n`var x = Database.SqlQuery<UserSubscription>(\"SELECT * from dbo.vw_Subscriptions\").ToSafeReadOnlyCollection();`",
        "try printf(sizeof(A))",
        "You haven't allocated any memory for `a` to point to. The same applies to `a->name`. You need to allocate memory for both.",
        "Neither of your pointers `a` and `a->name` point somewhere reasonable.",
        "You might like the [comp.lang.c FAQ](http://c-faq.com/), especially section 6.",
        "Undefined behavior is just undefined behavior. It's not guaranteed to be \"wrong\", \"random\", \"garbage\" or anything else.",
        "Does here \"if\" condition affect the execution & assignment of value of b?",
        "@userXXX yes, it does.",
        "What do you want to use it for?",
        "Three values to generate the same number is not generate a random number",
        "@starblue For terrain gen, so the values need to always be the same",
        "@Blam Its seeded random",
        "\"Without using new Random()\" Are you asking about how to implement your own pseudo-random number generator? If so, read [Wikipedia](http://en.wikipedia.org/wiki/Random_number_generation)",
        "@tobias_k Yes I'd like to know how :)",
        "@Dave you beat me to post it.",
        "Store the 4 values: `seed`, `x`, `y` and the result of the generated random number inside a data structure. Then, for future calls of your method, search the value of `seed`, `x` and `y` and return `value`.",
        "@Dave I'll take a look at that",
        "@Dave Oh nevermind lol",
        "Well, here's some legitimate reading for you: http://en.wikipedia.org/wiki/Pseudorandom_number_generator It's a very complex subject, but there are many algorithms out there for turning sequential inputs into difficult-to-predict outputs. But then, they're all built for single-seed, multi-read, meaning they have a slow startup time. As I said in a comment on an answer, you'd be better off defining simple seeds for entire chunks of your landscape and generating all the numbers for each chunk at once (with coords in the same order!). Then you get deterministic behaviour and fast processing.",
        "What is the whole purpose of the word Random then? If you want the same number for eternity, why can't you use `public static final float NEVER_CHANGES = 0.2f`",
        "@Dave Ok thanks for that, I will read",
        "@ha9u63ar Because that would not be useful to generate terrain that is flat :)",
        "Three inputs guaranteed to return same output is not a random number generator or even pseudorandomness.",
        "@Blam Ok, fine, you win. I was looking for a function with three inputs that returns a number that is different then all the others depending on the x, y, and seed values. Is that too much to ask?",
        "Then ask that question.",
        "@Blam This sort of thing is what pseudo-random generators are for: repeatable results with random-like distributions. Just consider all three inputs to be parts of the same seed. The OP should have posted asking about a pseudo-random generator rather than a random generator, but I think that's splitting hairs (besides, not everybody knows about random vs pseudo-random)",
        "@Dave Thanks for the support on that",
        "@Blam I edited my question. Just for future reference, what would the new method be considered? Would it be random or psuedorandom, or something else?",
        "I would call it a method that returs a repeatable output (I would so use decimal over float) from three integer inputs that preserves a pseudo-random output with only one of the three inputs as static random input.  I am not a statistician but I am a programmer and mathematician.",
        "This does not add any value to column 2.  The `AddItem` method takes a value and optional index (row index) as argument.",
        "@DavidZemens since the rowSource type is \"Value list\" delimited strings are interpreted same as columns. above code from Kong will work.",
        "@krishKM in which version of Excel? Using 2010, `Debug.Print ListBox1.RowSourceType` raises a \"member not found\" error. I can see it in the Locals window, but not in the Properties pane.",
        "@krish there is no RowSourceType property on Listboxes (or Comboboxes) in Excel. You are probably thinking of Access.",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-alt",
        "`Alt` tag which also stands for `alternative text` is a string which shows up in case the Image is not found in the specified location. Downvoting because it was a readily available info on Google search.",
        "This question appears to be off-topic because it shows zero research effort.",
        "Question would've been easily answered if you had spent the time to type in three words into a Google search.",
        "Actually, TestFlight was not 'shut down'. It was purchased by Apple and subsequently incorporated into iTunes Connect. It is still called TestFlight, as you can see in this link:\n\nhttps://developer.apple.com/testflight/update/\n\nThe question I asked refers to this new implementation of TestFlight.",
        "marked your comment as helpful, thanks!",
        "Can you post your code attempts so far and clarify where you're getting stuck?",
        "`Start`/`Stop`??!?",
        "Just accumulate them into a sum. What's so hard about that?",
        "Your code does not appear to be C++, are you sure you tagged the question correctly? Also you are not receiving the number from the user nor are you accumulating, only calculating the numbers between 1 and the given number.",
        "@Guvante, I removed the C++ tag. I am programming in C++, but this was just some rough pseudocode to help explain where my thinking currently was (hence the mistakes).",
        "@Lee Daniel Crocker, no need to be rude and assume that I should automatically know how to accumulate.",
        "@Anonymous - if you are loking for a c++ solution don't remove the c++ tag. :) But you should have stated: This pseudo code, how can I do that in c++.",
        "@Nielsen, that was my mistake. Re-added the C++ tag.",
        "@Anonymous: You should modify your pseudo code to be actual c++. Stackoverflow uses the actual language as the basis for communication as everyone here who can help knows c++ better than your own variant of pseudo code. Also having a minimal program helps better define where to go next.",
        "Why Jan15  is under month ?? Shouldn't it be Jan or January",
        "When do you say that a given month is greater than `Mar15` ? Put that logic in a method and call it to check.",
        "possible duplicate of [Get Month name from month number](http://stackoverflow.com/questions/3184121/get-month-name-from-month-number)",
        "Your data is way too inconsistent. Can't even parse the month as 3 letters because of April.",
        "See the duplicate topic I suggest, split at fourth character and you'll be done. if you're data are ikconsistent (april) you'll have to do it manually and we won't write it for you so show your tries.",
        "@KcDoD in My requirement it includes Year also with month",
        "@AFract  Data will be always in below format...                                            Jan-14 Feb-14 Mar-14 Apr-14 May-14 Jun-14 Jul-14 Aug-14 Sep-14 Oct-14 Nov-14 Dec-14 Jan-15 Feb-15 Mar-15 Apr-15 May-15 Jun-15        how to compare Mar14 lesser value in this form of data",
        "Then your sample is wrong. Read my answer again and try something.",
        "@AFract duplicate link .,u hv provided convert from datetime format to MMM format ,,i need to convert from MMM format to datetime format to compare",
        "Don't you think it's a little bit related ?",
        "C-x C-b. That is all.",
        "Thank you so goddamn much.  Im new to this stuff and its not very user friendly.",
        "There's no need to yell (in your title) or use offensive language (in your comment).",
        "@phils answer is good. But I think that the top of the tutorial should tell users how to quit the tutorial and get back to their original buffer. I just filed a [bug report](http://debbugs.gnu.org/cgi/bugreport.cgi?bug=20371) for this. I don't see why this question should be closed as being unclear. To me it is clear: the OP fell into the tutorial and panicked, worried about how to get back to where s?he was.",
        "Questions seeking debugging help (\"why isn't this code working?\") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself. Questions without a clear problem statement are not useful to other readers. See: How to create a Minimal, Complete, and Verifiable example.",
        "The reason why it's not working is just because the DOM wasn't ready before the script was executed.  \n7 downvotes? Takes just as long to put the answer here...",
        "I recommend you start with this http://adrianmejia.com/blog/2012/09/11/backbone-dot-js-for-absolute-beginners-getting-started",
        "you guys could help him ask the question too... @KimGysen +1",
        "which type of file are u creating?",
        "you can type any file extention like .txt .exe",
        "What's your question???",
        "sorry its not a question........i just uploaded that's all",
        "@anugrahsp what do you mean it's not a question? It has to be a question, that's the format of this site.",
        "Damn, I can't minus answers. Have you read the documentation? Those classes are introduced to have different sizes for button group. Have you tried it before suggesting? From documentation: `Instead of applying button sizing classes to every button in a group, just add .btn-group-* to the .btn-group.`",
        "then you can use only font size... your buttons size connected whit your font size",
        "I don't have anything to do with button size. The question title is: Bootstrap 3 \"btn-group\" non-responsive behavior on small screens. Try to build simple `btn-group` with 3 buttons. And re-size the window to a very small, you will see what happens with the buttons. But please, after that, do not suggest me to add `white-space:nowrap;` to a css, because I asked for advice, how to win this w/o bringing new styles. Only bt3.",
        "you can do something like this <div class=\"btn-group btn-group-lg btn-group-sm btn-group-xs\">...</div>",
        "Have you actually tried what you said in your last comment? that'll just make buttons have the btn-group-xs style. What they should implement is something like btn-group-lg-xs that makes buttons have \"lg\" size when the screen is \"xs\"",
        "@VostanAzatyan you are absolutely not competent in that offer, Ilia Shakitko correct recommend you first read the documentation",
        "30% of what? The rows? 30% of 10 rows?",
        "meaning that i want to find the mean only for the first 30% of the data. (2+4+6)/3 = 4 @rawr",
        "`mean(head(data, .3 * nrow(data)))` you said bottom but you meant the 30% lowest values? not the last 30% rows?",
        "yes. 30% of the lowest value in the data. @rawr",
        "what if i have 2 columns? for example i have \n\nx<- matrix (1:10, ncol = 2)\n\ni tried to use mean(head(x, .2 * nrow(x))), but it gives me wrong answer. \n\nit should be (1+2)/5 for the first column and (6+7)/2 for the second column.\n\n@rawr",
        "`apply(x, 2, function(x) mean(head(x, 2)))` for the first two elements of each column",
        "that's great! tqqqqqqq @rawr",
        "and last question, what if i want it to calculate the mean for different elements in each column? for example, first it calculates the mean for the first 20% elements in the data, then it calculates the mean for 30% elements in the data and so on. Where should i specify it? First it should give 1.5 and 6.5 answer. then it gives 2 and 7 @rawr",
        "something like `lapply(2:5, function(ii) apply(x, 2, function(x) mean(head(x, ii))))` however this method becomes a pain if you want to skip the first few. `head` and `tail` are just (kinda hacky) quick ways to subset data",
        "`delete` is not supposed to clear the memory contents",
        "Undefined behaviour. Anything can happen.",
        "By chance you are referring to the old memory before the OS has happened to reclaim or reuse it. It is not guaranteed to work and should be considered a bug in your code.",
        "You shouldn't be using `new` and `delete` anyway. They almost always lead to bugs. This is C++, not Java, so we don't need to explicitly use the heap. Just do `int c[100]` instead of `new`, then you don't need to delete",
        "You could also use a `std::vector<int> c(100);`",
        "In modern clean C++ application code (evolution completed by C++14 and `make_unique`), if you use any of `new`, `delete`, raw pointers or even (in most cases) C style arrays, you are doing something wrong. Use C++ (STL or other) containers, values with move semantics when practical, and smart pointers like `unique_ptr` for heap allocations. It might be better to learn these first, and leave more primitive stuff for later (maybe after learning the implementation of library-like template classes).",
        "@hyde I would even go so far and argue that learning to deal with `new` and `delete` is only useful if you have to maintain legacy code bases. There is absolutely no need to learn about them otherwise, *not even late*; you would just be burning precious brain cycles for zero benefit.",
        "your array is uninitialized. also yelling \"please help me\" won't make us want to help you more (rather, the opposite.)",
        "`TeamList[5][7]= '\\0';` is out of bounds.",
        "do you mean i have to put = int char TeamList[5][7]; above aswell or just put int in front of my array line of code",
        "sorry for yelling lol",
        "how do i fix it",
        "No, @juanchopanza means that arrays are indexed from 0, so the last index is [4][6]",
        "The last element is `TeamList[4][6]`, and arrays are not zero-initialised. Look up arrays in your fine book.",
        "..and then give them up and use the std::string class and containers.",
        "If anyone can fix my code for me it would be greatly appreciated its for school =)",
        "thank you everyone",
        "Doesn't `strcpy_s` have three parameters?",
        "@molbdnilo I don't think it matters if the arrays are not zero initialized in this case.",
        "@juanchopanza I believe the message is from `strcat_s` not finding a zero to concatenate after.",
        "can someone edit my code to work and send it to me tomas_munro90@hotmail.com so i know what the correct version would look like sorry to be a pain =)",
        "A web search will show you any number of examples of how to use `sprintf`...",
        "use `%lf` print format and see [cplusplus.com/reference/cstdio/sprintf](http://www.cplusplus.com/reference/cstdio/sprintf/)",
        "@amdixon: No need for `l`...",
        "Can you send me a link where is work in pointer? I did not find. And if you're bored go to read the paper, and do not write useless advice.",
        "@amdixon: its char array, not a pointer",
        "An array decays into a pointer",
        "There is no such thing as a PHP element",
        "Would `text-align: center;` be out of the question? That or pop your php output into a div that is where you want it to be?",
        "A PHP element? There's a new one. What **HTML elements** does `PopupContact()` produce?",
        "please put PopupContact(); content",
        "This is an HTML question, not php",
        "Tried left, right so why not center?",
        "What are you trying to do with this:  `array[ch - 'a'] ++`?",
        "what's the question? please read the FAQ's about how to put together a proper question as well as the do's and don'ts",
        "What part of your code seems you cannot solve. If you are the one who wrote this code then you know the parts where it freaks out!",
        "Sorry, I am new to this site, so go easy on me :) I just need a function that will store user input value somewhere (perhaps an array) and upon request will display the summary of all inputs so far.",
        "I need to add a function, not to fix the code. Function that will remember the user inputs so I can display a daily summary. I have created a daily sales summary button but it is not scripted",
        "related: [Matrix Transpose in Python](http://stackoverflow.com/q/4937491/4279)",
        "@J.F.Sebastian over-killing for this purpose, I don't want to create extra space.",
        "@os1 If you're so much worried about space then there's [`itertools.izip`](https://docs.python.org/2/library/itertools.html#itertools.izip) as well that returns iterator.",
        "@AshwiniChaudhary Why shouldn't I worry about space, above is a toy example with list of limited length.",
        "@AshwiniChaudhary  Even zip returns iterator. yes, space is not a concern here.",
        "@os1 Not in Python 2.",
        "Please note that we do not provide code's from scratch. If you need some help, then show us what you have done, what problems you are exactly facing with the code and also about what you expect the program to do, indicating if there are any limitations. Read [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask)",
        "I got that \"I'm being asked to do someone's homework\" feeling going on. Are you confused as to what steps you should take? Have you taken any steps and you are getting stuck somewhere?",
        "i wanna to insert prime number from 0 to 150 in linked list \n\nand calculate the sum and the average of this linked list elements ?",
        "Is your issue the linked list or determining if a number is prime?  Use `std::list` as your container.",
        "So show us what you have tried.",
        "yes ,, i confused ,, what steps should i take ,, :)",
        "my issue is the linked list ,,, how implement it and insert this number in it ,,",
        "I'd probably write some code to insert a specified number into a linked list. Then I'd write some code to determine whether a number is prime. Then I'd generate numbers from 0 to 150, check if they're prime, and if so insert them into the linked list.",
        "Check out this similar question. http://stackoverflow.com/questions/10350724/linked-list-storing-prime-numbers-from-1-to-1000. It will give you an idea about steps you need to take",
        "have you tried executing?",
        "Run the program that you created.  All you did was `build` the program.",
        "You need to choose one of the beginner books from here: http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list and have a good read.",
        "On what basis are you saying that the distance between color and blue is 5? It is either 4 or 15. Nevertheless, where is the code you've attempted and what doesn't seem to be working?",
        "No, the distance is 5, but the way he's asking is weird",
        "You could do some research before - possible duplicate of [How to compare almost similar Strings in Java? (String distance measure)](http://stackoverflow.com/questions/2084730/how-to-compare-almost-similar-strings-in-java-string-distance-measure)",
        "Split the sentence by empty space and work with indexes to find out the so called distance.",
        "@R.J yes , and when there is zero word between two words, the distance between them is 1.",
        "@Fabinout That's weird.. but you can add 1 to the final result according to my solution.",
        "@R.J That's not weird that's how distance has always been calculated. 'a' and 'b' are 1unit of distance appart in the alphabet, etc.",
        "@Fabinout the way I am asking is not weird. I am simply asking about the distance between two word entities in a corpus. What is so weird about that? You saying its weird makes you weird.",
        "\"you're the weirdo\", \"no you're the weirdo\". Reddit all the way down.",
        "When providing such a 'tool' answer, you need to provide explicit examples",
        "You are off topic.",
        "This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have [sufficient reputation](http://stackoverflow.com/help/privileges/comment) you will be able to comment on any post.",
        "Doesn't work. Maybe along time ago it did.",
        "Please take a look in this link: [Understanding AJAX CORS and security considerations](http://stackoverflow.com/questions/21854516/understanding-ajax-cors-and-security-considerations)",
        "Why!? Please, in the name of all that is sacred, tell us *why*!",
        "@LutzHorn: because it's homework.",
        "Yes it is a homework. But learning programming languages and creating something is my passion and I love it. I ask my questions here not just for the sake of finishing my homework. I ask my questions here because I want to learn! I am hungry for knowledge!",
        "How can I avoid my questions getting - points?",
        "You must answer [What have you tried](http://mattgemmell.com/2008/12/08/what-have-you-tried/) . Have you ever try to solve it by yourself and what steps you tired and failed?",
        "Any effort so far? .NET has `File.Move` method. And you can schedule your program in a _Task Scheduler_ for check every minutes for example..",
        "Have you done anything so far? Don't expect us to do your homework.",
        "you can use FileSystemWatcher,  but a winservice should be better",
        "your question should specify exactly what you are trying to understand.",
        "@adrichman On submit or when you fix the error next to the field it doesn't dissapear the javascript that is, also its' not executing my phone field maximum 10 minnimum 8.",
        "Do you mean your validation persists although the inputs are valid?",
        "@Newbie Yes, exactly",
        "As for the email validation, it does disappear when I try to retype a valid one. As for the phone, yeah, your validation seems wrong",
        "@Newbie Yeah I don't understand why it's not dissapearing?",
        "500 errors are usually solved by looking at the server logs. There will certainly be something related to the error there. Also I hope you're not mixing the `mysql_*` and `mysqli_*` functions since you've tagged both of them",
        "so if you remove if() then code runs?",
        "I'd highly recommend not using `while True` unless you have to -- do you know what it does?",
        "Define the problem specifically. What's going wrong? Where do you think it's going wrong? What is expected? etc",
        "I don't think you understand what a `while` loop is used for. Perhaps you should go back to basics and learn how they work and when they should be used.",
        "Aye, my teacher semi-teaches us.. haha. Alright, is the problem definately with the while loops then? And the problem im having is that i need one of the two characters strength to eventually reach 0 (when they die). But this isn't happening",
        "Your problem seems to be the while loop. I'd recommend reading about it: http://en.wikipedia.org/wiki/While_loop What you describe in your first sentence is what I would expect from a while True loop.",
        "For example the first part of your code can be simplified to: `dice1=random.randint (0,7)\n    dice2=random.randint (0,7)` because the while True starts a loop that never stops (the condition is always true) but the break stops it after the first iteration.",
        "You should provide the error details, if any and why you can not make it work.",
        "Rakibul, i want my code takes inputs two matrix of size 3 * 3, and at the end display results with additions.",
        "it shows the content already, do you mean addition of the content?",
        "yes, it show simple matrix but i want addition, for ex for 1st array i enter 111... and second 222... and result will be 333 in results matrix",
        "u have only one matrix, create another and write an `add` method to  create the addition matrix",
        "what you want exactly?",
        "and why you alloc string there is no need it.",
        "What kind of object are you getting from the array?",
        "That depends on the type of objects that exist in your array.",
        "thank u any way  \nsorry for annoying , this code work correctly when array includes are strings , but it's doesn't work when array are dates of time , so what could i do please , i need to get my date array as strings",
        "Your code works for any object. Though you should never do this for anything except debugging. If you want to convert dates, use `NSDateFormatter`.",
        "this is my code of dates array and i want this array display as subtitle on table view cell .",
        "\"DELETE FROM employee WHERE id = $id\"",
        "Yes it work thanks Sir_Winn3r",
        "A) it wouldn't compile. B) It is *undefined behaviour* to access vector elements out of range.",
        "Your code has a bug in it. Fix the bug and the mystery will go away. Your question is a classic example of \"My code has a bug in it. Why doesn't it work as I expect it to?\" and the answer is always \"That's why we fix bugs.\"",
        "`strs.pop_back;` should be `strs.pop_back();`.",
        "Have a look at $sce to display text as html in an angular app",
        "paste your code please.",
        "stackoverflow.com/questions/9381926/insert-html-into-view-using-angularjs",
        "Please add your code.",
        "My HTML code is like this\n<span data-ng-if=\"error.message\">{{error.message}}</span>",
        "`<span>` is not `<a>`. A span is just text inside another block or inline element. If you want an anchor (`<a>`) it should look something like this:  `<a href=\"#\" data-ng-if=\"error.message\">{{error.message}}</a>`",
        "Have you googled it before asking question here",
        "try using Math.round()\r\n\r\nsee more explanation here: http://stackoverflow.com/questions/8235076/how-to-round-double-to-nearest-whole-number-and-then-convert-to-a-float",
        "That's way too easy. Do some research yourself. It's a bit annoying that people do not spend their time in researching but expect others to spend time on answering such very easy questions.",
        "possible duplicate of [Math round java](http://stackoverflow.com/questions/13210491/math-round-java)",
        "Yes Vinayak Thanks for your help",
        "remove `comment-`",
        "Where's the *\"I tried this but it didn't work:* part?",
        "Use [substr](http://php.net/manual/en/function.substr.php) to remove part of a string. Next time take the time to search on Google, this is very easy to find.",
        "D\u00e9j\u00e0 vu @ can you give me the code?",
        "-1 just for asking for code.",
        "cant find anything.. @ Drown can you provide me anything",
        "What is IconPath?",
        "Do you want a single character or some substring? If you want a substring, where should it start?",
        "i want substring",
        "it should start just before last occurence of '.'",
        "The question is worded very strangely. The character before `'.'` in this example is `'o'`. If what you want is the substring *between* the last `'/'` and the last `'.'`, please specify that more clearly. That will probably help you avoid a lot of downvotes.",
        "Why do you keep ruling out possible solutions? The keyword `double` can be used as many times as you like. Use it. C++ supports friend functions. Use them.",
        "Ok. First of all answer the question of @juanchopanza and then also tell us, why do you add non-existing restrictions to the language?",
        "May I suggest you find yourself a nice tutorial on the basics of the Objective-C programming language. If you don't know how to write a simple `if` statement, you are never going to be able to write an app. Spend time now on the basics and save yourself a lot of time down the road. Good luck.",
        "@maddy thats your opinion! its better to ask a question and be a fool for 10 minutes than to never ask and remain a fool forever! This is how I learn, so you can either answer the question, or be nice!",
        "I was being nice. That was an honest, friendly, sincere, meant-to-be-helpful comment. It really is important to learn the basics of the programming language.",
        "Where do you have the `<form>` tag?",
        "please study how to use basic php : http://www.phptherightway.com",
        "Why `session_start()` @bcesars? There is no session indicated here.",
        "@JayBlanchard Lotta *where's and why's* - *Mornin' Sam!*",
        "My bad. I assumed there is an session in this code.",
        "Some *who's* and *what's* too! *Mornin' Ralph!*",
        "Just no *when's* \u2013 @JayBlanchard *why?*",
        "Well played @Fred-ii- I would assume *when* is *now*.",
        "Is [`NOW()`](http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html) a good time? \u2013 @JayBlanchard",
        "Just then it was @Fred-ii- ;-)",
        "Please show a minimal understanding of the problem. Have you ever heard of batch files? Do you know what `copy` or `xcopy` do?",
        "Yes, I already run batch file every day with task scheduler, that is what I call script :). And at copy you can set where to copy files but my problem is that I need to copy files, witch have different endings, so I need to move files who starts with same name and don't tell the ending.",
        "Read up about how to use placeholders then. You're probably familiar with the syntax `copy *.doc SomeDirectory` where the * stands for \"anything\". You can as well write `copy Protocol-*.doc SomeDirectory` to copy just files with \"Protocol\" as prefix.",
        "These are very basic concepts covered in the first chapters of any of the zillion of tutorials that a 2-minute search will dig up.",
        "so, what You propose?\nI can't root device.\nI need change language via appium and python",
        "So why do you give me a \"-1\", when it is on device without rooting not possible ? There is another option you can do... you need a server-client, that means your app and server communicates and the device sends a command to do a screenshot by the adb on the server! In other words, not the adb on your device is doing the screenshot, the adb on the server is doing it. Its a good workaround.",
        "I don't give You any points. I have to small point of reputation to vote",
        "This my Code: `protected void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.guestbook_layout);\netName = (EditText)findViewById(R.id.et_name);\netCity = (EditText)findViewById(R.id.et_city);\nBtSend = (Button)findViewById(R.id.sendReq);\nString name = etName.getText().toString();\nString city = etCity.getText().toString();\nString send = BtSend.getText().toString();\n}`",
        "You got down votes (-5) for your question so I don't want you to get more down votes, thats why I voted to close your question...",
        "Put function B inside of function A",
        "Or, just put a call to B inside A.",
        "in which language?",
        "Could you describe your scenario? Do you have access to modify `A()`? Is it in a class? Do you want to call `B()` before or after `A()`, etc?",
        "No I don't have access to A() , and i want to call B() after A() is called. and it's in Ajax",
        "And What error you are getting?",
        "public class Point1 \n{\n private int _x, _y;\n public Point1(int x, int y)\n {\n  _x = x;\n  _y = y;\n }",
        "If this is the whole class, you're missing a `}` that closes the class definition.",
        "@IgalRozman Please use the edit button under the question to add requested details - comments isn't a good place for it",
        "@kocko -Ya, I added that (assuming its a typo) :)",
        "public class Segment {\n \n private Point1 _poLeft, _poRight;\n \n public Segment(int leftX,int leftY,int rightX,int rightY)\n {---)",
        "NullPointerException",
        "@IgalRozman  - Please add your code to the *question* itself and not in comments",
        "What's constructor must be to public class Segment ?",
        "class Segment : Point1 a,b; should be better way",
        "That jsfiddle is coming back with an error 404 page.. can you just post the full link?",
        "Please develop more your question",
        "the question is well developed, jsfiddle is a place where you have 3 boxes for your code: html, css and javascript... the code on tutorial mixes them and he wants to know how to separate it",
        "You should pay attention to the warnings the editor is giving you rather than trying to get around them by breaking the URL. Fiddles are certainly welcome, but you still need to include the important code snippets within the question text.",
        "in fact there is an option indicating where the script should be placed in jsfiddle, it's currently `onload` in your fiddle, you have to change it to `wrap in <head>` and everything will be fine http://jsfiddle.net/Tn8xC/1/ (the options are on the left side bar in **Frameworks & Extensions**)",
        "We can\u00b4t do your homework for you, please make an effort and if you get stuck and cant find the answer anywhere stackoverflow is the place to be. There are many tutorials on how to start coding in windows forms, good luck! :)",
        "How long it takes to compile depends on many many factors such as the power of your machine, the amount of code and the libraries you're using. As such it's near impossible to answer.",
        "@DSG quite possibly - another piece of string question, depends how fast he can write code...",
        "I don't think this is right/  From what I can tell, it refreshes everything on the refresh tab.  That's the OP's original problem (and mine).",
        "This does not solve the posted question and can do more harm when refreshing the whole model.",
        "While the UI does make it look like you can update only a single table, the result is that all tables are updated. So unfortunately, this answer is incorrect. It would be great if the editor was updated to work as described here.",
        "What's the result and why?",
        "But this example is not a valid `long` or `int`.",
        "what format is the string? looks like hexadecimal? If so, then there's plenty of answers already: http://stackoverflow.com/questions/1139957/c-sharp-convert-integer-to-hex-and-back-again",
        "Do you want to remove alphabets from this string and convert remaining characters into a nummber?",
        "FYI: Numeric + alphabetical is usually called alphanumeric.",
        "Post your code here",
        "Include your code in the question. Your question needs to be self-contained and answerable without depending on links to 3rd party sites.",
        "@meagar he is using a fiddle, which is appropriate. That being said, the OP should post some code here (CSS and HTML) with the relevant issue.",
        "@disinfor No, it absolutely is not. JSFiddle can't replace the content of your question. JSFiddle links may *supplement* a question, but they shouldn't be the only useful content in a question.",
        "No offense to the parliament session of debate here but going through the fiddle...i think its pretty excessive code to paste and all of it is relevant!! :)",
        "@NoobEditor Then the question doesn't belong on Stack Overflow.",
        "@NoobEditor All of that code is **most definitely** not relevent. The problem is \"I need some text to line up\". That means all of the CSS regarding colour, font, radius, etc... is irrelevent",
        "Questions concerning problems with code you've written must **describe the specific problem** \u2014 and **include valid code to reproduce it** \u2014 in the question itself. See http://SSCCE.org for guidance.",
        "you need to explain more with code and logcat",
        "please provide your logcat error or atleast the name of the error you are getting.",
        "Please provide your code as well as error message that you are getting also post your logcat if possible.",
        "explain more and post code and logcat.",
        "post your code so we can sort out your problem",
        "Clarify little bit more. And also with some snapshot or code.",
        "You're trying to use the variables $row and $b before you even define them. This is procedural, top to bottom execution.",
        "stop using mysql as it is deprecated http://www.php.net/manual/en/function.mysql-query.php",
        "What error message exactly?",
        "And the error message is ... ?",
        "Yes, interesting: this message is really very clear.",
        "-syntax error on token \",\", delete this token",
        "Elementary fix: `public Circle(int radius, int x, int y)`",
        "Sytax errors: You tackle them one by one, from  top to bottom",
        "Tali, just copy and paste the error =) and edit your question, please",
        "Do you have any other constructor in class **Circle** ? If not, then you cannot from within the constructor call itself by *this(a,b,c,)*\nOn a more basic level, your constructor does not define the type of its parameters.",
        "Nothing comes to mind for \"Some magic thing that converts an enum to a type\" that's built into the .NET Framework.",
        "I think that a switch statement that creates new instances will be fastest. Is there anything wrong with this approach?",
        "I figure that at least one reason for the down votes is because I should be using delegates instead of interfaces....?",
        "Sounds like a plan, go for it",
        "is there (\"field only if it is not null, but leave it alone where it is not null\") or would you like to change and leave it?",
        "possible duplicate of [Only update fields that are not null](http://stackoverflow.com/questions/10097924/only-update-fields-that-are-not-null)",
        "*Possible* duplicate? More like couldn't be bothered looking! By the way, loved the first comment.",
        "How long is my question gonna be on hold?",
        "I can't reproduce the problem you describe: http://jsbin.com/fibofocaya/1/",
        "@Quentin you can if you include bootstrap http://www.bootply.com/yj7eapiPmY",
        "provide exception for faster solution",
        "Please post the stack trace and figure out which line the error is coming from.",
        "You create multiple empty arrays and then try to access them. Hence your out of bounds exception",
        "You're not returning any reference there and you **are** indeed leaking memory.",
        "You're returning a copy and then leaking memory, so it is indeed dangerous, but allowed.",
        "Woah, wait. What do you mean I'm not returning any reference?",
        "@Bazooka, if you wanted to return a reference, the function signature would be `int&`, not `int`",
        "Oh man, my bad. That was what I did in the class. Just edited to fix it. Typo. Really sorry. Is it fine now?",
        "My bad. My bad. How in the world did I miss it. That was the whole point. Sorry.",
        "Is it safe to do what I did, now?",
        "@Bazooka, even if you changed the function to return `int&`, you'd still likely leak memory, because people don't expect that a `int&` returned from a function was allocated with `new`, so they won't call `delete (&returned_int)` Edit: However, it is indeed legal. A bit obscene, but legal in C++",
        "@AndyG: Fair point mate. How about I use a smart (unique) pointer. How about now?",
        "@Bazooka depends on what type of smart pointer you're using :)",
        "@Bazooka, unless you're returning the unique pointer, it will go out of scope at the end of your function and delete its allocated memory, meaning accessing the address of the returned `int` will result in undefined behavior.",
        "Please stop editing the question. The answer keeps changing depending on your edits, because you keep changing the question!",
        "@Bazooka, Sorry, but as it stands, what you have will definitely result in undefined behavior. In fact, really only the first post you had would have resulted in a well behaving function from an API standpoint. The second edit would have likely resulted in a memory leak.",
        "Jesus Christ! You guys know way better than our instructors. How come man! How do I become like one of you and not like my instructor?",
        "@AndyG: Will the `delete (&returned_int);` statement mentioned by you take care of deallocating the memory safely?",
        "With the second version of the code you had (before the `unique_ptr` edit), yes.",
        "Thank you AndyG. If I may trouble with just one last thing, how do we dereference a unique pointer? I thought it was just as normal pointers using the '*' prefix.",
        "@Bazooka. yep `std::unique_ptr<int> p = std::make_unique<int>(2);\n std::cout << *p << std::endl;`",
        "Thanks again. Appreciate.",
        "What exactly is the problem you're having? When you load your page, do you get the alert or not?",
        "And, is jquery.min.js in the same directory as the HTML page?",
        "I dont get alert when I load page, just jQuery does not work.",
        "Yes in same directory as HTML page.",
        "Put a `}` after your alert statement",
        "Checked the browser console for errors?",
        "-1 not enough jQuery",
        "can you just `<script src=\"//code.jquery.com/jquery-migrate-1.2.1.min.js\"></script>` add this ..... and close your if condition and check if it works?",
        "whats the error ur getting",
        "CSS is for **styling**. It should not be used for actual content.",
        "You can not do it only with CSS. You can either use javascript or a server side language",
        "First, there is no way to do, what you want to do, with only CSS. Second, CSS is not the place to do something like this. So: *Nope*.",
        "You probably need `return \"Hi boss!\"`.",
        "If you are interested in learning PHP, then you should follow some tutorials: http://www.codecademy.com/en/tracks/php",
        "`Learned JAVA` ? what do you mean",
        "thanks for link to codeacademy :)",
        "@Naveen - I suspect that OP means `learned JavaScript`, not Java.... if he was familiar with Java, he'd probably understand not to echo in a function/method, but to return instead",
        "Do your homework yourself!",
        "its not homework, its revision sheets im doing before a test....",
        "Why don't you try stepping through the code yourself with each input and seeing what the result looks like?.... but if you really must know, this code basically returns an array of 5 elements where the first element is **always** zero, while the other four elements are the first four elements of the array of `A`.",
        "i tried doing \n0(2-1)=0\n1(3-1)=2\n2(4-1)=3\n3(5-1)=12\n\nbut that's obviously not the answer",
        "look i know the answer is D, i just want to know what the process is",
        "Read my first comment very carefully.",
        "Why are you multiplying your outputs?  You are simply doing a copy of elements from one array to another.  No need to multiply anything.",
        "OK, I'll write you an answer.  Give me a moment.",
        "Thankyou rayryeng",
        "Wrote an answer.  That's as verbose as I can get.  Good luck on your test!",
        "It works fine to me.. Can you explain what doesn't work?  http://jsfiddle.net/6rL1tsed/ You could use inspect elements to see whats going wrong..",
        "Should be working just fine.. : http://jsfiddle.net/bfgrebgc/",
        "It is correct. Maybe there is conflict in other parts",
        "Are you sure you're including the css file properly?",
        "Is it possible some other CSS is potentially interfering with this?",
        "post the entire style sheet.. Some other style is over-riding this",
        "Is this the HTML from your file or the actual output?",
        "Use your browser's DOM inspector to see what rules are being applied to those elements. it could be something like a `!important` rule elsewhere overriding your css as posted here.",
        "My guess is rather that this is in the HTML file but the browser renders it differently since block elements (h1) are not allowed inside inline elements (span). Thus, the actual output won't have a `h1` inside `.testimonial`. At least, some editors like CKEditor filter such constructs.",
        "It seems fine. Can you give a screenshot of your result?",
        "Your question is completely meaningless.  What on earth are you talking about?",
        "why do you even need multiple passwords on one domain? educate us a little.",
        "I am completely agree with you SLaks.. my client stated this.. and if you read the question carefully I wrote \"I refused to accept that\"\n\nI didn't agree to him at all.. Instead of arguing with him I just wanted a proof to prove him wrong and stackoverflow is the best I.T. forum so that why I posted this question..!!",
        "Q: Why are \"indexes\" different from \"regular variables\"?  A: they *aren't*!  Q: why doesn't `array[i] = array[++i];` work like `array[i] = array[i + 1];`?  A: You're relying on all the \"Partial bexpressions\" in your complex expression to always execute in the same order.  Sometimes they will, sometimes they won't.  This is an example of \"undefined behavior\".",
        "Clarify \"regular variable\".  The variable `i` is usually a regular variable.",
        "why doesn't it work then? =|",
        "Why do you not want to use a return value on the recursive method?",
        "1. check that `n > 1`, return if not. 2. call `recSeq(n - 1)`. 3. print `1 << n`.",
        "So basically you're just asking us to do your homework for you. I will have to pass.",
        "what have you tried so far in your implementation of the classes? this is a pretty straight forward problem and smells of homework help",
        "If anyone can point out some reference, it is greatly appreciated!",
        "https://www.tutorialspoint.com/java/java_object_classes.htm",
        "An official tutorial is at http://docs.oracle.com/javase/tutorial/java/javaOO/ .",
        "An introductory tutorial on Java would be a good place to start.  Interviewers can *usually* tell if you've never used the technology for which they're interviewing before.",
        "maybe the HR just wanted to check your creativity applied to java language..",
        "I dont think there is a right answer for that...",
        "Because `0` evaluates to `false` in boolean contexts",
        "Because 0 is \"falsey\"?",
        "For compatiblity with C, `0` is implicitly convertible to `false`, and non-zero is implicitly convertible to `true`.",
        "`i` is the same as `i != 0` in a boolean expression.",
        "Use `for (int i = 3; /*Empty*/; --i)` to have infinite loop.",
        "or `while(true) cout << i-- << \" \";` if you want to keep the while loop",
        "Please add code, not screenshot.",
        "How to you expect to judge the realness of a person's name?",
        "If all elements are structured the same way, I'd probably keep it simple and do `[elem[:-1]+[int(elem[-1])] for elem in my_list]`, you could probably `map` it too.",
        "yes, there are same structure.",
        "Show us your attempt. What is `c` supposed to be for? Just a count?",
        "`var c = elements.SelectMany(e => e.Attributes).Count(a => a.Name == \"City\" && a.GetValue().ToString() == \"Oakland\");`",
        "`indexOf(Object)`",
        "how is this the opposite of .get?",
        "Suggest you read the javadocs for list: https://docs.oracle.com/javase/8/docs/api/java/util/List.html  Should be obvious.",
        "Are you asking how to get `index (position) of` that `element` in your list?",
        "@Amir. With `get`, you input the index and it outputs the object. With `indexOf`, you input the object, and it outputs the index.",
        "oh, ok, -- in that sense..",
        "Just for the sake of correctness: if your objects start as `[]`, they are probably `list`s and not arrays.",
        "Where did you get stuck with this?",
        "Read up on `zip` and `for` loops.",
        "\"print each name with a number\" -- `enumerate`?",
        "Not sure how to print each name with each numbers from the lists for example the first name is test and the first number 1 is 5 then the first number2 is 20, I want that all on one line for each one in the lists",
        "If you read [how to ask a good question](http://stackoverflow.com/help/how-to-ask), you may see that is asks you to create a [mcve]. You should show your CSV data, how you read it into your lists, then your expected output. What does `Test, 5, 20` mean?",
        "Test (THE NAME) i said that already, 5(number1), 20(number2), all of which is inside the list from the csv file.",
        "What have you tried so far? You could try using the `Calendar` class and setting the month to January (since it's definitely the 2nd monday of the year will be in Jan), and getting the Date of the first day of the week.",
        "What have your attempts at creating such an algorithm been?",
        "I don't know how to make an SMOOTH movement, I know the \"fixed\" movement (identifier.move(x,y)).",
        "There' s NO \"smooth\" or \"fixed\" movement, just use smallers values",
        "I guess you `default package in Eclipse` is different from `System.getProperty(\"user.dir\")`",
        "yeah, you missed the part where your statment (question), exlusivly refered to a `singleton`.",
        "The answer does not say such a thing. Private constructors are merely a way of enforcing the singleton pattern. You only cheat it by having your main inside that class.",
        "Making the constructor `private` is one of the things you need to do to implement the singleton pattern. But it's not the only thing, and just this by itself does not automatically make it a singleton.",
        "So many down-votes, should I delete the question?",
        "@piepi, you shouldn't, you have already got 3 good answers",
        "Your example works http://ideone.com/wvEg5y",
        "What do you mean by \"correctly\"? The newlines should be working. What is the intended output?",
        "handleEvent in MainGame  is not overriden",
        "Unrelated to your problem, but you *redefine* the member variables `game` and `graphics` in the child class. Since the base class is otherwise a pure abstract class it shouldn't really have any member variables.",
        "Average means you need to add your numbers together and divide by how many numbers you added together.",
        "There is no inbuilt average method in javascript.\nyou need to write your own method.which is very straight forward ..This link wold help you of how u can do it better http://stackoverflow.com/questions/10359907/array-sum-and-average",
        "Try Googling \"How do I get the average of two numbers\". Hint: It doesn't involve taking their minimum.",
        "I know what an average is.... I'm asking how I write the code to get that? I am using AppStudio. I'm trying to learn and I don't know how to do this on my own, aka why I came to this website!!",
        "`(thing1+thing2)/2` if `thing1` and `thing2` are numeric types.",
        "Is this `JavaScript`?",
        "Have you tried anything?",
        "help you with what? what is your question about this?",
        "i'm writing a tool to update. this tool will create a script update to update in anothor database",
        "Do you have same table In Each DB",
        "i have same table in other database. so i need create script to update it",
        "Which dbms are you using? Add sample table data (both tables), before and after the \"script\" execution.",
        "The condition ``$i == 100`` is false it should be ``$i <= 100``",
        "@jmattheis Why?",
        "Yes, One person give the correct information so go with @jmattheis.",
        "@BitByBit The loop executes as long as the condition is true. `$i == 100` is not true when the loop starts, so it doesn't execute.",
        "@BitByBit You have a backward understanding of how the condition works. It's not the test for when the loop should stop, it's the test for when the loop should keep repeating.",
        "The random numbers are irrelevant, you'd have the same problem with `echo \"foo\";`",
        "@Barmar That makes more sense. Thanx.",
        "@Barmar I didn't understand because I asked this question yesterday: [link](http://stackoverflow.com/questions/40008544/why-can-the-second-for-loop-argument-not-be-equal-to-number/40008581#40008581]) and was given a wrong answer I suppose.",
        "Q: `Can we store android design layouts` A: **YES** Q: `How?` A: It's your homework to **search** how.",
        "Please don't downvote it, If you have any suggestion for my question or answer then give otherwise don't do this without any comment..",
        "you can use view stub for dynamically change content  with condition of user type.",
        "You can't call the method `Listbox1opgeteld` with two parameters if it only takes one. You don't need the second one.",
        "You need to provide two arguments, not only one",
        "@CodeJoy Please keep it in english. Non dutchies won't benefit from dutch answers.",
        "@CodeJoy English please.",
        "Did you try to read the error message? It is very clear and informative",
        "Please get a good book first. This question is more than basic, something that every good book covers.",
        "I'm voting to close this question as off-topic because a basic book would cover this.",
        "use gcc instead, problem solved (among numerous others). Oh, and you should try `stdio.h` instead, note the lower case",
        "Maybe try a compiler that hasn't been obsolete for 15 years.",
        "Please have a look at [ask], [mcve].",
        "https://stackoverflow.com/help/how-to-ask, http://meta.stackoverflow.com/questions/334822/how-do-i-ask-and-answer-homework-questions",
        "You should have typed that into Google. Better results, and faster, and no negative scores.",
        "@jarlh As [it turns out](http://stackoverflow.com/documentation/review/changes/103112), this is not a homework question \u2026 \u00a0 \u2639",
        "@cl:Nice finding",
        "What kind of macro? What are you emulating?",
        "The macro is from our IBM server. We send out updates that are user intensive. To streamline this and reduce errors, I would like to create a macro that would first run the batch file to FTP the file to their AS400 and then perform the functions on the AS400 emulator side.",
        "pass object, and then convert it to int or string inside method itself",
        "dynamic types can be used for that\nhttps://msdn.microsoft.com/en-us/library/dd264741.aspx",
        "just attach a debugger then I guess and look what it does. If it still is in your sorting routine it takes long. Or just keep it running for a few hours and check back later.",
        "@Hayt Thank you, I will try. hope everybody would be kind as you are. Everyone is trying to prove something here instead of helping anyone",
        "@G.Rust FWIW, I think your question is appropriate for SO. If you want people to give you tips/best practices, I invite you to [codereview](http://codereview.stackexchange.com/). Otherwise, keep posting here. :)",
        "I'm confused why this is downvoted. Sure, the code's not the best and the post could use some formatting, but the question itself seems reasonable to me.",
        "@GManNickG think so but they though it was useless and banned me from questioning for a while because of this..",
        "Do you have a question?",
        "What did you try?",
        "I have to remove the +91 and 0 which are present in the beginning of the string containing the multiple data into it.",
        "**You** have to remove some substring. **You** also should try and show that you tried before asking others to do the job for you.",
        "Rethink your design. You don't  really want to wait until the data is available.",
        "So should I notify every time new data is added",
        "No, just update your UI asynchronously as soon as the data is there.",
        "Thank You I'll do that",
        "Don't ever try to block the main thread for any reason.  That will create a poor experience for your users, and possibly an ANR.  You should become accustomed to the fact that Firebase APIs are all asynchronous, and you'll need to create or update your views after the listener is invoked.",
        "1. Your title should describe your problem, not be a general plea. 2. Format your code by highlighting it and press ctrl+k while editing.",
        "Also this site is run by volunteers answering questions so requesting \"urgent help\" will not actually help you.",
        "Also someone beat me to editing it but please don't write run-on sentences and use proper punctuation. Your question was really hard to read",
        "Please take the [tour](https://stackoverflow.com/tour), read [How to Ask](https://stackoverflow.com/help/how-to-ask) and [Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve). Please verify [Why is \u201cCan someone help me?\u201d not an actual question?](http://meta.stackoverflow.com/q/284236) and then please edit your question.",
        "Please read [Under what circumstances may I add \u201curgent\u201d or other similar phrases to my question, in order to obtain faster answers?](//meta.stackoverflow.com/q/326569) - the summary is that this is not an ideal way to address volunteers, and is probably counterproductive to obtaining answers. Please refrain from adding this to your questions.",
        "What version of Excel do you have?  If you have version >= 2010, you can use `Conditional Formatting` to do the comparison.  Here is something for your reference (http://blog.contextures.com/archives/2010/09/03/conditional-formatting-from-different-sheet/).",
        "Please provide the full text of the error message and tell us where you get it.",
        "Please don't make us go look up what the CS01(0?)20 error message is. We don't have them all memorized.",
        "how is the code working properly yet you state it throws an error.. use the debugger is what I would suggest first.. also if you are stuck and do not understand your homework assignment, please make an appointment with your professor",
        "*\"so my code was ignored. i am trying to make this code as wanted. but i can't achieve.Here is the first code that was ignored.Although it is working properly:\"* -- Can you please clarify those remarks? Who ignored the code?",
        "you need to read up on what `void` means, what `return` means when inside a code block vs a return type when calling a method..",
        "you have this `public static int Diagleft(int m,int n)` and you have this `public void diagleft()` this is very sloppy to say the least.. please take the time to clean up your relevant code and understand naming conventions in C# as well",
        "Your classes are nested. This is strange. A nested class cannot access a non-static field of the surrounding class.",
        "added the code, clicked on undo before posting.",
        "@JohnColeman I'm talking about the code portion in the do-while loop. When steps value becomes 1, during that time. The loops executes nicely till the last iteration and changes its value wierdly. I'll post an image.",
        "Unfortunately this code is hardly readable. To figure out what is going on one has to literally debug it.",
        "@EugeneSh. I'm sorry about it. I really wasn't supposed to show it anyone, so I didn't care about documentation. But now I'm stuck. I have added an image if it helps. Please check",
        "`tarr[z] = arr[j];`: at some point `z` is becoming equal to `unistep`. Therefore you write one element beyond the end of the `tarr` array and therefore you get undefined behaviour. There may be other problems though...",
        "... remember: there is no checking of array bounds in C and if you write beyond the limits of an array all kind of strange things can happen including those you described in your question. This is called \"undefined behavour\" (google that).",
        "@MichaelWalz Thanks I modified a bit and it worked. Increased the size of unicode and keeping track of where tarr ends.",
        "@MichaelWalz thanks a lot. Never encountered this before. Thanks for the information!",
        "`print \"%80s\" % w`",
        "Not for nothin', but this doesn't \"takes a string named input as a parameter\".",
        "If you want it justified at 80 columns, why does your function use `%70s`?  Why does your function take `w` as an argument but never use it?",
        "This looks an awful lot like homework.",
        "I suggest you use the [`str.format()`](https://docs.python.org/2/library/stdtypes.html#str.format) method instead of the `%` string operator.  Also see the [Format String Syntax](https://docs.python.org/2/library/string.html#format-string-syntax) section of the documentation for details and examples of using it. Even more specifically, see the table showing what the `'>'` Option does/means.",
        "@Swellar No, there is no class here, i work with JQgrid, and sub grid, Jqgrid automatic set id for SubGrid and I need the color of Subgrid difference vs parent grid.",
        "Unindent is the opposite of indent. You've got too little whitespace in front of your code. Could you post the text of the error instead of an image?",
        "Possible duplicate of [IndentationError: unindent does not match any outer indentation level](http://stackoverflow.com/questions/492387/indentationerror-unindent-does-not-match-any-outer-indentation-level)",
        "You should not post images of text on this site. Your required [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) must be in formatted text.",
        "I have an error trying to load your image for some reason. This is a viscious circle indeed.",
        "\"Unident\"... One indent to rule them all...",
        "What have you tried to achieve your wanted results? What has your research concerning your problem shown? Can you provide code of your tries? [How do I ask a good question](https://stackoverflow.com/help/how-to-ask), [How much research effort is expected](https://meta.stackoverflow.com/questions/261592/how-much-research-effort-is-expected-of-stack-overflow-users) and [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve) might be helpful to improve your question.",
        "Not working means? Are you getting any error or exception?",
        "Please use less capitals and more actual explanation.",
        "What is the actual issue, didin't get it",
        "it's not inserting to my table",
        "do i have any problem to my subquery select  ?",
        "Are you getting any error? What's your c# code which executes this query? Does sub query return exactly on result?",
        "i tried to remove subquery select and i just put any value that possible for its data type and its working but when i using subqueries select it doesn't working.",
        "`(Base*Height)/2`? What is your question?",
        "Mayne you need [Heron's formula](https://en.m.wikipedia.org/wiki/Heron%27s_formula)",
        "[undefined behavior](http://en.cppreference.com/w/cpp/language/ub)",
        "*Perfectly fine* and *Undefined Behavior* is like walking with great joy on the streets of gold laced with [Land mines](https://en.wikipedia.org/wiki/Land_mine).",
        "Also, don't [cast the result of malloc](http://stackoverflow.com/questions/605845/do-i-cast-the-result-of-malloc).",
        "Now the question isn't about C. Please settle on a language.",
        "How can you even click at #work if it's hidden from the start?",
        "@Anto: Why did you not post a full example of your code?",
        "@amir i try like that but its also not working...",
        "Why are you just not using standard navigation?",
        "@reporter This is my full code..",
        "Why do you want it to be part of CSS/SVG and not a part of image?",
        "Do you mean just the black shape behind \u201cmobile number\u201d?",
        "If you\u2019re still interested, you can check out the following link: http://franklinta.com/2014/09/08/computing-css-matrix3d-transforms/",
        "yes only black shape",
        "because for my different projects, color would be different for that shape @Slava",
        "employee_ID INT(11) PRIMARY KEY - remove comma, voted to close because it's simple typo",
        "Works in office but not at home! :)",
        "`APP_SERVER\\(Prod\\)` is your field name? Really?",
        "\\(Prod\\) please don't make it had to django... think when you call it out like> Customer.(Prod)?? really?",
        "or Customer.objects.filter((prod)=\"abc\"). It shouldn't",
        "\"APP_SERVER\\(Prod\\)\" is not a valid python identifier, period. Why would you want to name a field that way anyway ???",
        "verbose name can be used to change the display name",
        "show some effort, at least try something.",
        "Why do people answer such low effort questions?",
        "@evolutionxbox yeah my thoughts exactly. Who is worse, the person with the poor question, or the person who answers. \u00af\\_(\u30c4)_/\u00af",
        "@TimBJames love it.",
        "Possible duplicate of [How do I check if an element is hidden in jQuery?](http://stackoverflow.com/questions/178325/how-do-i-check-if-an-element-is-hidden-in-jquery)",
        "if answer is 1 or 3 ,explain me why? So if the answer is 2 you don't want to have an explaination? ^^",
        "And have you done any research on this? I am very sure, this has been asked many times in SO itself!",
        "Isaq answer is 1...but before asking here if you google it,it is much better...show some effort...search for string pool or string object creation or read basic tutorials.",
        "Possible duplicate of [String POOL in java](http://stackoverflow.com/questions/8788143/string-pool-in-java)",
        "Possible duplicate of [Questions about Java's String pool](http://stackoverflow.com/questions/1881922/questions-about-javas-string-pool)",
        "What kind of answer do you expect for this type of question? \"change line 64 so that the value is an Integer\"?",
        "Adding the related code would significantly help solve your problem.",
        "import java.io.Serializable;\n\npublic class Employee  implements Serializable{\n\n private static final long serialVersionUID = 1L;\n \n \n private int id;  \n private String name;   \n\n}",
        "@GoutamS the question mentions that Serializable was already part of the code.",
        "Please specify which library you are using. Also add some sample data and code to reproduce the behaviour. Also as @Espoir said in his answer, strings need to be convert to numbers in most libraries. So unless you add your code, its very to say.",
        "GameObject.Find(\"Plane\").SetActive(true);",
        "transform.Find(\"Camera\").Find(\"Plane\").gameObject.SetActive(true);",
        "**(1)** Look through every object in your game and find the one called \"Plane\" and activate the gameobject.\n\n**(2)** from the scripts gameObjects transform, find a child called \"Camera\", and from that find a child called \"Plane\" and set that gameobject to active. _Setting a gameobject to active or not active will remove it without destroying it, so you can toggle it back and forth._",
        "Did you try `$sql = \"SHOW DATABASES\";`?",
        "[Similar Question](https://stackoverflow.com/questions/5240732/how-to-show-mysql-databases-on-a-php-script)",
        "@GarbageCollector You should click \"flag\" under the question, mark as duplicate, and then post the link in there. It will automatically generate a comment and flag it for other users to see.",
        "how do i print it?",
        "try `text-align:right`",
        "Add your current relevant code.",
        "Do you just show CSS and HTML of this element so that proper answer could be suggested",
        "Please [take the tour](https://stackoverflow.com/tour) so you understand what's required in a question at SO.",
        "Incomplete question",
        "What's the question?",
        "What have you tried? What you're trying to do is a commonly asked question, look for how to remove a row based on data, how to find last row, etc. and please share any code you have.",
        "Seems like the code you have provided is just to fill the question box .",
        "have a look at ;https://stackoverflow.com/questions/38252747/android-how-to-draw-a-regular-polygon-via-xml-or-programical",
        "Possible duplicate of [Android How to draw a regular polygon via xml or programical](https://stackoverflow.com/questions/38252747/android-how-to-draw-a-regular-polygon-via-xml-or-programical)",
        "Don't understand what you did and what you exactly doing wrong",
        "I am using zsh in my system. Now I was about to create new application but when I run `rails new app_name` it throws an error \"zsh: command not found: rails\"",
        "First Read This So You Can Post Problem In Proper Way https://stackoverflow.com/help/how-to-ask , you need to post your screen so can understand does installation is proper or command is not proper",
        "Thanks but there is not much to describe. And someone with proper knowledge has solved it. Thanks for giving your time.",
        "Put your code in question.",
        "FYI - For future posts, if you tag VBA without providing any attempted code a lot of users will down-vote you.",
        "You should put what code you have into the question http://stackoverflow.com/help/how-to-ask",
        "Sorry guys. new to Stakeoverflow.. will follow the rules from next time.",
        "These are not guidelines specific to Stack Overflow. Experienced developers want you to make an initial attempt anywhere you ask a question on the web.",
        "I don't see anything unusual in this screenshot. What do you mean?",
        "I think your project is not syncing properly. Try to open your project by selecting gradle file while open project from File Menu.\n**File ->  Open -> Select `build.gradle`**. It may solve your problem.",
        "Try rebuilding your project. It may help.",
        "Nvm I fixed it, I needed to open the project from the inner folder. Thanks though :D",
        "you should store questions and their options in a local file. map it and show to the end user.",
        "Post your code here in the question.",
        "Questions seeking debugging help (\"why isn't this code working?\") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself. Questions without a clear problem statement are not useful to other readers. See: [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve).",
        "What \"utils library\" is this?",
        "as in the release number?",
        "No, as in what are you referring to and where did you get it from?",
        "this one [link](https://pythonhosted.org/python-utils/)",
        "What is your expected output, and what is your actual output? Welcome to SO, please be sure to read about [how to ask good questions](http://stackoverflow.com/help/how-to-ask).",
        "The statement `str1(\"String 1 : \")` generates this error. What did you mean to do there?",
        "Do the first couple of chapters of the official python tutorial: https://docs.python.org/3/tutorial/",
        "You also don't need to put the variable names in your function call, use `anagrams(\"Cat\", \"Tac\")`",
        "Looks like you just want to `print` the two strings before sorting them, if so, just change those two lines to `print (\"String 1 : \", str1)` and similarly for str2",
        "The question was about Homebrew... macports is not homebrew... The OP states they prefer not to use mac ports.",
        "@WadeWilliams mac in new version dose not let you update `openssl` using `Homebrew`, I mean you can install or update it using `Homebrew` but you can not prioritize it. So, instead of updating it using  `Homebrew` you can update it using `macports ` and prioritize it.",
        "Try [Swiftify](http://objectivec2swift.com).",
        "Where are you attempts and a description of what did not work. Now it just looks like you want us to do your work.",
        "init(index: Int, image: UIImage) {\n        super.init()\n        self.index = index\n        self.image = image\n    }",
        "Given that you added an attempt and some specific problems you came across, I'll reopen this.",
        "There's still not enough information in the question to be answerable. For example, where is `index` and `image` defined in the Swift code?",
        "The Objective-C code isn't valid Objective-C code and it's not complete enough to help with a translation to Swift.",
        "thanks all for comments and help. I just realised the copy paste error on my obj c code - of course the first line should be @implementation CalaculatorHelpPages{",
        "i tried swiftly as recommended and it produced code similar to the code producing errors",
        "the comment from David Pasztor pointed me to the issue causing the no member index error, and i simply got rid of the call to super.init() to clear up the last error - posted below the code I'm left with, which seems to be working as i want without errors, so happy days. Thanks ....",
        "Why do you think there is an \"error\"? What's happening that isn't what you expect?",
        "Why do you tag this as both [tag:python-2.7] and [tag:python-3.x]? It can't be both.",
        "sorry i'm a complete beginner so i just tried to tag it on both versions",
        "asongtoruin, i'm not getting any sort of value",
        "When you open IDLE does it say (3.x.x) or (2.7.x) in the title (after your filename).",
        "Are you sure you wrote that code? If you did it is surprising that you have **exactly** the same spacing  and comments as this guys... https://github.com/MosheBerman/oop-1/blob/master/1.3/Car.py",
        "2.7 neil that what i get",
        "change the order of script because  i had a problem , sometime Jquery   Should be load before any other lib",
        "Please add your HTML markup, we need to see what your standard `<select>` element looks like",
        "Your scripts seem to be floating in no man's land, either put them in your head or your body, not between them (not sure if that'll make any difference though)",
        "What makes you think the body is stored as a _\"hexadecimal byte string\"_? What even __is__ a _\"hexadecimal byte string\"_? There is no such thing.",
        "That is one heavy misconception. Take a `hexdump` tool, and you can get the same kind of output out of any file. That is just a textual representation.",
        "@Cerbrus You can check chrome://cache/ in Chrome or about:cache in Firefox. There the browser is showing the cache data and there they are showing a hexadecimal version, so the question is why they are doing that.",
        "@MaartenBruins: Correct, they are __showing__ it in that format. That doesn't mean it's __stored__ in that format.",
        "@E_net4 But if it's just a textual representation then the question is, why they are doing that? They can also just only show the non hex version?",
        "@MaartenBruins: How would they display images? Videos? Binary files (executables, archives, installation files)?",
        "You asked why the browser is storing the data in a hexadecimal string, which is not true. If you want to ask why it **shows** the data that way, then please edit your question.",
        "@Cerbrus I only have that kind of information from other places on the internet, so that's why i wanted to know more about it, because i already thought maybe it's incorrect. See: https://gchq.github.io/CyberChef/\nThere i have \"hexadecimal byte string\" from, but apparently i can not trust the people behind CyberChef. I'll search for the source where they were talking about \"storing\" (so what is incorrect).",
        "I'm afraid that it's not so simple. See [why we don't force users to comment on their downvotes](https://meta.stackoverflow.com/q/357436/1233251).",
        "@Cerbrus By the way, i changed \"store\" to \"show\" in the question and afterwards i'm still getting a lot of downvotes for the question. People has to stay objective with each question separately. I just don't understand it, the question is still wrong?",
        "@E_net4 Thanks for the link and explanation! Really useful! I wanted to tag you also in previous comment, but apparently and unfortunately i can only tag one use at once, so that's why i made 2 separate comments for it.",
        "@meagar Apparently the question was not clear enough for you (I can understand). You put it ON HOLD with that reason. I tried to change the question, so it's maybe more clear. Is it now more clear for you? And if yes, can you open it again. And if no, what can I improve?",
        "What have your tried?",
        "Share your tries or the question will closed for no efforts soon",
        "I tried if(accHoldAttr.contains(\"kyc_cnic_ind\")){} but I am confused how can I get value of this string",
        "Please see: [Why is \u201cCan someone help me?\u201d not an actual question?](http://meta.stackoverflow.com/q/284236)",
        "What do you mean 'the value of the string' ? Surely it is 'kyc_cnic_ind'? But you already know that! Unless you want to extract the number after it,  9110129505705. Is that what you want?",
        "Please write your question in English.",
        "This is an English-speaking site. You might be interested in http://ru.stackoverflow.com/",
        "Question was translated",
        "@\u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432\u0421\u0438\u043b\u044c\u0447\u0435\u043d\u043a\u043e not the title",
        "@\u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432\u0421\u0438\u043b\u044c\u0447\u0435\u043d\u043a\u043e https://stackoverflow.com/questions/22807010/pick-a-file-from-sd-card-using-intent",
        "Uh, what is your question? Right now there's only a description, which is kind of hard to follow without showing some code.",
        "I'm afraid nobody can really make sense of that. Please see [**How to ask good questions**](https://stackoverflow.com/help/how-to-ask) and please include a [**minimal, verifyable and complete example**](https://stackoverflow.com/help/mcve).",
        "http://ccm.net/faq/24666-copy-data-to-another-workbook-in-excel                  sorry I wasn't able to copy the code, I got it from this website im just trying to copy and paste each cell into a new file and save but I don't know how to do that",
        "The link won't help much either. Especially not without any context at all. If you do not include a [minimal, verifyable and complete example](https://stackoverflow.com/help/mcve), I'm afraid your question will get closed and you won't get an answer to your problem.",
        "We are always glad to help and support new coders but ***you need to help yourself first. :-)*** After [**doing more research**](https://meta.stackoverflow.com/q/261592/1011527) if you have a problem **post what you've tried** with a **clear explanation of what isn't working** and provide [a Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve). Read [How to Ask](http://stackoverflow.com/help/how-to-ask) a good question. Be sure to [take the tour](http://stackoverflow.com/tour) and read [this](https://meta.stackoverflow.com/q/347937/1011527).",
        "yes, it is proper call",
        "First, this has nothing to do with C# so remove the C# tag. Second, I don't understand your question. Why do you want to call super()? Is there a reason, if so, what? If you don't have a reason, why are you trying to use it?",
        "If you need to call super, just do it, There is nothing wrong.",
        "Have you looked at the documentation for `UIBarButtonItem`? There's an obvious `init` for using your own image.",
        "look around then post the question.https://developer.apple.com/reference/uikit/uibarbuttonitem",
        "it could be useful for you http://www.jobinandjismi.com/how-to-change-uibarbuttonitem-image-programmatically-in-swift/",
        "Can you add your markup",
        "Could you show Student class?",
        "You should use `DataAttributes` on your `Student` model and let asp.net handle the validation for you.",
        "I handled the data attributes already. I want to add the validation based on if the user enter a student record. so if the user enters a student record it directs to another page but if there's no student record entered then they'll get an error",
        "`ViewBag.error(\"No item was entered\");` => it should be `ViewBag.Error = \"No item was entered\";` and use `@ViewBag.Error` inside CSHTML file you want to add the message. Or you can take `RequiredAttribute` with error message & use `Html.ValidationMessageFor` to display it.",
        "could you give me an example within the cshtml file. this is button I have     <div class=\"col-md-offset-4 col-md-12\">\n\n                \n                    <input type=\"button\" value=\"Finish\" name=\"Issue\" margin=\"50px\" onclick=\"location.href='@Url.Action(\"ViewIssue\",\"Issue\")' \" class=\"btn btn-default\" />\n                    \n\n\n                </div>",
        "Can u please put the above HTML in the question by clicking edit",
        "I have edited the question with the html. Can you assist me please",
        "Hey Tetsuya is it possible to show me an example",
        "You haven't asked us a question, you haven't said which element (\"*the element*\") you're trying to find, you haven't shown any attempts at solving your own problem. We're here to help you solve your problem, we're *not* here to do your work for you, for free. Please read the \"*[ask]*\" and \"*[mcve]*\" guidelines.",
        "my bad I didn't mention my solutions, here are the solutions which i tried elem.bind(\"keydown\", function ($event) {\n    if ($event.which == 37) {\n var target = $event.target.parentNode.previousElementSibling;     \n $(target).trigger('focus');\n    }\n    if ($event.which == 39) {\n     console.log(\"right key pressed\");\n  var target = $event.target.parentNode.nextElementSibling;\n     $(target).trigger('focus');\n    }\n   });",
        "i am able to focus <li> element with above coade but not able to do it for <a> which is inside <li> element,if you suggest any other solution it will be helpful.",
        "Thanks for the replies, I got this worked by below code.not sure abt the performance of the code.\n elem.bind(\"keydown\", function ($event) {\n    if ($event.which == 37) {\n                var target = $($event.target.parentNode.previousElementSibling);\n    var x = $(target).children();\n                x.focus();\n    }\n    if ($event.which == 39) {\n                console.log(\"right key pressed\");\n                var target = $($event.target.parentNode.nextElementSibling);\n                var x = $(target).children();\n                x.focus();\n\n    }\n  });",
        "What did you try so far?",
        "Hi Camilo, I have not tried anything yet, because I don't have a clue about how to approach the issue, the closest hint I have had is using CSS variables but they don't appear to have wide browse support yet!!",
        "Use PHP to generate dynamic css https://css-tricks.com/css-variables-with-php/ so you can generate a dynamic css per user on the fly.",
        "Interesting Raymond, thanks for the link.",
        "I am working on something similar, are you going to store values per DOM element or for the whole page as a total? A simple implementation of color changing can be found here prodev.site/admin (click the logo to open the menu and from the settings you can quickly change page color). Perhaps creating a json settings file (per user), having the values of the colors,font etc to store to database would be a good idea. You could then pass the JSON to some javascript functions that will make the appropriate changes and complete the `magic`.",
        "@Peter this is a great idea, I am going to post an answer that makes use of JSON, brilliant.",
        "If you dont know the answer then dont flag down the question.",
        "Try to extend a bit the phrase \"_I am trying to make a query in php to..._\"",
        "You need to break down the issue. Is it PHP relevant? Do parts of the query work? Is `BETWEEN` the issue or `reservation_id`? The field names in your query don't match those in your data, and the `SELECT *` doesn't match the `roomnumber NOT IN` clause. Start with a smaller problem and build up from there.",
        "How do you know which user reserved which room?",
        "And what if I book 2 rooms, one for me , and one for my friend but my friend is due to arrive a day before me, and leave a day later?",
        "http://en.cppreference.com/w/cpp/error/errno",
        "rtfm http://man7.org/linux/man-pages/man2/socket.2.html",
        "have... you searched for ... you know ... `errno`? https://www.google.com/search?q=errno",
        "http://idownvotedbecau.se/noresearch/",
        "sorry everyone for my poorly worded question. The question was ofcourse not about errno, but that the error number persists across multiple library function calls.",
        "Why use a regex when `s.strip()` does exactly this?",
        "`s.strip()` only handles the *initial* white space, but not whitespace \"discovered\" after removing other unwanted characters. Note that this will remove even the whitespace after the final leading `\\n`",
        "Someone down-voted this answer but didn't explain why it is flawed. Shame on you (@NedBatchelder if the down vote was you please reverse as I explained your question and you didn't mention anything actually broken with my answer)",
        "Rafe, you might want to double-check: `s.strip()` produces precisely the same result as your regex.",
        "@Rafe, you're confusing it with trim. Strip does the required operations.",
        "Wow you are right, thanks for pointing that out. I'd like to delete this answer if possible (is grayed out so maybe already done?)",
        "You should get [a couple of good books to read](https://stackoverflow.com/a/388282/440558). And learn about pointers. They don't just \"magically\" point somewhere valid, you have to *make* them point somewhere.",
        "When you attached your debugger to it, and stepped through it line by line, where did it fail?",
        "`str` points to some semi-random location, `std::cout` tries to write to that location, your operating system sees a rogue program trying to write to memory that doesn't belong to it and kills it.",
        "Really? This is very googleable. It's a line-comment.",
        "@soohoonigan To be fair, `'` doesn't work very well as a Google search term.",
        "I typed \"what is apostrophe in visual basic\" and got this link as the first result: https://msdn.microsoft.com/en-us/vba/language-reference-vba/articles/writing-visual-basic-statements `Comments can explain a procedure or a particular instruction to anyone reading your code. Visual Basic ignores comments when it runs your procedures. Comment lines begin with an apostrophe ( ' ) or with Rem followed by a space, and can be added anywhere in a procedure. To add a comment to the same line as a statement, insert an apostrophe after the statement, followed by the comment.`...",
        "@jsheeran they could also search \"apostrophe\" or equivalent in their language, as evidenced by Jacob.",
        "Possible duplicate of [In Visual Basic how do you create a block comment](https://stackoverflow.com/questions/13477958/in-visual-basic-how-do-you-create-a-block-comment)",
        "By defining `x`.",
        "What is this supposed to do? What would be the input and the expected output?",
        "i want to make output 4",
        "@JaceCho: perhaps you can say a little more about what you wanted to achieve? To make the output for, you could also have done `def print_four(*args): print(4)`, but that's probably not what you meant. I am *presuming* you want to execute an expression of your choice to be passed in to the `bracking()`. Please be *explicit* about this and [edit] your question.",
        "@JaceCho:  Next, you want to use a better title. Lots and lots and lots of questions here are ahttps://stackoverflow.com/questions/48796825/can-you-check-what-is-wrong-in-this-code/48796945#bout code that doesn't work as the writer hoped. So a title like yours is not going to set your post apart from everything else. Your question title would be much better if it said something about what the code is supposed to achieve.",
        "I'm willing to bet there's an infinite loop here, because `entry` is never reassigned in the loop.",
        "|| is logical OR, so one of those two conditions is always true.  && is logical AND and what you are looking for.",
        "You have a `break;` outside of your switch. This breaks out of your loop. But there's several issues here, such as your while loop condition and with getting the user input also.",
        "You probably would have caught the issue that @AntonH mentions if you had formatted the code [yourself].  It sticks out like a sore thumb.",
        "And entry <= 4, if you want to exit on 4, that should be `entry < 4`",
        "I asked google, and this is the 2nd item in the search result.http://www.javacreed.com/what-is-defensive-copying/",
        "If you mouse over the downvote button, it says \"This question does not show any research effort....\", It doesn't matter whether you are asking google or yahoo or the chineese Baidu",
        "ok. I would do that before ask question.",
        "`int main() { return \"Hello world!\"; }`",
        "@GundolfGundelfinger Empty string works too, in order to race for being short.",
        "Not being abled to think of type check error examples implies a somewhat limited knowledge of what type checking is and how it works.",
        "Please [edit] your question make sure all code is properly formatted. Also, include the error **as text**, not in a linked image, and mark the line in the code where the error appears.",
        "You need to call the method name, not the variable name.",
        "`.txt` is not a field of `Object`. The poorly named variable `set1` should be of type `ArrayList<ArrayList<abc>>`. Never use raw types.",
        "You solve the problem already on *the very next line of code*.  Your non-generic `ArrayList` is not by default of type `abc`, but you can cast the elements to that type.",
        "The real point here is: this is *basic* syntax. Don't try to do trial and error. Read a good book or tutorial, and follow that - instead of \"inventing\" your own syntax.",
        "Possible duplicate of [What is a raw type and why shouldn't we use it?](https://stackoverflow.com/questions/2770321/what-is-a-raw-type-and-why-shouldnt-we-use-it)",
        "thanks, @bcsb1001, solves the problem, and I got the problem also thanks.",
        "first step: format this code so it is readable. Also, we need a [mcve], so copy&paste, compile and run just works to reproduce your problem.",
        "`a` is undeclared isn't a bug. You'll have bugs later when your code compiles... here it seems that `a` is declared in a different (not global) scope than the function, hence invisible.",
        "btw, `a` has the type `int [10][10]`, so after adjusting to a pointer this is `int (*)[10]` and **not** `int **` as your function expects.",
        "The variable `a` in `sum+=*(*(a+i)+j);` is not being declared, nor initialized at that moment. The compiler tries to find it but it is unable to do so. Perhaps you made a typo or wanted to use another variable.",
        "A 2D array is **not** an array of pointers! You can look at this other [answer](https://stackoverflow.com/a/47094008/3545273) from mine for more details (was C++ but it is exactly the same thing for raw arrays)",
        "See [Correctly allocating multi-dimensional arrays](https://stackoverflow.com/questions/42094465/correctly-allocating-multi-dimensional-arrays) for an explanation what's the difference between 2D arrays and pointer-to-pointers (and why you shouldn't use the latter in most cases).",
        "If you are getting an error, you need to post the full text of that error. Also, what is that first block meant to be? Was it a function? Please post full, readable code - not incomplete, terribly formatted fragments.",
        "Will help, but where's your effort?",
        "\"I used .each to get some keys and values that I wanted from the data but when I do it I get this result.\" 1. Please edit your question to include the code you've written so far. 2. What data?",
        "I have googled it but unable to find any answer on it that solves this, even if someone has answered and you know then please share the link. thanks",
        "If you're not willing to edit your question to include the code you've written so far and some example data, you're not going to get much help here. Please read my comment again and edit your question accordingly.",
        "@jordan Running\nI thought this might be enough to get help.\nWell this is the code that I wrote to fetch the title, user name, training schedule date and enrollment url\n\nenrollment_json = enrollments.map {|e| [\"title\" => \"##{e.id} - #{e.user.full_name}\", \"id\" => e.id, \"start\" => e.training_schedule_date, \"end\" => e.training_schedule_date, \"url\" => \"#{enrollment_url(e.id)}\"] }",
        "and @anothermh has given the right answer and I was able to fix the code",
        "Tip: `[\"title\" => ... ]` is not the same as `{ \"title\" => ... }`.",
        "Thanks Jordan this should be it. I should have directly used {}",
        "you can check this. [link](https://stackoverflow.com/a/1510005/4344623). Thanks :)",
        "@JeserCaneo check my answer",
        "`myObj.cars.car1`, `myObj.cars.car2` ... Also, just FYI that's an object literal, not JSON.",
        "It would be easier if you made the cars object an array. You'd get \"cars\": [\"Ford\", \"BMW\", \"Fiat\"].",
        "Do you want to read the values or the keys?  What's your expected list of values?  \"car1,car2,car3\" ?  What you've described is:  `<select><option value=\"Ford\">car1<option><option value=\"BMW\">car2</option>` - ie \"select a key (`car1`) get value (`Ford`)\" - this seems the wrong way around.",
        "https://stackoverflow.com/help/how-to-ask",
        "This sounds like an excellent opportunity to learn.",
        "Yeah - we're not going to write it for you (and this is way too vague a description, even if we were inclined to). If you have a specific question, we'll try to help. What have you tried so far?",
        "Can you please write it for me. In short what I need is a python 3.4 program (idk if it\u2019s different but I say this version as I see people using print without brackets on other versions) which will summon questions from an external file and the answers to the questions are also in an external file. I need the code to check that the questions are correct aswell. I\u2019m just not sure how to write code which will summon a specific line and check if the answer is correct.",
        "@H.M I am sorry, but we will not write your full code here, that would be off-topic for Stack Overflow. You can get help, but you must show what you have tried and where you ran into problems so that we can help with a specific programming problem. Please see [How do I ask and answer homework questions?](http://meta.stackoverflow.com/q/334822/1288408)",
        "Can you check the answers as i have posted my attempt there",
        "What have you tried so far?",
        "/^[0-9]+([,][0-9]+)?$/",
        "go with /^[0-9]+([,][0-9]+)?$/",
        "Not working Mavericks",
        "It should allow only single dot",
        "You said \"numbers like\", what other forms should be accepted? Is `123` number valid or should it be `123.00`? Is `1,2345.00` valid? Or `.01`? Do you want to accept only two decimal places or can it change?",
        "Yes number u have mentioned are valid @pshemo",
        "Update your post to include rules you use to decide what is valid and what is not.",
        "\"Yes number u have mentioned are valid\" I also mentioned `1,2345.00` which has four digits after `,`. So can we assume that `,` can have any number of digits after it like `1,2,3,4,5,6.00`? Would such number be valid or there is some *rule* which invalidates it? If so what rule is it?",
        "@pshemo 1,2,3,4.00 is not valid...my current rule is I just want only one decimal value and accept comma..in text field.",
        "@VaibhavKatwate only one digit and one comma?",
        "@sejal rudani... Only one dot of decimal..",
        "@VaibhavKatwate  multiple comma?",
        "@sejal Rudani ...yes multiple commas",
        "@VaibhavKatwate please check my ans for single dot",
        "I don't understand your question.  Please _edit_ your question, and instead show us sample input and output in tabular form, each line indented by 4 spaces to format it as code.",
        "What's your question?",
        "I have a string '### to ###, My address ###', and 3 values in a separate table, I need to replace these value by key, my first value is 10 so the first key get replaced with 10, 10 to ###, My address ### and such",
        "Please provide a small sample so we are clear on exactly what you mean. Appears like you can just split up the values and add them to the key, but i would like a small sample to verify everything works as intended",
        "What dialect of SQL are you using - add a tag for that as well.",
        "For a start, move that expression into a function, and use `std::isdigit` for the numerical bit.",
        "If the function works correctly, I recommend coming to [CodeReview.se]. It would be nice to include a test `main()` in the post there.",
        "Where did the string come from? It could be easier to check each character as the text comes in, rather than all at once afterwords.",
        "it comes from cin.getline(equation,100); Also we are learning functions and I was told to do it that way",
        "It\u2019s C++, use std::string.",
        "@PeteBecker, were you thinking about `std::istream_iterator<char>` and `std::all_of`?",
        "Note that C++ doesn't guarantee the character set that will be used.",
        "Load the allowed characters as keys of an unordered_map. Then query each candidate character. If a char is not in the unordered_map, then an un-allowed character is present, and process accordingly.",
        "you are looping through the password..`for i in range (len(password)):` and accessing it..",
        "This is a very inefficient way to check for unique characters. `def check_pass(): password = input('Enter a password:') ; return len(password) == len(set(password))`",
        "Also weird that it is your code and you don't understand it...",
        "Your ask very basic questions. I think you should read the language documentation. \nRead about datatypes, loops and array would help you.",
        "what have you tried so far?",
        "Try googling `php round down`, literally the first result http://php.net/manual/en/function.round.php.",
        "`floor()` as well. Was any research done?",
        "\"best way to round down\"? What are your functional and non-functional requirements with which you would reject non-best ways? I'm pretty sure most ways to round down would work equally well.",
        "It's bit-wise AND.",
        "https://www.tutorialspoint.com/cprogramming/c_bitwise_operators.htm",
        "(x & -x) is a hack to isolate the lowest-order 1-bit in x. This code therefore sets the right-most 1 bit to zero. It's probably used for looping through only the 1 bits of index.",
        "'& [binary]    a & b    Bitwise AND of a and b '  A quick google search will provide that answer for you.  Here's one link https://www.cs.auckland.ac.nz/references/unix/digital/AQTLTBTE/DOCU_059.HTM.  Another google search will explain it in detail.  Voting to close as low quality.",
        "Asking for the meaning of single instructions, one by one, on Stack Overflow is probably not good way to learn a language.",
        "@usr2564301 i had no idea about using bitwise operation in c coding.",
        "Instead of scanning random code and guess what it does, it could be a good idea to be more systematic and [learn from a C book](https://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list)",
        "Because strings are (`const`) `char *`, not just `char`. Thus `**arry` would be `'H'`.",
        "\"When I use **arry it gives me error saying 'error: expected identifier before '*' token'.\" For this you will have to show the code that is generating the error",
        "It doesn't print 'H'. It gives an error saying 'error: expected identifier before '*' token",
        "you have 2 questions here. Why not deref twice? Why do I get this compile error when trying to deref twice?. The first is answered by the first comment, the second will be answered when you should you actual code",
        "check [this](https://stackoverflow.com/questions/35129269/angularjs-2-which-language-to-use-typescript-javascript-dart)",
        "It\u2019s open source. You can, like, go and check.",
        "Possible duplicate of [AngularJS 2 - Which language to use? (Typescript, Javascript, Dart)](https://stackoverflow.com/questions/35129269/angularjs-2-which-language-to-use-typescript-javascript-dart)",
        "My question is about angular framework (source code) developed in which language not angular framework can be consumed in?",
        "What have you written so far?",
        "@LoisKlose Edit your question, how are we supposed to read that?",
        "I see title and content questions different. Can you explain better what you want?",
        "The code you provided won't compile. You need commas in your array.",
        "The part of the question after sorted array seems to be a part of a completely different problem.",
        "Debug your code and find out which line exactly the program crashes.  Check to see if your initializer is really being called.  I've never seen the controller initializer being customized like you did.  I suspect your `lists` is never initialized.  Empty array will not raise an error in your case, empty array is not equivalent to `nil`.",
        "Why you dont want to use nextLine ?",
        "It looks as an [XY Problem](http://meta.stackexchange.com/q/66377/340236)",
        "The problem appears to be that you don't want to use nextLine(). How can we help you overcome this want?",
        "Hint: when you know about scanner, maybe you *want* to read all of the documentation for that class? So maybe you get other ideas for things that you want to use?",
        "show some code. we cannot guess your code",
        "You just want to open your json file in browser, instead a text editor?",
        "I'm just curious: what exactly do you expect to get?",
        "[pointer arithmetic](http://stackoverflow.com/a/394774/620908) - [google search](https://www.google.com/search?q=c%2B%2B+pointer+arithmetic)",
        "have you tried to start structuring the html?",
        "we are not here to do what you want ! be serious and try to show  some efforts",
        "I want my portfolio. Design it in html and css. Let me know once completed.",
        "i'm still beginner.. I've tried..please send related document or links. @xale94",
        "@PradeepDeepu http://www.w3schools.com/",
        "Have you made any attempt on your own? We're not going to write your code for you.",
        "[Split](https://msdn.microsoft.com/en-us/library/system.string.split(v=vs.110).aspx) on space, then append the first char from the 2nd string to the first string.",
        "I was using Trim but it was only taking out blank spaces and when I wrote the second word the spaces appears. Also thanks.",
        "What's your expected input and output?",
        "my input is initialized in char input[], assume it as encypted text, and my result should be \"3 hello world \"",
        "I am searching it from yesterday and yes I am not able to convey properly that what exactly I want,",
        "from my search I found that brute force and frequency analysis can d the trick but I can't understand how frequency analysis can work for my situation.",
        "Note: `input[I]-x%26` is the same as `input[I]-(x%26)`  Did you want `(input[I]-x)%26`?",
        "I want ((input[I]-x)%26)",
        "Please edit your question instead of adding comments, so that everything is in one place and you can format it.",
        "http://stackoverflow.com/help/mcve",
        "Why are you using `typeid(...).name()`, what exactly is it you want to achieve?",
        "Code is [tag:c++]: why the [tag:c] tag?",
        "Unclear what you're asking. I also feel wrong with assigning a pointer to array.",
        "_Is it possible to define your own variable type and then use it as any other variable?_, well that's one of the purposes of C++.",
        "can you show the code that you would like to write? As it stands the question is completely unclear",
        "@TatsuyukiIshi That's initializating a char array from a string literal that does not exceed the size of the array, not assignment. It is valid.",
        "i need more downvotes guys.",
        "The whole point of `struct` is to define your own types. So you are pretty much asking if you can define your own types without doing what is required to define your own type.",
        "What `typeid(a).name()` returns is not defined by `C++` it is down to the compiler writers. It can be different for every compiler.",
        "You have it in my answer :)",
        "Oh, nice. Thanks",
        "\"Yeah, i don't want to use stuct. Doesn't look good.\" Then use a language whose syntax suits you better aesthetically.",
        "@AESTHETICS In C++, user-defined types are introduced with keyword `class`, `struct`, or `union`. It's unclear what you don't like about them, and what you're actually trying to achieve. If you explain better what \"doesn't look good\" means, there might be a way to answer you.",
        "`std::string` is a class, just like your \"struct\".",
        "Have you tried anything?",
        "[so] is *not* a free code writing service. You are expected to try to **write the code yourself**. After [doing more research](http://meta.stackoverflow.com/questions/261592) if you have a problem you can **post what you've tried** with a **clear explanation of what isn't working** and providing a **[mcve]**. I suggest reading [ask] a good question and [the perfect question](http://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/). Also, be sure to take the [tour].",
        "Try to use programming to do it",
        "Here's a novel idea: don't actually send the email until it's ready to be sent. Just store it somewhere until it's ready.",
        "Ok I am not asking anybody to do my job, just asking if there is anybody that has done something like what i am asking. The reason I posted the question is because looking here: https://msdn.microsoft.com/en-us/library/system.net.mail.smtpclient(v=vs.110).aspx there is no OnSend or beforeSend or something like that. The SmtpClient class only provides SendCompleted event",
        "You'll need a way to intercept the message first, How is the message being sent? Can you host a smart relay that does this? do you need to program something new to do it or do any existing tools already perform this functionality (there are lots of smart smtp servers out there)?\n\nWhat exactly is the question again?",
        "[What is the XY problem?](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem)",
        "@EJoshuaS and Joe_DM i just edited the question. Hope it is clear now",
        "Incidentally, I assume that this is an email client you wrote (or otherwise control the code of)? Or are you trying to do an Outlook plugin or something like that? (This is a very different question if you're trying to do this with a third party tool like Outlook).",
        "Also, do you control the SMTP server(s)?",
        "I have already done a plugin for outlook that does the same. VERY BIG DIFFERENCE is that Outlook object model DO expose an Item_Send event that allows me to cancel the sending operation. I am trying to generalize the solutions to all mail clients, that is why i ran into this. And no, I do not have any control on the SMTP server",
        "Just to clarify, is this line 9 `x=x/2;`? Also, what is the purpose of this `if(x==1) c[i]==x;`do you wan to compare the values or assign them?",
        "line no 9 is this \"int checkbit(x){\"  and as for if(x==1) c[i]==x;  i want to break the while when x reaches 1 because aside from the modulus i am also dividing x by 2 so when x reaches 1 at the end i want to store that one in the array and break the while loop",
        "Well, in that case @Mikael-faust as others have mentioned below it should be `int checkbit(int x){`. The first `int` being the return type of the method and the second `int` being the type of the parameter passed in.",
        "The subject line has no relationship to the question asked.",
        "Possible duplicate of [Multiple inputs on one line](https://stackoverflow.com/questions/7425318/multiple-inputs-on-one-line)",
        "Protip: calling people \"jerks\" is probably not going to help you in getting an answer to your question.",
        "Do you get an error?",
        "What is your problem? I didn't run it, but this code looks fine.",
        "well you have a syntax error on the `data.pop` line.",
        "try this `data.pop(myDeletenumber)` .",
        "Not only is your code poorly indented, it contains `break` and `continue` outside a loop.",
        "Bad way to solution",
        "@Abdou sorry it is in a loop, just the loop is outside the snippet i am showing you.",
        "did you mean flash is not working?",
        "Declare the variable **outside** the Button click handler",
        "*But it's not working* is not a valid error",
        "If i understood you correctly, you want to toggle torch on button click.\nHere's how I'd do it\n1) Add a onClickListener in main activity. 2) Add isLightOn boolean variable in shared preferences, and handle the flashlight state in lifecycle methods.   3) Add onClick attribute to the button in xml, and declare correct method in MainActivity    4) Add isLightOn boolean variable in the class (MainActivity perhaps) as a private variable to that class.  5) Button will now update that variable according to shared preferences boolean",
        "what you want to do, where is you clickListener. atleast make question understandable.",
        "What's `return;` doing?",
        "@shmosel a very cryptic question ;-)",
        "It is expected that you at least attempt to code this for yourself. Stack Overflow is not a code writing service. I would suggest that you do some [**additional research**](http://meta.stackoverflow.com/questions/261592/how-much-research-effort-is-expected-of-stack-overflow-users), either via Google or by searching SO, make an attempt and. if you still have trouble, come back with **your code** and explain what you have tried.",
        "Your code doesnt run the command!",
        "Parameterized queries minimizes SQL injection when `cmd.ExecuteNonQuery()` executes - the injection often occurs when using concatenated values in a query string. What exactly you've tried to do?",
        "Try executing your command, maybe something will happen?",
        "You form the command just fine, but never execute it.",
        "like @BugFinder suggested your code doesnt run the command which is why you get no errors becuase it doesnt actually do anything to return an error",
        "@BugFinder And how do i use that, would be nice if you could help me",
        "There is a typo in `@quantityeValue`",
        "@TetsuyaYamamoto i havn't tried to much i just added the parameters and since i never get an error i can't se where it's going wrong, but as others are saying i'm not executing the command so might be that",
        "@PetervanderHeijden Fixed it thanks!",
        "Why is this question tagged with sql injection?",
        "This isn't even java.",
        "Also it is more about reverse engineering of some code OP found than about actual problem solving :D",
        "What second loop?  There's only one loop.",
        "for(i=2; i<=n/2; ++i)\n this loop",
        "To be fair, [the site where this code is copied from](https://www.programiz.com/c-programming/examples/prime-number) doesn't do a very good job of explaining it.",
        "I don't know why the code uses `n/2`, especially since you only need to check factors up to the square root of a number to determine prime-ness.",
        "@azurefrog for simplicity, for brevity, for style.",
        "Are the animations done in jquery? Are you importing any JS libs locally?",
        "How do you expect us to tell you what's wrong without sharing your code ????",
        "http://idownvotedbecau.se/nocode/",
        "Welcome to SO! \"_I could give more info if needed_\": looks like it **is** needed. Please make sure to provide an [MCVE](https://stackoverflow.com/help/mcve) in your questions.",
        "Add your code of JS.",
        "I doubt their inability to upload a folder to their hosting. I'd spend the time you're wasting stuffing all the content in to a single file trying to upload the correct content structure instead",
        "And... the problem is... ?",
        "Date and time of what is changed?",
        "Now the issue is I want my pacakge to do import process only when the csv is modified or when new records are added that csv.",
        "When data time of csv file is changed. @Cool_Br33ze",
        "You could create an infinite loop package but SSIS packages can be resource intensive if left to run forever.\n\nI would consider creating an Agent job that runs every X seconds/mins that checks for changes in the file and if there is a change to execute the package.",
        "You could try a script task that looks at the file system's info on the CSV file. You coudl count the rows in the csv file as a first step. you coudl check the data against ids already held in your sql server table. this is not a code problem as such, its more that you are looking to learn SSIS.",
        "Your question is missing some information that'll allow us to help you. [Stack Overflow](https://stackoverflow.com/) is not a free code writing service. You are expected to try to **write the code yourself**. After [doing more research](https://meta.stackoverflow.com/questions/261592) if you have a problem you can **post what you've tried** with a **clear explanation of what isn't working** and providing a [**Minimal, Complete, and Verifiable example**](https://stackoverflow.com/help/mcve).",
        "please mention your table name or tried code",
        "Show attempt...",
        "Please be so kind and provide more information about your table structure.",
        "Caps lock stuck?",
        "Please read [ask], remove the caps, and improve the question.",
        "What is the question? Please explain what you are looking for.",
        "I doubt the ID variable is the one you want to plot.  Is there another field that actually lists the number of crimes?  I don't see it in your variable list.",
        "There is no variable that specifically counts the number of crimes -  I assumed R was able to do it for me by looking at Year and counting how many ID match that year. It's my first time using R. Should I in that case count the total for each year and put the values in 2 new variables and use those to plot ?",
        "> aggregate(cbind(Year) ~ Year, data = dd, sum)\n\n       Year     Year\n    1  2001 77814888\n\n    2  2002 78546468\n\n    3  2003 76440489\n\n    4  2004 76330356\n\n    5  2005 73342900\n    6  2006 73180886  \n    7  2007 71164206\n    8  2008 70514936 \n    9  2009 64517026\n    10 2010 60402510\n    11 2011 57595040 \n    12 2012 54605680\n    13 2013 50091492\n    14 2014 44728926\n    15 2015 42345225\n    16 2016 32128992\n\nI think this is the number of crimes",
        "Take a look at the Python `requests` library. There is also a `pycurl` wrapper available.",
        "I mean how to execute \">\" command in Python?",
        "@AliTlekbay `>` is a redirect command found in [UNIX shells](https://en.wikipedia.org/wiki/Redirection_(computing)). Please rephrase your question to clarify what you want to do and where your problem exactly is. Providing code with your first attempt never hurts.",
        "Smells like a **malware**. Or should I say \"stinks\"?",
        "Yeah, this screams malware. Any self respecting security software is going to block this.",
        "But is there a way to prevent that?",
        "Add a TextWatcher on the EditText (or AutoCompleteTextView) and monitor the input text. If you encounter '@', trigger a service call or get the relevant matches from the database.",
        "please explain with example or code thanks",
        "\"please explain with example or code thanks\" i.e. I'm too lazy or just can't do this thing myself so will issue demands and want to use someone as a free coding service.",
        "First try it yourself, post what you had tried then people will help you. This will be helpful for you to start : http://www.learn-android-easily.com/2013/06/using-textwatcher-in-android.html, https://www.learn2crack.com/2014/02/android-textwatcher-example.html",
        "`5:30` is not an integer.",
        "quotes aren't part of a string, `5:30` is not an int",
        "See how many similar items are in Related section",
        "Don'tr spam tags! C++ is a different language.",
        "you'd find it easier and more maintainable to do this with structs",
        "Preferably trying to avoid Structs and do it without them @ChrisTurner :)",
        "Please read [ask]. You are supposed to show compilable code, or if you have a syntactic question show the problematic line and the compilation error message. But one error per line is really too much...",
        "\"Preferably trying to avoid Structs and do it without them\" - So you refuse using the language feature meant for this for some arcane reason? Sorry, but stack overflow is dedicated to **enhance** code quality, not degrade it.",
        "@TMartin: That is not valid C code anyway. There is no position `1` or `0`; the code is plain wrong.",
        "You really shouldn't be doing this but you can subtract the correct value from the char to get the right number like if you cast  `char '0'` to `int` then it'll be a number, specifically 48 so if you do `((int) '0')-48` you'll get back a number",
        "@Olaf Avoiding Structs solely for learning purposes.  :)",
        "@Olaf thanks you're right. I just skimmed it and figured it was an index error.",
        "I wonder what you can learn from not using a feature..",
        "its invalid json format",
        "First of all, your JSON is invalid. Secondly, please share what you have tried till now.",
        "retrived my data from MongoDB using php and display that Data using json_encode() function.",
        "Share your code where you have parsed JSON.",
        "$collection = $db->shops; \n   \n   $cursor = $collection->find(array('category'=> \"{$filter}\" ));\n\n   foreach ($cursor as $document) {\n    $valu=MongoDB\\BSON\\toJSON ($document.\"\");\n    \n    echo json_encode( $valu);\n    \n   }",
        "That doesn't look Java to me!!",
        "@AishwaryaTiwari this is my php code to retrive data from mongodb database.",
        "You want to parse the JSON response & store in JSONObject or in POJO? I am talking about Android not PHP.",
        "I got this response from php. I want to create JSON Object in android to use this json. @AishwaryaTiwari",
        "declare you char yes as string.",
        "i strongly suggest you to read basics first",
        "How to declare it as a string? I am beginner",
        "Always, always post code as text in questions. Screenshots can *occasionally* be useful, but this would be better as code, with an indication of where the error occurs, and the detailed error message below it.",
        "Try `input.next().charAt(0)`.",
        "If you're at the stage of not knowing how to declare variables of different types, I would *strongly* urge you to get a good Java book. Stack Overflow is a wonderful site, even for plenty of beginner questions, but it's not a good place to learn the basics of a language.",
        "Understand, thank you",
        "Please don't give him suggestion, it is good to give solution.",
        "**Hint:** a char **Primitive** is just a number mapped to an ASCII Table, a String is an Object not even related in inheritance terms with a primitive char...",
        "I\u2019d decalre `String yes;` (instead of `char`) and run the loop `while (yes.equals(\"t\"))` (remember double quotes around `t` so Java knows it\u2019s a string).",
        "Questions seeking debugging help (\"why isn't this code working?\") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it *in the question itself*. Questions without a clear problem statement are not useful to other readers. (my emphasis) Please paste your code into the question and format it using the `{}` button.",
        "Thank you, but my teacher asked me to use do-while instead while.",
        "do-while is a good choice. I intended to suggest you fill in the while condition from my comment at the bottom of you do-while loop (where it says `while(yes=='t')` now).",
        "I will, thank you",
        "There is nothing wrong with your code. Are you getting any errors, like stylesheet not loaded?",
        "@micky Please, add an url or code and tell us what isn't working, It's impossible to offer a good answer without being able to test your code and to regenerate the issue..",
        "Please tell me if this solves your question: http://stackoverflow.com/questions/8790321/why-does-the-order-of-media-queries-matter-in-css",
        "In `console -> sources`, can you check if all of the files are loaded in correctly?",
        "Note: `echo` is a function. you should always use it as a function: `echo();` this could cause problems sometimes although it most of the time works.",
        "@Casper `echo is not actually a function (it is a language construct), so you are not required to use parentheses with it. ` http://php.net/manual/en/function.echo.php",
        "You are right, I even see you aren't even allowed when you pass more than one parameter. Thank you for the correction. I've learned something new :) @fubar",
        "well you only replace `am` but you have an input with `pm`",
        "how to replace both of them ? @Japu_D_Cret",
        "as your title shows 24 pm is not a valid int.Try to remove pm from this.",
        "@Rotwang i want to replace the am and pm but the replace not working",
        "Just add `.replace(\" pm\",\"\")` after the replace \" am\"",
        "if you want to make it in one line, you could use `timeMinute.replaceAll(\"( am)|( pm)\", \"\")`, which uses the RegEx replace",
        "or `timeMinute.replaceAll(\"\\s[a|p]m\", \"\")`",
        "thanks dude its working @Japu_D_Cret",
        "@Rotwang: Please write answers in the answers section. A brief answer is not necessarily a poor one.",
        "@Bathsheba ... too late! ;)",
        "There's no harm in your answering now. Stack Overflow works best when there are multiple answers to choose from.",
        "paste a screen shot of the Error or copy paste exact Error",
        "What's the type of ExpItemList ?",
        "Usually get this type of error when there are different versions of frameworks/assemblies being used. Double check that all version numbers are consistent throughout your projects.",
        "How was `ViewBag.ExpItemList` assigned? If it's assigned with non-matching type of `List` it will throwing exception.",
        "What have you tried so far? SO isn't a code writing service.",
        "i tried like this but am not getting desired output.  var maxYear =     from year in dbContext.Years\n                                  join exchange in dbContext.CurrencyExchangeRates on year.YearId equals exchange.YearId\n                                 where exchange.BudgetCodeId == budgetCodeId orderby year.YearValue descending \n                                  select new\n                                  {\n                                      yearValue = year.YearValue\n                                  };",
        "That doesn't really look anything like the SQL you're after. What is `CurrencyExchangeRates`? Why are you ordering by year value?",
        "I want year value from year table where yearId taken from currencyexchangeRate table and that year id should be maximum",
        "Have you heard of or tried looking at LinqPad. I find it quite useful for things like this.",
        "In two cases, you're returning a pointer that doesn't come from `malloc`.",
        "C and C++ are different languages. Unless you're specifically asking about differences between them, don't tag both.",
        "@\u03c0\u03ac\u03bd\u03c4\u03b1-\u1fe5\u03b5\u1fd6, this question use method so this is c++.",
        "You want to return `NULL` in case something went wrong and not a pointer to an (un`free()`able!) string literal. Like you do here: `return (char*)\"MALLOC!\";`",
        "Well to be fair I'm not doing anything with the `return  (char*)\"MALLOC!\";`, it's just there for completeness. It hangs after the very first call which returns the string succesfully, but then hangs on `free(IDQueueString)`",
        "By the way, this is very bad cast because you remove the read only attribute of `char const *`.",
        "Why does it matter, I only added that in the code for my question, it actually returns NULL in my code and should never actually reach that address because I only use 5248 bits of ram out of 128KB",
        "@Supernovah You also have a code path that does `returnString = (char*)\"Empty!\";`. I suggest you use a debugger to find your bug(s).",
        "How am I not returning a pointer, can you potentially tell me what it's actually returning because it sure looks like a pointer `returnString` to me...",
        "Oh interesting, I had a pretty fundamental misunderstanding of casting to `(char*)` then. What is a minimal way for doing the \"Empty!\" line? I have it as a series of `returnString[queueLength++] = 'E';` ... `returnString[queueLength++] = '\\0';` and that seems pretty cumbersome in terms of number of lines of code...",
        "Also why did people vote my question down lol?",
        "Doing `strcpy(returnString, \"Empty\");` will copy the string literal to the `char` array you allocated. That will fix a single problem, you probably still need to take a careful look at the rest of your code.",
        "people vote your question down maybe because you don't provide a code that can reproduce you problem, best to have [mcve](https://stackoverflow.com/help/mcve)",
        "@Blastfurnace What's wrong with the rest of it sorry? And yea, I'm tired on a Saturday night, guess that was the obvious answer :)",
        "@Supernovah I'm just being overly cautious, based on this very small sample you might have similar issues elsewhere.",
        "It's the only function that returns a pointer. I've monitor  memory and it remains static when external inputs are removed. It's in an electronics environment. I've been able to predictably increase bit usage by stimulating the appropriate channels. Also I followed the entire program around through assembly and this was the only issue I encountered.\n\nWhy people have downvoted and voted to close my question? Is it not a valid question? If someone has a misunderstanding of the language they use and make a mistake does that mean their question is worth removing? So hostile!",
        "It has been already noted that you should provide a [mcve], your apparent reluctance to do so is likely the cause of down votes",
        "The files required to compile for my embedded device number in the thousands. I can't post that here...",
        "Why would you expect it to return true?",
        "What number do you expect `.` or `,` to represent?",
        "Also, you should be using double.Parse or TryParse instead of Convert.ToDouble",
        "What's the actual problem you are trying to solve here.",
        "I think this *is* a case for regex",
        "You know the first character is X (assuming these are always X,Y & Z coordinates. It should be simple to substring out the numeric information using IndexOf with Substring or with a RegularExpression.",
        "`char c = s[0]; c = toupper(c);` Here, `c` initially holds a copy of the first character of the string. Then it's reassigned to hold some other value; the original string remains unchanged. On the other hand, if you write `char& c = s[0];`, then `c` is a reference - an alias - to the first character of the string. Assigning to `c` is the same as assigning to `s[0]`. Same thing happens in your loop.",
        "Possible duplicate of [C++11 range based loop: get item by value or reference to const](https://stackoverflow.com/questions/15176104/c11-range-based-loop-get-item-by-value-or-reference-to-const)",
        "Better way in C++: [std::transform](http://en.cppreference.com/w/cpp/algorithm/transform) (the example contains a toupper).",
        "What's your code supposed to do? Why is the first correct but the second wrong? You can't just show code and pictures without telling us how it's *supposed* to work.",
        "`char s[5];` --> `char s[5][32];`, `for(i=0;i<5;i++){` --> `for(int i = 0; i < 5; i++){`",
        "1. Please post the text and lot links to images of text. 2. Indent your code to make it readable. 3. What is the input",
        "In `scanf(\"%s\", s[i])` you're asking the compiler to generate code to read a string (the `\"%s\"`) and put that string in an invalid location (`s[i]` is a value of type `char`). You need to fix this (among other minor things)",
        "@EdHeal \"lot links\" is really confusing. You obviously meant \"not links\"...",
        "Yes realized it but unable to edit it as time ran out",
        "I think that you should search more (if you atleast did) before posting questions about basics. I also suggest that you learn java with some documentation/book/anything that details how java works precisely. It may be a bit more harsh than just trying things, but that's how you can learn.",
        "typing \"Incompatible type cannot convert int to string.\" on google would probably lead you to an answer. If not, reading some book/guide/doc would for sure.",
        "Where exactly do you think this would happen? Why?",
        "I don't see anything wrong with this code, can you post the whole console output.",
        "It doesn't give that error because the only int in that code (the 3 in `new String[3]`) really does need to be an int; no such conversion is needed.",
        "what you mean by int",
        "This is not a number...",
        "its not integer . you can't",
        "you really want to convert an image to int?",
        "you only want the numbers.. thats what you mean?",
        "if you want to convert part do split and convert",
        "did you mean the ascii code may be  of the string",
        "I want to get 123.",
        "This [thread](https://stackoverflow.com/questions/11002527/extract-numbers-from-string-to-create-digit-only-string) will answer your question",
        "Yes, I only want the numbers.. @EpicKip",
        "Possible duplicate of [Find and extract a number from a string](https://stackoverflow.com/questions/4734116/find-and-extract-a-number-from-a-string)",
        "You're probably going to need to give a lot more information. This is very vague.",
        "sorry, I have edited now. The data was missing.",
        "Please provide a better [mcve] of your problem. You need to let us know what this table is exactly. Where is this table stored? Under what format? Where is your code that shows your attempt at this? Please provide these details in your question.",
        "Are you using a third-party library like Pandas? That'd be an import piece of info to add to the question.",
        "You're still not showing nearly enough information. Where is the data coming from! What format is it?",
        "Did you look at [`to_dict`, `to_json`](http://pandas.pydata.org/pandas-docs/stable/api.html#serialization-io-conversion)?",
        "I dont understand your terminology. When bytes are written TO a file, it is called saving. When bytes are read FROM a file, it is called loading. Ergo, things are either \"loaded from\" or \"saved to\". What do you mean by LOADING INTO (a file)?",
        "Sorry I should of been more clear, I already converted the xex file to a byte array, i just now need to create that byte array into a file. \n\n\nscreen cap of the class for the byte array.\n\nhttp://i.imgur.com/uB58FEL.png",
        "Please show us what you've got so far.",
        "It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on their own. A good way to demonstrate this effort is to include the code you've written so far, example input (if there is any), the expected output, and the output you actually get (console output, tracebacks, etc.). The more detail you provide, the more answers you are likely to receive. Check the [FAQ] and [ask].",
        "modulo is your friend",
        "https://meta.stackoverflow.com/questions/334822/how-do-i-ask-and-answer-homework-questions",
        "@NPE Shared d code.",
        "What is `val` ?",
        "yyyyMMddHHmmss **.SSS** maybe, just read the doc",
        "I have no idea what you're asking.",
        "What do you get? What do you expect? What is your problem?",
        "Remove HHMmss from dateformat",
        "Questions seeking debugging help (\"why isn't this code working?\") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself. Questions without a clear problem statement are not useful to other readers. See: How to create a [mcve]. Use the \"edit\" link to improve your *question* - do not add more information via comments. Thanks!",
        "Possible duplicate of [How do I get a Date without time in Java?](https://stackoverflow.com/questions/5050170/how-do-i-get-a-date-without-time-in-java)",
        "this is off topic, it has nothing to do with the behavior of 'rand()'. The latter is supposed to provide normally distributed set  of values. Any arithmetic operation on the result of it should provide a random result. '%' is such an operation.",
        "It's not off topic as it is in fact literally a portion of the problem at hand. everybody is looking at `rand()` without troubleshooting if Modulo/Modulus (`%`) is a potential cause. Whilst you might recognize the flaw, people who come across this topic who don't know what `%` actually does would have zero reference material to confirm themselves what the bug is. I don't mind a 0 Score, but don't down vote my answer as irrelevant since it is relevant.",
        "I would also like to point out that the Operand `%` is nearly impossible to Google unless you know it's name, I only found the referenced Post as a Link in another StackOverflow Post asking specifically what `%` Operand was in reference to C# (which this post is specifically about, as is the Answer I Linked) because they were having trouble locating it on Google since Google doesn't correctly parse `%` in any ways that I'm aware of (including `\"%\"` failing). Also, who knows, maybe one of the `using` is all he needs, I would like to hear from the Author before this gets blasted to bits.",
        "and, before you ask, no, I am not familiar with xCode in the slightest.",
        "I am not happy about requiring Meta in my Answer when a simple Comment could have cleared it up without the need for attempting to Down Vote to Deletion.",
        "Please don't add excessive meta-commentary to posts. I was minded to roll back that whole edit, since it is largely a complaint that new readers are not likely to find useful. I have however moved it to the end and trimmed it lightly - the disagreement about voting should definitely not be added to posts. FWIW if I get a heavily downvoted answer, I just accept that people did not like it, and will either delete it or let them vote.",
        "You need to assign the input to a variable. I assume sc.nextLine returns a string so you need a string variable to assign that return value to.",
        "`String personName = sc.nextLine();` Now it's stored in memory. Now look for a `while` loop to print it 100 times. That's all the help I can offer you or I would be harming you",
        "You have to declare the variable `String s;`, make it readable with `s = sc.nextLine()` and you should create an array or arraylist where you print the value each position (so declare an `int pos = 0` and print it using a `for`)",
        "By reading some basic book or tutorial?! You are expected to do research prior posting here. And hint: that \"computer science\" tag made absolutely no sense.",
        "*\"What is the output of the above code\"* - Tried running it?",
        "Yes the output is: 12310\nBut I want to know what happens when \"e = 10\" is encountered.",
        "Learning to use C++ is not done via asking for tutoring on SO. [Pick a good book](https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list) and follow that.",
        "`e = 10;` causes `example(int value)` implicit constructor to be invoked constructing a temporary instance of `example` and assigning it to `e` using compiler-generated assignment operator. A good practice to avoid such behavior is marking all constructors beside default and copy/move as `explicit`.",
        "Use a debugger. @AllenRichards",
        "Terminology check: you assign a value to an object, not an object to a value.",
        "It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on his own. A good way to show this effort is to include the code you've written so far, example input (if there is any), the expected output, and the output you actually get (console output, tracebacks, etc.). The more detail you provide, the more answers you are likely to receive. Check the [FAQ](http://stackoverflow.com/tour) and [How to Ask](http://stackoverflow.com/help/how-to-ask).",
        "The terminology for dictionaries are pairs of `key:value` , you're wanting to ask how to print every key that has the value `\"X\"`",
        "@RoryDaulton I have no idea where to start, and Google can't tell me anything.",
        "@DavyM Heh... Fixed :) thx",
        "You want to start with `for`. [Iterating over dictionaries](https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops).",
        "I just googled that... Maybe your keywords are off",
        "Looks like something a compiler would need to do if parsing source code and checking for correctness. Are you looking for these patterns in strings?  You probably need something with backreferences - and positive/negative  lookaheads. If the last backref found is a ( you look for positive lookahead of `[{` (or none of them) and negative lookahead of `(}]` - similar for the others. still wondering if parsing via regexx is the thing to do here",
        "You could improve on this answer https://stackoverflow.com/a/5357617/7505395 and build an iterative regex parser for your string , using an error to bail out if mismatched parentheses are found.",
        "Please [edit] this question to explain what regexes you've tried and how they didn't work. Hint: the balanced parenthesis problem is a classic example to illustrate the limitations of regular expressions \u2013 you need some kind of stack to keep track of currently open brackets. Many regex engines such as Python's `re` *cannot* match these patterns. But the Python `regex` module and the Perl regex engine can be used, because they support *recursive patterns*.",
        "if anyone do not understand my question,then may be he/she has not much knowledge about regular expression and string,so please don't down vote the question.guys who have good experience on string can easily understand this question.",
        "Can you at least comment on the answers already given? As of now you just asked how to identify \"valid\" and \"invalid patterns\" and gave examples what you consider valid or invalid. But you didn't say what _exactly_ you want to match and what not. You asked for a regex or to _\"make code for match this patterns\"_. Together with your latest comment (_\"then may be he/she has not much knowledge about regular expression and string\"_) this translates to _\"give me the codes and if you're too dumb, then don't downvote things you don't know of\"_.",
        "_about PHP onchange event..._ There is no such a thing!",
        "I think I count 4 separate problems here (not counting the bit where you confuse JavaScript and PHP), any one of which would cause your code to fail on its own. You need to do some debugging. Examine your generated HTML. Enamine your HTTP requests. Examine the data received by the PHP. Don't just look at the two ends.",
        "okay, is the html",
        "But im new in all those thing, so any advise?",
        "follow https://stackoverflow.com/help/how-to-ask instruction",
        "Will you need to input a series of dance steps?  That is, will there ever be multiple lines giving d1 through dN?",
        "No, it will always be one line. The set of dance moves repeats supposedly infinitely many times.",
        "*The output here will be 3 because there will always be people in spaces 1, 2, and 3.* No, because with your current example, the result is 3 after the first time the sequence is executed, but becomes 2 after the second time the sequence is executed. After that, it stays constant at 2.",
        "Say the order of the people (before any execution) is just {1, 2, 3, 4}. Then, after one execution (according to the mapping above), I think it should become {2, 3, {1, 4}, [empty]}. Subsequently (following the same mapping), it becomes {3, {1, 4}, 2, [empty]}, and so on. This is my understanding of the problem; however, the input/output above is provided. Spots 1-3 are always occupied",
        "Well, first of all the numbers in your example input and your subsequent analysis don't line up. But if I go with your example input, let's say that initially, there's one person on every position: `[1, 1, 1, 1]`. After iteration one, this becomes: `[1, 2, 1, 0]`. After iteration two, this becomes: `[2, 2, 0, 0]`. Subsequent iterations no longer change this result.",
        "Yes, sorry. I just realized this, and I have edited the question. You are correct that for the example input, the answer should have been 2 (now updated to match analysis).",
        "Same scenario for the new example input: `[1, 1, 1, 1]` -> `[2, 1, 1, 0]` -> `[3, 1, 0, 0]`, then stabilizes.",
        "Do the numbers represent the number of people on the corresponding index here? If so, it should be [1, 1, 1, 1] --> [1, 1, 2, 0] --> [2, 1, 1, 0] -> [1, 1, 2, 0].",
        "Are you talking about the result after every move? Or after every full sequence of moves?",
        "The full sequence of moves. (the last index in the example no longer be mapped after the first iteration since nobody is occupying that spot.)",
        "Then I don't see how you get to those results. If we look at the execution of the steps in only the first sequence, I have: `[1, 1, 1, 1]` -> `[0, 1, 2, 1]` -> `[0, 1, 2, 1]` -> `[2, 1, 0, 1]` -> `[2, 1, 1, 0]`. So I don't see how you get to `[1, 1, 2, 0]` after the first iteration.",
        "I am getting [1, 1, 1, 1] -> [1, 1, 2, 0]. Each person is mapped to the corresponding index in [3, 2, 1, 3], which means that the first index in [1, 1, 1, 1] goes to index 3. The second one goes to index 2, and the third one goes to index 1. The last one also goes to index 3. Since there is no \"4\" in the dancing moves array, nothing is mapped to the last index in the array, which means that it is at zero.",
        "Think you missed a part in your assignment: *\"This means that they will move together for the rest of the remaining dances.\"*",
        "Hmm, the example input/output I have currently in OP is provided to me (with output of 3). I believe that after arriving at [1, 1, 2, 0], it follows [3, 2, 1, 3] again. The first index, 1, is mapped to the 3rd index. The second index, also 1, is mapped to the second index. The third index, 2, is mapped to the first index. Since there is nobody at the last spot, it cannot be mapped, which gives [2, 1, 1, 0]. No matter how many times the people follow this set of dance moves, the first three places remain occupied. I think that all of the mappings be thought of as instantaneously occuring.",
        "Hmmmm, that changes things. Wouldn't the solution then just always be `Arrays.stream(moves).distinct().count()`?",
        "A counterexample: N = 4, dancing moves = {1, 1, 2, 3}. Here, the we would have the sequence [1, 1, 1, 1] -> [2, 1, 1, 0] -> [3, 1, 0, 0] -> [4, 0, 0, 0], so the output would be \"1,\" whereas the line of code outputs \"3\"",
        "I think that your idea of \"snapshotting\" might work. What if every snapshot were stored into an array or something, and once we get a snapshot that we have already arrived at, we can conclude that it has stabilized (it will begin to cycle then). Then we can count the number of non-zero elements, and that should be the answer?",
        "Just saw your edited post. Thank you so much. You have been extremely helpful to me.",
        "It's too bad that the question got downvoted so much. I have a feeling that there is possibly a more mathematical approach to this problem, and I would have liked to see someone post that.",
        "You are throwing an exception when `<= 0`, not when `< -1`",
        "if (list.get(i) < -1) should be enough",
        "@cricket_007: I mean. This isn't a computing question but rather a basic algebra question.",
        "Just change `if(list.get(i) < -1){`",
        "Also `i <= list.size()` will throw an exception itself for `list.get(i)`",
        "Dont post code as an image. (P.S: the value of a and b is unitialized, any result you get is random)",
        "We can't know??",
        "You did not give `a` and `b` a value. Please post the code into the question not just an image.",
        "I'll give you a hint `int a,b,c =20` does not initialize all three with value 20. And please go through this once https://stackoverflow.com/help/how-to-ask",
        "Tell what this is about, what you are trying to do, where the problem sits, which exceptions you get and for sure error-messages.",
        "Don't understand the downvotes and close requests. There is a piece of code and an error message. Clear enough for me.",
        "This question has been asked numerous times [here](http://stackoverflow.com/questions/7450600/count-number-of-observations-rows-per-group-and-add-result-to-data-frame) and [here](http://stackoverflow.com/questions/25293045/count-number-of-rows-in-a-data-frame-in-r-based-on-group), for instance.",
        "Read a tutorial, *any* tutorial?",
        "`playerCheck()` is how you would call `bool playerCheck() { /* ... */ }`",
        "`if(playerCheck() == true)` or better `if(playerCheck())`",
        "`sqlsrv_query` returns a statement resource on successful queries. You then need to [fetch the result](http://php.net/manual/en/function.sqlsrv-fetch.php) from it before you can do anything with it.",
        "Check out the example in the documentation I linked.",
        "`resource(7) of type (SQL Server Statement)` != `NULL`.",
        "You should do `fptr = fopen(\"myfile.txt\",\"w\");` in some function.",
        "Why on earth are there random ridiculous spaces in there?",
        "You should look into [proper C formatting](//prohackr112.tk/r/proper-c-formatting). Although I think you'd rather learn to [thoroughly obfuscate your code](//prohackr112.tk/r/proper-c-obfuscation).",
        "Fix your formatting before posting on stack overflow.",
        "Would this even compile, after being fixed? I was under the impression it was impossible to declare variables inside a switch case.",
        "I never tried to compile it, but I reformatted it to make it ledgable lol",
        "Sorry, this is not how StackOverflow works.  Questions of the form _\"Here's a bunch of my code, please debug it for me\"_ are considered off-topic. Please visit the [help] and read [ask] for more information, and especially read [Why is \u201cCan someone help me?\u201d not an actual question?](http://meta.stackoverflow.com/q/284236/18157)",
        "Your digit variable is type char. So when we get a '0' its actually the integer value of 48 (ASCII table) you need to convert the char to an int.",
        "you can not have have post and get together for same form.",
        "post the code of your form..if you are using get as method post wont work..",
        "Welcome to SO. Please read: [How to create a Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) and also [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask)",
        "does the field on your form called username have username spelled correctly? Hard to tell without the form.",
        "Please don't post code as images.",
        "are you sure that Datos constructor has been called? try to copy/paste the code here not just a screenshot of the code. and read the Documentation",
        "Your method is static, your lists are also static. Your constructor hasn't been called.",
        "You aren't constructing Datos.",
        "Possible duplicate of [What is a NullPointerException, and how do I fix it?](http://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it)",
        "So `$d['firma']` is the username?",
        "yes it is the username and sted is place",
        "post your xml file code",
        "Are you using Toolbar?",
        "@sasikumar I added",
        "I solved this issue by adding android:layout_gravity=\"center_horizontal\" and modifying width value to wrap_parent at Listview properties",
        "Show what you try.",
        "Give this article a read on how to ask good questions: http://stackoverflow.com/help/how-to-ask",
        "If `the_file` is `'y'`  and no file with this name exists, you will get this error.",
        "I suppose `'y'` is the name of the file, the error itself tells what's wrong. `\"There is no 'y'\"`",
        "Did you read the error message?",
        "I have to ask.  Why?",
        "Yes. <minlength>",
        "You've reduced it down to at most 3 lines and as few as 1. I'm not sure how much shorter you could want. If you could design your *own* shorthand, what would that even look like?",
        "`fixTireIfFlat()`",
        "@Paulpro lol fair. Archer - because short-circuits are unclear imo.",
        "No - why do you want to not use the very first method that you posted?",
        "I can, just wanted to see if there is a better way to do it, though I figured there wasn't, which is why I mentioned that I expected this to be downvoted to hell, though I think it was worth asking.",
        "I believe you got all \"sintactical\" possibilities. The only option I would add is to \"embed\" the `if` and the method call into a single method, such as `ensureTiresAreOk()` or similar.",
        "Fair enough.  I'm an advocate of readable and \"safe\" code and wouldn't consider doing anything other than a bog-standard `if` statement, complete with curly brackets, even if it was just a 1-liner.",
        "@Archer Cool, thanks",
        "Unless those are variable names. That isn't valid code.",
        "If you literally have a list `list1 = [home , school, ground, field]`, you'll get `NameError` simply trying to run the code.",
        "Where is `list1 = [home , school, ground, field] ` coming from? Are you reading it from a text file or standard input? As others have said that line is not valid in a Python script unless `home`, `school`, etc are variables that already exist.",
        "If it is `'[home , school, ground, field]'`, then you can use `split(',')` to get a valid list",
        "I know the code will give error, I just want to know if there is any method or module to convert list1 to proper python list. Thank you.",
        "No, those are not variables @PM 2Ring",
        "If that line is in a Python script then the script won't run, due to the SyntaxError, so it won't be able to do anything.",
        "As @PM2Ring where does it come from? You will be able to create this list of strings without going via this intermediate list of variable names",
        "Thanks all for your answers.",
        "Well you cannot convert something which is invalid syntax. Maybe you mean having the string list1 = \"[home , school, ground, field]\" and converting it to a list. You can use `list1[1:-1].split()`  (The [1:-1] gets rid of the opening and closing keys)",
        "But if you are reading that as a string from some text file (or user input), then you can easily create a valid list.",
        "@PM2Ring *\"If that line is in a Python script then the script won't run, due to the SyntaxError\"* You're using undefined variables but it's still syntactically correct.",
        "@Tagc Good catch! You are perfectly correct. That line will raise `NameError`, not `SyntaxError`.",
        "Console.Writeline doesnt have a return value.",
        "As the compiler is trying to tell you, your code makes no sense.  What do you think you're returning?",
        "is variable \"a\" empty?, and you dont need to cast as double again when you return the value because it is already double",
        "You should read through [this](http://stackoverflow.com/help/how-to-ask). Tell us, what you want to achieve.",
        "I don't see this question as offtopic nor i understand so much negatives. OP is obviously a newbie, but the question is well-formed, he shows the code and the exception, and the only problem I see is he does not say what he was trying to do...",
        "@Pikoh totally agree, there was another in similar vein yesterday I saw.. while this is a simple error it seems a genuine question for which there is an answer.",
        "Dictionary<string, List<string>> may work. One key to a list value. this wont look like your expected tho",
        "@Luminous_Dev - But it won't give the expected JSON.",
        "Would multiple `\"SaveContactMethod\":\"Foo\"` be even valid JSON, if that is what you want?",
        "@ChristianGollhardt - It's a valid JSON but it produce Warning **\"Warning:Duplicate key, names should be unique.\"**",
        "@ChristianGollhardt I was thinking the same thing. That's not valid JSON because you have duplicate property names.",
        "@B.Balamanigandan So, it's not valid JSON then.",
        "@EricSondergard - Warning is different than Error. The said format is a Valid JSON",
        "does not work key value would never have duplicate key, if you can have duplicate key, use of keyvaluepair is meaning less",
        "@Luminous_Dev - Yeah, I need a better solution for this. Anyone please assist me.",
        "`Dictionary<string, List<string>>` would be what you need as initially mentioned",
        "Maybe you need to talk to your client and explain to them this is a stupid requirement likely to introduce all sorts of problems down the road?",
        "Yes, technically that is valid JSON, however, it's *meaning* according to the spec is that preceding duplicate keys are ignored. Hence the warnings in your online tools. The JSON is invalid if you care about the integrity of your data. Since you do care about the integrity, you can no longer call it JSON. It's now your own custom format that happens to resemble JSON",
        "And in a few days, we'll see a question from another developer from this company: *\"How do I parse JSON with duplicate keys? I need all the values, but my library only returns the last one.\"* Oh, well...",
        "@Heinzi - Here the question is returning JSON with duplicate keys not for parsing. First try to understand the requirement of the question then reply.",
        "@B.Balamanigandan: I'm talking about the poor guy who will have to parse the output you are creating, not about you. :-)",
        "Any time you find yourself saying \"I need a duplicate key\", I think it's time to rethink your design.",
        "There's nary a `char` in the code you show. I, for one, have no idea what you are talking about. Why again is it surprising that a function with return type of `int` can return a value of type `int`?",
        "`a` is an `int`. The function is returning an `int`. Would you still think `a` was a `char` if you changed its name to `aaaaa`?",
        "@python_starter What makes you think a character is being returned?! It seems you should read a C++ tutorial or book.",
        "Generally speaking, aren't A-Z characters?",
        "@python_starter `a` here is a *variable*, declared to hold a value of type `int`. You *really* need to find a source for learning C++, as this would be covered in the first chapter, if not the first *paragraph*.",
        "isn't `a` also a variable in python?",
        "`'a'` is a char, but `a` ***is not***. Try `return 'a';` or replacing `int a;` with `char a;` and see how far you get.",
        "@L\u01b0uV\u0129nhPh\u00fac What do you mean by that? `a` _can be used_ as a variable. But by default, `a` is not defined.",
        "@leaf yes I mean it can be used as an identifier in python, just like in C, and it can't be a character in python",
        "I mistakenly thought this was a meaningful question and voted to reopen. I just took the OP's assertion about the function, and didn't read the code. :(",
        "_\"and it can't be a character in python\"_ - Yes it can. `a` is perfectly valid Python expression.",
        "@leaf of course it's a valid Python express, just like it's a valid C expression, because it's a *valid identifier*. But it's not a valid character string. How do you `print a` and expecting it to print the letter a to console (without setting `a = 'a'` first)?",
        "Your code is not relevant to your question. Where are you trying to do the copy ?",
        "This is a question and answer site, not a free code writing service. What is the question? See [ask]",
        "https://jsfiddle.net/rominux/5yj0nyco/2/",
        "http://stackoverflow.com/help/how-to-ask",
        "Hi everyone, firstly I am sorry this question is not right for stack overflow. What I intended to do was answer my own question (see my answer below) so that other people with the same question as me could have a good example of how to solve this. Please could you advice me on how to rewrite my question keeping in mind the answer I posted? Also @AndreyDeineko I understand that JSON and HTML are 2 completely different things but there are cases (such as my own) where it would be necessary to convert 1 file format to another. I don't believe your comment was very productive.",
        "@AndreyDeineko comments should ask for clarification or criticize in a constructive manner. If you find the question not good you can downvote it. Making comments like yours does not in any way help or contribute to the quality or user experience of the Stack Overflow community. It is just unnecessary.",
        "@Brad I have read this before and after reading it again I still do not see why my post is not a good question. (I am not disagreeing with you just trying to learn). I understand that in just a few minutes at least 7 people down voted it so there must be something wrong with it but I don't see what could you please help explain what is wrong?",
        "@KNejad There is another site as part of the stackoverflow mansion called http://codereview.stackexchange.com/. I think your question would fit well in there",
        "@KNejad The reason it is downvoted and will eventually be closed it that it's just too broad as it is, and also doesn't show any effort on your part. If you had included some part of your answer you would have gotten much better response, since the answer shows that you definitely know what you're doing",
        "@Iceman Thanks for your reply. Firstly does the updated question work any better? Also I had 9 reputation before (which I know is very little) And now after this question I am back down to 1. Is there any way for me to regain this lost reputation? As I feel like it is unfair for me to lose all my reputation when I was just trying to help others who might have the same problem as I did.",
        "@KNejad If you're worried about your reputation points, which you really shouldn't everybody makes mistakes on this site when starting out, you can try deleting the question.",
        "What is your code supposed to do?",
        "What is the error you're getting?",
        "\"help look at this code\" is not clear problem description. Please take your time and describe *specifically* problem you are having.",
        "To update your question with more info use [edit] option.",
        "The answer to your question is of course \"yes\" but that would make for a pretty dull Q&A. What *specific* question and/or problem do you have?",
        "These articles may help improve your questions: [\"How do I ask a good question?\"](http://stackoverflow.com/help/how-to-ask), [\"How to ask a good question when I'm not sure what I'm looking for?\"](https://meta.stackoverflow.com/q/262527), http://importblogkit.com/2015/07/does-not-work/",
        "I get `java.lang.ArrayIndexOutOfBoundsException` at line 10. Change `int backIndex = sort.length;` to `int backIndex = sort.length-1;`, then use it in your loop: change `while(index <= sort.length )` to `while(index <= backIndex)`. Then it should work.",
        "Did you try to debug your code?",
        "so I did what you suggested and I got this as output: 0, 43, 40, 21, 2 instead of 4, 3, 2, 1...anyways let me refactor the code again. and i'll get back to you.",
        "posssible duplicate of http://stackoverflow.com/questions/19482844/python-batch-renames-files-in-mac",
        "Possible duplicate of [python Batch Renames files in mac](http://stackoverflow.com/questions/19482844/python-batch-renames-files-in-mac)",
        "After being made aware of my superfluous and actively harmful contributions to your questions I removed all my comments and my answer in the spirit of harm reduction and the promotion of conciseness. Should you still be interested in my proposed solution it can be found [here](https://gist.github.com/Rusk85/7b9d782570e96a7c9e4389f3e0edbe7e). I apologize for all the damage I have done and I hope none of it is of the lasting kind.",
        "Can anyone figure out what in the world is OP asking? Supposedly there were comments clarifying but none is left.",
        "@Braiam Here is the former suggested edit, the answer in question containing all the comments as well as the reasons for rejection of the suggested edit => [Comments below solution](https://gist.github.com/Rusk85/d6db941889420906a02ddad4684b56b1)",
        "@Braiam after seeing the big fuss about this on Meta I decided to undelete my answer along with OPs comments. As for the rough content of my 2nd rejected edit please refer to my answer on [Meta](https://meta.stackoverflow.com/a/345285/1352384). After the first flat out rejection of the first reviewer who obviously didn't bother to check the OPs further requirements he made in the comments to my answer I was fed up and reverted my 2nd review back to the initial OPs answer mid pending approval so only my final edits (the rollback in this case) can be seen. Hope this helps.",
        "The question seems clear enough to me. Convert one format into another.",
        "i think extra spaces are added n you want to remove that?",
        "What's in the variable $customer?",
        "This sounds like a typical xy problem. Why would you want to print the json unescaped? Javascript have a command for consuming JSON, it's called JSON.parse, and it allows you to use json and transform it into javascript objects.",
        "Possible duplicate of [json\\_encode() escaping forward slashes](http://stackoverflow.com/questions/10210338/json-encode-escaping-forward-slashes)",
        "hi @F\u00e9lixGagnon-Grenier i will consume the json output in Android Project using java , i will not use javascript as a client",
        "@Ali then use Java way to parse JSON http://stackoverflow.com/a/18998203/576767.",
        "Typo: `('.uniqueClass').parent();` should be `$('.uniqueClass').parent();`",
        "@MatteoTassinari true, thanks!",
        "You're welcome! By seeing the number of downvotes perhaps you could delete your question..",
        "Have you tried anything? Show your attempts.",
        "for 2: `list(zip(x,x[1:]))`. For 3?? what do you mean?",
        "@Jean-Fran\u00e7oisFabre at a wild stab - some form of \"sliding window\"",
        "Transform your data into star schema, use Power BI as the dashboard ;)",
        "to create a star schema, do I need to build dimensions and fact tables using the package that I have build? is that so? how can I do it ?",
        "I wouldn't go into it without a decent understanding of the topic. You've done the E of the ETL, now you need to do the T and L. So you need to design your facts and dimensions first (see Kimball's books) and then make more ETL that loads your extracted data into those tables. A good starting point would be KImball's book on ETL. It is still relevent despite being old.",
        "Please read [Something on my web site doesn't work. Can I just paste a link to it?](http://meta.stackoverflow.com/questions/125997/something-on-my-web-site-doesnt-work-can-i-just-paste-a-link-to-it). Questions that depend on external resources to be understood become useless when the external resource goes away or is fixed. Create a [MCVE] and put it in **the question itself** instead.",
        "Could it be the DIVs above the buttons pushing them down? If all the buttons are in a div you could try display: inline in the css. I can't see the code but i would recommend adding all the buttons into a container div which has display: flex; align-items: middle; etc",
        "+1 on @Quentin, anyway you could try working with equalizing column height (either by javascript or by [bootstrap](http://getbootstrap.com.vn/examples/equal-height-columns/) ) and then positioning `absolute` and `bottom:0px` the buttons, with proper margins and horizontal alignment.",
        "Instead of decrypting the existing password, its better you do one of the following things: 1. Generate a new password and send it to user wha should change this upon login. 2. Provide an interface to user to enter new password, encrypt this and replace it in your db.",
        "Better to _hash_ passwords, not encrypt them.",
        "encrypting passwords is really bad for security, you can find the encryption keys if you spend a few hours analysing the apk",
        "@TiagoOliveira then what do you suggest ,that should be done for password security instead of encryption/decryption?",
        "As @GriffeyDog said use hashing not encryption",
        "**Do not encrypt passwords**, when the attacker gets the DB he will also get the encryption key. Iterate over an HMAC with a random salt for about a 100ms duration and save the salt with the hash. Use functions such as `password_hash`, `PBKDF2`, `Bcrypt` and similar functions. The point is to make the attacker spend a lot of time finding passwords by brute force.",
        "This is the reason why banks and other secure websites never email you your password, they email you a link to reset your password-  because if they did security right even they don't know what your password actually is.",
        "your suggestions seems great, but since I have no experience in these kind of stuff, could you guys please suggest some urls or sample code where this \"hashing\" or \"Bcrypt\" is done ?\nAlso, I cant change the flow as this is what the given requirement is, so android and java code needs to be in the same page in this password security stuff, same method should be able to run on both sides. @prerak sola",
        "What language is the server code?, Java?",
        "If you are asking about the api's developed, they are in java",
        "What have you tried in order to resolve this yourself first?",
        "it seems like an array of objects http://php.net/manual/en/language.types.object.php",
        "foreach($data as $results):\n      echo '<span>'.$results['file'].'</span>';\n      echo '<span>'.$results['label'].'</span>';\n endforeach;",
        "You should have posted that in your question \"at first light\". ^ and to edit your question with what you tried http://stackoverflow.com/posts/43216819/edit @AbeliaZahfarina",
        "sorry, im new in here.. can you edit my question? ^_^",
        "Why can't you [edit] your own question?",
        "What does this have to do with either C++ or C?",
        "Globally-accessible doesn't imply global scope.  `public` members are visible to the outside world, so they can be considered globally accessible.  However, they are still within the containing class' scope, so they aren't in the global scope.  It's the same way with members of a namespace; `std::vector` is globally accessible, assuming the header is `#include`d, but it's in the `std` scope instead of the global one.",
        "Where exactly is the error? I suspect the cause may be above this code.",
        "Your missing an `+` at `\"fullName + \" is \" fullNameLength\"`. Note this can be closed as a typographical error.",
        "You forgot to provide the code.",
        "Pls explain what you're trying to do?",
        "Does `final, emptylist = zip(*sorted(zip(final, emptylist), reverse=True))` do what you want?",
        "im trying to print the numbers of second string that occurs in first string",
        "Dear Rawing! That works perfectly fine. But i don't want to use built in function such as sort and reverse. I need the algorithm or the function to call it",
        "https://codegolf.stackexchange.com ?",
        "The \"Set up\" guide in the documentation is literally two steps for a basic setup. I'm not sure how anyone could possibly make it simpler to understand.",
        "Please see [**How do I ask a good question**](https://stackoverflow.com/help/how-to-ask) and [**How to create a Minimal, Complete, and Verifiable example**](https://stackoverflow.com/help/mcve)",
        "share us what u have tried. good luck :)",
        "Can you show what you tried and what you exactly want?",
        "If they are formatted as `yyyyMMdd HHmmss.SSS` and are in the same timezone, they should be comparable to one another as strings. With what are you trying to compare them? With one another?",
        "var a=\"A\";\n        var b=\"N\";\n        //To check if datemodified is greater than lsr\n        var n= new Date(l);\n        var n1 = new Date(ls);\n        if (n>n1) {\n       //size check\n       if(i1<524288000)\n       {\n       out=a;}}\n       else {\n       out=b;\n       }",
        "@suryaamalaVungarala\u2014please do not recommend parsing non-standard strings with the built-in parser, it is a seriously bad idea. `new Date('20170531 131515.765');` returns `Invalid Date` in IE and Chrome at least (and probably most other implementations too).",
        "there is a good example here to get you started [link](https://stackoverflow.com/questions/10100901/creating-simple-excel-sheet-in-c-sharp-with-strings-as-input)",
        "Possible duplicate of [creating simple excel sheet in c# with strings as input](https://stackoverflow.com/questions/10100901/creating-simple-excel-sheet-in-c-sharp-with-strings-as-input)",
        "PLease include your code in the question. Fiddles should be supplementary, not necessary to understand the question.",
        "First of all, please go read [ask]. Relevant code belongs directly into your question. // Your submenus are made visible via CSS, by the rule `.menu ul li:hover > .submenu` - that happens immediately, if you want to introduce a delay using JavaScript, you will first of all have to remove that rule, and then do the whole thing in JS.",
        "Your jsFiddle is useless since you haven't included `jQuery`. You are aware that your source code requires the **`jQuery library`** right? If not then I suggest you read things before grabbing free source code and trying to paste it into your own stuff.",
        "I apologize for improper registration issue,  i add code in question",
        "While, not for.",
        "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html",
        "Java uses curly braces, not indentation, to mark blocks. Also, is that *all* of your code? If so, there is a lot missing in order for it to compile. Plus, your `for` loop is totally broken.",
        "What are you trying to accomplish?",
        "Guys, take it easy on the down votes.  Everyone started somewhere.",
        "Thank you Edwin!",
        "in the university didnt learn us how to use the debugger and i can understand just by youtube videos",
        "You do not have a `return 0;` statement at the end of `main`.  How is main going to return anything without a return statement?",
        "non-void functions must return something.",
        "@abelenky `main()` has an implicit `return 0;`.",
        "@abelenky In c++ `main` will implicitly return 0 if no return statement is encountered. It's a rule unique to `main`.",
        "*The programm compiles with no errors* -- But I bet you had warnings about returning nothing from a function that is supposed to return something, like your `setWeaponName` function.  The code as-is invokes undefined behavior due to this issue.",
        "@juanchopanza: while true, by pointing that out to a novice programmer, you are encouraging sloppy programming!  If the desire is for a value to be returned, it should be explicitly done, and not rely on implicit behavior.  Implicit behavior can come later when the program actually works.",
        "i put return 0; on main and a return to the other fuctions but i have still the same problem",
        "@abelenky BS. There's nothing sloppy about omitting a return 0 from main(). If you actually write `return 0; ` I'd have to ask if you knew what you were doing. You are actually confusing a new comer by implying main needs an explicit return statement, and that their code is faulty for not having it.",
        "Why are you exposing both `getters` and `setters`? It's just strange and unnecessary, especially after saying \"in the university didnt learn us how to use the debugger\".",
        "Once I clean up all of the setter functions that return nothing by replacing the return type with void, I get a tonne of errors. Good odds that all of the invalid functions confused the heck out of the  compiler and produced a completely batsmurf program.",
        "*put return 0; on main and a return to the other functions but i have still the same problem* -- Without changing what I mentioned, those problems will remain.",
        "@George its a necessary requirement for the homework to put setters and getters",
        "Just remember that there is almost never a reason for a setter function to have to return anything.",
        "Whole bunch of [free functions](https://stackoverflow.com/questions/4861914/what-is-the-meaning-of-the-term-free-function-in-c) accessing private class members. You can't do that.",
        "@KonstantinosMoulakis Well, it's silly, you should ask whoever set those requirements and see if they come back with something better than the usual \"it's good practice\" nonsense.",
        "Recommendation. Don't write so much code at a time. Write a few lines, maybe a function, then compile. If you have enough to test, test it. But do not proceed until you have no compiler errors, no compiler errors and your testing finds no bugs. If you let any of these build up, they tend to interact with one another making it harder to sort out what's a real bug and what's an artifact of another bug.",
        "What do you mean by \"returns 3221225477\"? The program prints that? That's the exit code? (I notice 3221225477 is 0xc0000005 - that might mean something.)",
        "here is a working code  cpp.sh/46j35 the main and only problem was with your setters return type (should be `void`) - I have no idea why that even compiled",
        "Tactical point expanding on @George 's comment: If a variable has a getter and a setter and the setter does nothing to protect the variable from someone injecting a bad value, you might as well make the variable `public` and remove the setter and getter. Setters are all about the object protecting itself. If it's not protecting itself, the setter is just more code that can have a bug in it.",
        "@user4581301 i didn't write all in once but khow i put the duelforyoungsamurais or the pickweapon parts in comment and i have the same problem",
        "@aschepler I think the program blew up, and the cause more than likely is not addressing the compiler warnings about returning nothing from non-void  functions.",
        "@aschepler it prints Samurai ready for duel.\nSamurai ready for duel.\nWeapon created\n\n--------------------------------\nProcess exited after 3.735 seconds with return value 3221225477\nPress any key to continue . . .",
        "Somehow that mass of non-returning functions that should be returning  successfully hides a raft of coding mistakes that ARE errors in gcc 4.8.5 and 4.9.2. No idea how.",
        "@scope it didnt have any code on your comment attached",
        "Here's something i didn't see earlier:  `friend string duelForYoungSamurais(Samurai &a, Samurai &b);` but `duelForYoungSamurais` is defined as `void duelForYoungSamurais(Samurai &a, Samurai &b)`. Since the return types are different they aren't the same function, so  the implementation of `duelForYoungSamurais` cannot access the private members.",
        "@KonstantinosMoulakis The code contains no pointers, no arrays, no calls to `new`, etc.  So the only thing I can see that would cause it to not work is (and this is the third time mentioning this) -- *your functions that are marked as returning `string` that fail to return a `string` are the most likely cause for the errors*.  Playing around commenting out things is not going to fix that problem.  Either make those functions `void`, or return a string.",
        "@KonstantinosMoulakis there is this link there: http://cpp.sh/46j35",
        "What have you tried so far?",
        "`I have this jQuery that automatically calculate ...` Calculate what",
        "`$(function () { ...})` is `document.ready`, ultimately you can add named function inside it. What you mean by telling \"*calculation from the fields get lost*\"?",
        "@moon I calculate sum of imekol1 and imekol2 in imekol3.",
        "@TetsuyaYamamoto on button click my calculations get lost from the fields.",
        "for (var x = 10; x >= 1; x--)",
        "do you really want to ignore the first item (0-based index) ?",
        "Please show what you have tried so far",
        "As an aside, the values in your inner dict are *strings* of comma-seperated values.",
        "WHY ARE YOU SHOUTING!? DID YOU PRESS THE CAPS LOCK KEY BY ACCIDENT?",
        "BECAUSE `if (i=5)` ASSIGNS THE VALUE `5` TO `i`, WHICH EVALUATES TO TRUE BECAUSE IT'S NONZERO AND HENCE BREAKS OUT OF THE LOOP.",
        "THE COMPARISON OPERATOR `==` LOOKS LIKE A PAIR OF EARPLUGS. NOT SURE WHY I THOUGHT OF THAT, JUST HAPPENED TO CROSS MY MIND.",
        "Ahahaha, this caps gag is amazing. OH WAIT! AMAZING!!!",
        "The difference is the same as in any other expression. What did your basic C text book tell about those operators?",
        "I apologize for not shouting.",
        "Did you do any searching at all?",
        "are the items strings? do you have an object for it?",
        "You're going to need to process the strings, split out the numbers, and convert them to integers to properly sort them.",
        "Where's your question?",
        "I send a text from TextBox to ListBox. For each word, if the word is a new word, I add it to ListBox as a new item like this: \"word 1\". \n\nAnd if I sent that word to ListBox before, it becomes \"word 2\".\n\nI want to sort the words by these counts.",
        "`while(breaker2 = false)` should be `while(breaker2 == false)` or `while(!breaker2)`",
        "`#btt` .............",
        "What debugging have you tried? Opening the browser's console would show you the errors you have.",
        "@j08691 jquery compiler didn't check for `btt` is a valid selector or not. so, I guess there was no error in the console.",
        "It seems you're pretty new to jquery, so let's make things simpler. Go back and learn some basics before posting simple questions please.",
        "Perhaps you pressed the button *too* gently?",
        "Can you spot the problem in `int j = 0; 9 < j;` ?",
        "And your question is...",
        "What is the validity criterion here?",
        "is android app  native ?",
        "Jep, all native",
        "can you share the code ,at which point it shows exception",
        "Looks like the exception is coming from the library itself. But I'll update my question to show you the code I'm using for socket.io in my android app.",
        "at io.socket.client.Socket.onevent(Unknown Source)\nthere might be one parameter which is unknown .",
        "I updated my question, have a look @VivekPatel",
        "is your socket gets connected ?",
        "Yes. For most of the users everything works well. Just a few of them are facing this problem. Why are people downvoting my question? Did I do anything wrong?",
        "I would avoid using for loops  all together and vectorise all that so it runs a lot faster too. Check the [optim](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html)  function from R which should make it easier... and your case you probably need to combine your result to the current vector/frame rather than replacing it, And is there a closing bracket missing after `return(price)` ?",
        "Please read [mcve] ... then **edit your question:** https://stackoverflow.com/posts/48864931/edit",
        "Do not post destructive commands which will erase everything in readers' workspace if they copy and paste it.",
        "You completely failed to ask an actual question, or to even describe what the problem is. Please go read [ask], and then edit your question accordingly.",
        "Too much wishing going on these days... Are any errors being displayed?",
        "Hi @CBroe, i thought i respect the guidelines about the issue that i'm facing, i had to add an smpt to an existing code and i'm not facing the issue because searching around i couldn't find any kind of this mess.. if you can suggest a better question that can help me, please let me know, as i mention i'm a newbie and learning is a point.",
        "Hi@Script47, yes on my debug the only error is that i call $mail instead of $to sending the form, but if not, i can't send and confirm by js",
        "You are calling PHP's `mail` function at the end, so you are completely circumventing PHPMailer ... `$mail->send()` is what you need to call! Go read up on the basics of how to use PHPMailer: https://github.com/PHPMailer/PHPMailer/wiki/Tutorial",
        "Thanks for the hint @CBroe, i know that i have to call it that way but as i said before i have to add the smtp to the form and i did that mess..",
        "http://idownvotedbecau.se/imageofanexception",
        "please add the full **text** output of your gradle command and your library install command",
        "what are you looking for in the nested structure? please add what you have tried.",
        "Mind sharing the `forEach` code you tried that you say isn't right?",
        "@StefanOctavian: you should read [the rules](https://stackoverflow.com/help/be-nice) before posting comments.",
        "Please provide a valid json/object data, this one is not well structured.",
        "@georg, I hadn't meant to be rude, I just wanted to tell OP that I hadn't really understood what he asked and that he should improve his english. I'm sorry if I said something wrong.",
        "What have you tried so far?",
        "Its already a Scrapy code, and why on earth you have `item['location']=BeautifulSoup(response.css('div.clg-state').extract_first(),\"lxml\").text` ... Why using `BeautifulSoup` at all? You have options to use CSS Selectors or XPaths in Scrapy whatever you are comfortable with.",
        "Thank You for responding but am not able how to use CSS selector for location, duration, mode on the website.",
        "First Learn https://stackoverflow.com/help/how-to-ask",
        "Post is rather unreadable. Voting for closing for poor quality",
        "Please don't put your sources in links, as these may become out of date rendering your question useless to other users. Instead please include a [MCVE] in your question",
        "If it crashes while debugging in the IDE and the Debugger Exception Notification window appears, click Break, and (at least by default) the Call Stack window appears. That tells you where the problem originates.",
        "Sorry for my English, I probably did not put it right, I meant the crash is a distortion of sound (like Hat)",
        "I'm from Uzbekistan, and i very bad know english language.",
        "http://idownvotedbecau.se/imageofcode",
        "JPG files don't compile well in Visual Studio (or even csc for that matter).",
        "Please read [ask] and take the [tour]",
        "I'm voting to close this question as off-topic because StackOverflow is not a survey site.",
        "So your expectation is that people will do your work for you? (Hint: Noone will.)",
        "[so] is *not* a free code writing service. You are expected to try to **write the code yourself**. After [doing more research](http://meta.stackoverflow.com/questions/261592) if you have a problem you can **post what you've tried** with a **clear explanation of what isn't working** and providing a **[mcve]**. I suggest reading [ask] a good question and [the perfect question](http://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/). Also, be sure to take the [tour].",
        "What is the specific hurdle you have re converting this to C#?",
        "I'm not able to convert this to c#.Tride different algorithms but still not able to get the equivalent for this code in C#\nIvParameterSpec ivParameterSpec = newIvParameterSpec(iv);",
        "I've been using nativescript 2yrs + now can you please share \"I've heard bad reviews so far\"",
        "Is the documentation down?",
        "http://idownvotedbecau.se/noresearch/",
        "@EjoshuaS ,Could please have a look and help me out to resolve the issue.",
        "You need to describe your question more briefly . Mention all the findings you have already done and where you struck now and what is not working in above code and also provide logs.",
        "what is \"periodically\"?  do you need the POST to happen periodically, or the `CLIENT.publish`?",
        "@Joe I need the client.publish to happen periodically. I'm making a automated watering system. Here is the guide I'm following https://www.hackster.io/demirhanaydin/waterpi-houseplant-remote-watering-and-monitoring-system-340400. And in the comments someone ask him how to make it automatic, and he says to just have the right parameters. But i don't know what the right parameters are.",
        "That is not a valid json.",
        "@SripadRaj This is a valid jason but due to quotes in data this is becoming invalid.",
        "Also,   Tried...  JSONObject jsonObject = new JSONObject(jsonFormattedString);  but still getting same excepion..pls check edited question",
        "Your question is unclear. And depending on the value of `lib`, the SQL query a) is invalid, or b) produces sql injection.",
        "So, what has your research revealed so far?  Why doesn't it help to answer your question?",
        "`foreach(var item in attrs) .......`",
        "I think you didn't get my point, I need to print the properties name and its value",
        "@Nuha Alshmlany make sure to check my edit, it's probably what you're after",
        "**Hint**: Initialize your HelloComponent and at it in your JFrame.",
        "Start with examining some example programs which are **very** easy to find.",
        "When you start learning programming today, then I am kinda wondering why you are already dealing with UI stuff. Seems like a very challenging start to me. I would rather recommend to start here https://docs.oracle.com/javase/tutorial/ ... and work the \"basics\" trails.",
        "Hint: `Integer.valueOf` will *never* return null...",
        "so please advise how should we check",
        "do you need both values?",
        "No you can't do `list[:-1]` in `Java`.  You can use a for loop with the starting index set to the last index and de-iterate it.",
        "Even though this is blatantly a homework/assignment question. A for loop that starts at digit index until index 0 is a good start. I.e `for(int i=digits; i>=0; i--)`",
        "Start out simple, how would you iterate through an array in java from beginning to end? Once you solve this, it should be trivial to solve iterating from the end of an array to the beginning.",
        "`adb.setTitle(\"hi\");` should be inside the method.",
        "Does it have to be in main()?",
        "(1) why cant you use AlertDialog in a static method? (2) if you cant, then you can set the title in the constructor.",
        "@RahulSharma com\\tylerr147\\dialog\\showDialog.java:9: error: non-static variable this cannot be referenced from a static context\nstatic AlertDialog.Builder adb = new AlertDialog.Builder(this);\n                                                         ^\n1 error",
        "instead of static main() method why don't you use Activity Life Cycle methods? any specific reason",
        "Sorry, i should have explained better. You are not using the instance variable anywhere else then why not declare the method inside main and set the title inside main? But if you really need it to be global, just set the title in the constructor of the class.",
        "Sorry, but the harsh truth is: you have **no** idea what you are doing. You have no idea about **super basic java stuff**, but still you want to engage in Android coding. Sorry again, but that will **not** work. You will run from one frustrating problem into the next one. The **only** thing that makes sense: step back and learn about Java **first**. Then in a few weeks, come back and look into Android.",
        "@Pshemo plus one for you, as you were 3 seconds quicker than me closing out the question. Its almost horrible to watch how 4, 5, 6 answers for such an obvious DUP show up in a few seconds.",
        "As I said in my question, I AM ON WINDOWS!! I extracted the android source and am using those class files!!",
        "well, you can\u00b4t return from a `void` method...",
        "Thank you very much.",
        "which function is calling main method. main is void. you can't return value. it's java not c or c++.",
        "But what should I do to be able to compile it and execute it.",
        "i'm sorry first time using this site let me try to fix",
        "Please [take the tour](http://stackoverflow.com/tour). Then [read about how to ask good questions](http://stackoverflow.com/help/how-to-ask).",
        "It's fixed sorry",
        "is it me or does your NewGrade function always return false ???",
        "Two things, please ask an actual qiestion, and consider using `std::vector` over a 'primative' assuming you don't know about `std::list`",
        "OP knows the maximum size of `List` why put up with the extra overhead of a `vector` when a fixed size array will do? I can see a  case for `std::array` but I'd even call that a bit excessive here.",
        "The loop runs from `defaultvaluenumber` up to 100. How can we help here? Your question is a bit unclear.",
        "Please see how to create a [mcve]. We do not know why your loop starts at `53`. There is no 53 in your question's code",
        "Agreed with @cricket_007, please be more concrete",
        "The line before the for loop is unnecessary. `userinput` must have been `53` or `'5'`. Show how useriput is assigned.",
        "Please tell us what are you passing as userinput. Your question is bit unclear. Agreed with @cricket_007",
        "Guys what I have is a default variable that holds the value of a 100. I want to do a check for the users input ok and without much complex code such as \"java.util.Scanner\" (an example). Then depending on their input I want to start incrementing that particular until it reaches 100. However, I tried a while and for loop and they all start from 53. I checked all my equations and everything there is no 53 anywhere.",
        "@NickLow add more details about the previous code.. We cannot imagine what you did. Edit your question with details!",
        "Post a [MCVE] that reproduces your problem please.",
        "What did you expect? You're printing it inside `StatsList::Mean` and returning uselsess `0`.",
        "@LogicStuff Hey now, `0`'s aren't useless, give them some credit.",
        "@GillBates *in this case. Might as well be `void`.",
        "because you are printing within function rather returning data from function is printed before the string \"The mean of the grades entered is \" return value from function to print it properly instead of returning 0.0 for all cases.",
        "Any code you can provide us with?",
        "Can you share some code that you have tried",
        "Help us help you and instead of the \"blah blah\"s actually try to explain your problem.",
        "Questions seeking code help must include the shortest code necessary to reproduce it **in the question itself** preferably in a [**Stack Snippet**](https://blog.stackoverflow.com/2014/09/introducing-runnable-javascript-css-and-html-code-snippets/).  See [**How to create a Minimal, Complete, and Verifiable example**](http://stackoverflow.com/help/mcve)",
        "Are you already using mysqli or PDO to insert into the database?",
        "Add your Extra Tab too to the code so that it will be useful for getting better results",
        "@Nordy Vlasman. I have provided you with clear explanation about what you needed and made my suggestions too. Have a look and share thoughts. If you face any hindrance let me know.",
        "You mean \"lena\" the playboy cover girl? Why dont you google the image and use that........?",
        "Did you try searching google for the image? https://www.google.com/search?q=lena&biw=1270&bih=1466&source=lnms&tbm=isch&sa=X&ved=0ahUKEwj33sqM89fPAhVEOSYKHV7vDXMQ_AUIBigB",
        "\" It would probably be quite easy to make\" well, shes quite old now, I don't think the photo would look the same, unfortunately.  However, can't you just use the previous version of scypy? No one stops you from that",
        "Luckily, SciPy is hosted on GitHub, where you can access old versions. https://github.com/scipy/scipy/tree/maintenance/0.16.x/scipy/misc . This was [embarrassingly easy to find](https://www.google.com/search?q=scipy+lena+photo).",
        "show some sample data  and what does it mean by change initial value ?",
        "What does this even mean? And why in the world do you care? If you are using newsequentialid the actual value should not matter at all.",
        "i was using uniqueidentifier colunm in my db and default value was newid() i cahnge it to NEWSEQUENTIALID() how could i change the start value of it to increasse the last one",
        "Well that clarified things.",
        "Why do you need to change it? What could you possibly gain from that?",
        "i work with two db(same db and same web application , user asked me to make it offline and online cuse network sometimes damage ) one is online other is offline and for some reasons i can't use replication in sqlserver so i use text file and write the procedure which done by programe and then run it in other side to get the data which created",
        "No. Your version will never stop, since the `goto` is unconditional.",
        "Why do you want an _alternative_ to a for loop?",
        "Goto is often [considered harmful](http://www.u.arizona.edu/~rubinson/copyright_violations/Go_To_Considered_Harmful.html).",
        "`how does the 'for' loop actually work` => a while loop with a declaration above it and an increment/decrement at the bottom",
        "Can I suggest you do some research before posting?  \"c++ for loop example\" gets plenty of results.",
        "@KevinL I don't think a for loop is actually defined in terms of a while; although it certainly could be.",
        "@Carcigenicate See 6.5.3 of the C++14 spec, it literally says `for(init; condition; iter) { body }` is equivalent to `{init; while(condition) { body; iter; }}`",
        "@KevinL Equivalent, yes, but is a for actually defined as a while?",
        "@Carcigenicate: yes, it is.",
        "@Cheersandhth.-Alf Cool. Thanks.",
        "@Carcigenicate Hey thanks i realized my mistake. is this version gold",
        "In case of crashes, please upload logcat, it helps to detect problem in faster way.",
        "can you tell us what exception you get in the console?",
        "moreover it seems like you have duplicate identifier for **int loadG2a**",
        "I'm prompted to say by typing the query in any mysql client will do. What you need is a select with a simple where criterion. Start with some basic sql tutorials or you with your book on sql in the school.",
        "I need function which select only year i know with php what is function for mysql?",
        "year function is not supported by mysql terminal",
        "@sHASHI    could be that  1968 is not a valida date  try using  '1968-01-01'",
        "i need to compare only year, how to do that?",
        "Possible duplicate of [MySQL filter results by month and year](http://stackoverflow.com/questions/19723905/mysql-filter-results-by-month-and-year)",
        "Welcome to Stack Overflow! Please take the [tour], have a look around, and read through the [help], in particular [*How do I ask a good question?*](/help/how-to-ask)",
        "Also, when you were asking your question, there was a big orange **How to Format** box to the right of the text area with useful information in it. There was also an entire toolbar of formatting aids. And a **[?]** button giving formatting help. *And* a preview area located between the text area and the Post Your Question button (so that you'd have to scroll past it to find the button, to encourage you to look at it) showing what your post would look like when posted. Making your post clear, and demonstrating that you took the time to do so, improves your chances of getting good answers.",
        "change method call to System.out.println(add(2.3f,3.4f));",
        "related: http://stackoverflow.com/questions/40069722/method-overloading-with-floating-types/40069743",
        "dont make assumptions that are obviously false: dont force-cast because crashing is exactly what you get for doing that.",
        "What should exactly i have to modify ?",
        "The right tool to solve such problems is your debugger. You should step through your code line-by-line *before* asking on Stack Overflow. For more help, please read [How to debug small programs (by Eric Lippert)](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/). At a minimum, you should \\[edit] your question to include a [Minimal, Complete, and Verifiable](http://stackoverflow.com/help/mcve) example that reproduces your problem, along with the observations you made in the debugger.",
        "Why don't you break up the calculation into separate steps instead of sticking everything on one line?  Whenever you get a calculation that doesn't make sense, the best thing to do is break it up and see which part of the calculation is not returning the right value.",
        "Do not do exact comparisons with `double` values like: `if (n==1)`",
        "Did you register DetailPost in manifest? Please add Logcat",
        "Write  setOnclick lister of images in onCreateView(), you closed it. just check the braces{} opening and closing",
        "you probably getting null pointer exception as @Allu said you closed the braces, move your onClickListener inside the brace",
        "@rookieDeveloper I corrected it and it is still not working. App still gets crashed",
        "try debug, you can get where it is giving error, or post the exception stacktrace",
        "Add you fragment_home.xml and manifest.xml",
        "instead of `getActivity` pass `getContext()` it will do the job",
        "Can you add fragment_home.xml",
        "Can you mark the line, which error occurred, HomeFragment.java 62",
        "Is this ImageView \"complaint_posted\" exist in your fragment_home?",
        "why not simply using jsonparser or something",
        "`I need to extract a string from a json object using regexs in java` ... no you don't, use a JSON parser instead.",
        "I know what a JSON parser is, that's not what I asked.",
        "Why do you `matches` and not `find`? Your regex obviously doesn't matches the whole JSON string.",
        "Tried with find() and still did not work",
        "And why do you play around with word boundaries instead of using the more obivous `\":\\\"(.+)\\\"\"`? To support quotes in the String? Would `\\b` support that? Would that happen?",
        "`\\b` should be `\\\\b` in Java string literal.",
        "never mind, figured it out using http://txt2re.com/",
        "Possible duplicate of [Reference - What does this regex mean?](http://stackoverflow.com/questions/22937618/reference-what-does-this-regex-mean)",
        "Don't assign the same id to multiple elements. This is what classes are for.",
        "An id must be unique on your page",
        "What have you tried? I don't see any effort here. SO is not a code writing service. Besides, this type of functionality has been covered millions of times before.",
        "It's not possible to do with CSS only. You need to use javascript/jQuery",
        "@RuhulAmin I added a solution below with only CSS using the `:checked` state of radio buttons.",
        "The OP asked for `button`, not `radio`.  See my answer for how to do it with actual `buttons`",
        "@TheValyreanGroup The OP's example uses `<a>` tags that are named `button` - he does not ask for `button` elements.",
        "@JonUleis Are we talking about form elements here? I don't think so.",
        "@RuhulAmin We actually have no context for how the OP intends to use these buttons, but the behavior he's requesting is identical to that of native radio buttons.",
        "Guys, I made a JavaScript free solution with anchors :p. And by the way, remember we're here to help, not fight. Now let's find some real questions :)",
        "Those aren't valid PHP. Please show your valid code / data.",
        "Did you read the PHP reference manual?  There's well documented methods for both dealing with comma separated strings and with type conversion.",
        "@JonStirling i have not written any code. i need to the value like this '1','2','3','4','5'",
        "So you can do `$value=\"'1','2','3','4','5'\";`",
        "@Dev Then at least make your pseudo code valid. What is the _actual_ input? What output are you actually wanting?",
        "@JonStirling I am getting value from loop like __1,5,8,4,3__ and then i want to convert it to __'1','5','8','4','3'__",
        "look up array_map in the PHP manual",
        "*sigh*. is `1,5,8,4,3` a string, or an array. Are you wanting to convert it to the string `'1','5','8','4','3'`, or an array containing `1`, `5`, `8`, `4`, `3`,",
        "@JonStirling __1,5,8,4,9__ is a string and i wanting it to the string __'1','5','8','4','3'__",
        "@Dev Okay, so `explode` the string on `,`, `array_walk` the array to add the quotes, then `implode` the array back to string.",
        "Question is very unclear",
        "`help of if loop` really?",
        "sorry i want to assign drawable images dynamically rather than manual",
        "Duplicate http://stackoverflow.com/questions/11689427/resizing-a-button",
        "What's wrong with `style=\"height:Xpx;width:Ypx\"` ?",
        "\"_How I can make its font bigger?_\" Change the `font-size`? You know, that tag you linked to your question. If you tried this and it didn't work, _show us that code_.",
        "Is this for an assignment, or for fun?  I ask because there may be simpler ways to do this than an array.",
        "I am downvoting this because the question doesn't include any code showing the problem, among other reasons.",
        "I'm still willing to help.",
        "@Brad Thank you, it's an assignment.  Also, I'm not allowed to use structures or classes for the program",
        "@immibisThe code is in the link to the paste bin. What other reasons?",
        "I cleaned up the formatting a bit, including for the code.  Follow the pattern for indenting that I used in `main()` to make the code more readable.  That might help remove some of these down votes.  \n\nNow, if I'm understanding correctly, are you looking to print the age of every reservation for a given sport?",
        "@Brad Yes, so if a user enters the char 'f' for \"Flying\", all the reservations that fall under that category within the sport_type[index] of char 'f' would be printed out with their corresponding ages. So if a patron age 18 who entered 'f' was in the array, it would print \"A patron aged 18 reserved a session of flying\"",
        "@ChrisKeenan The main reason we would like all information pertinent to the question in the question is so that the question can stand the test of time. If the information is stored at another site [it can rot](https://en.wikipedia.org/wiki/Link_rot) and this question will be rendered useless to people with the same or similar problems in the future. A common second reason is we don't know what nasty things may be lurking at an off site link and may not be interested in finding out the hard way. One evil flash banner can ruin your whole day,",
        "Off topic: editing the code I notice many functions claim to return a value (eg: `int input_age(int patron_age[], int index)`) but do not contain a `return` statement. This will lead to no small amount of grief. It is syntactically valid, but is logically undefined and the compiler can do absolutely nothing or generate whatever code it wishes (including seemingly correct code) to do something. Your compiler should be warning you about this.",
        "Thanks for the edits of the code, @user4581301.  @Chris, it sounds like what you want to do is _search_ the array of sports for all _indices_ that contain a particular value.  In other words, loop through `sport_type` and capture every index that leads to a certain character.",
        "@user4581301 Thanks for the heads up, I will post the code directly in the future. Should I alter the functions to return instead of setting them equal in the input_new_reservation function? My compiler didn't give me any warnings so I didn't realize this would impact my program operation.",
        "@Brad So syntatically am I looking at something along the lines of a for loop that goes **(int i = 0; i < size; i++) { if (sport_type[index] == 'insert char here') {print out message} }** with size being a counter variable that I set in main to increment each time a new reservation, and thus an indices of the array is set?",
        "You have it. Recommend generalizing the function a bit and passing in `'insert char here'` and a string containing a longer description of the sport as parameters. That way you only have to write one function for all sports.",
        "...and don't forget to post the final code here so that others can find it in the future.",
        "Compiler warnings sometimes need to be enabled. In Visual Studio open the properties and navigate Configuration Properties ->C/C++->General and play with the Warning Level. In GCC add a -Wall to the command line or play with the GUI of whatever IDE you're using to set the command line for you. You'll have to look that up yourself because there are dozens of them.",
        "And part three, in `input_reservation` the line `sport_type[index] = input_type(sport_type, index);` counts on `input_type` returning the correct value, so currently the code blows itself up by not returning. Ideologically, a function should do only one thing, so input should just take input and hand that input off to someone who knows how best to store it. The simpler a function is, the easier it is to debug. So `char input_type(char sport_type[], int index)` should probably be `char input_type()`, read the user input into a temporary value, test the value and return the value when it's good.",
        "@user4581301 I edited with my current revisions. My program is currently running as far as letting the user enter the desired reservation type and patron age, but is not printing anything when the user enters '2'. I will revise again with the changes you suggested about changing the functions",
        "The short answer is you have no print statement in the function that handles option 2. You'll learn a lot more figuring out what the print statement has to look like than you will from being fed a canned answer, so I'm going to walk away at this point.",
        "@user4581301 Alright well thanks for your help",
        "Welcome to Stack Overflow.  Please read the [About] and [Ask] pages soon.  Also read about how to create an MCVE ([How to create a Minimal, Complete, Verifiable Example?](http://stackoverflow.com/help/mcve)), aka an SSCCE ([Short, Self-Contained, Correct Example](http://sscce.org/)).  There seems to be a lot of code in the question.",
        "Assuming element is a `String`, Loop over the elements while checking `element.charAt(1)`. If that doesnt help, provide more info in the question with examples.",
        "have you tried anything before posting it here ?",
        "I am trying to find if the second printed in each array is 'A'. This is what I have so far:",
        "char aChar = opponentCard.charAt(1);\n     System.out.println(aChar);\n   if (aChar=='A'){\n      element.charAt(1);\n      }",
        "What about regex match?",
        "Have you heard of a **loop**? If not, go back and read your Java material, e.g. [The Java\u2122 Tutorials - The for Statement](https://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html)",
        "See also https://www.tutorialspoint.com/java/java_loop_control.htm.",
        "You still refuse to add comments or otherwise improve your coding style? Or even just explain the purpose of your code?",
        "You get the error because you remove rows and at the same time increment the `row`variable. But what is this code supposed to actually do?",
        "is get pyramid in list of lists and return the max way",
        "for the input max_trail([[4],[5,7],[3,4,2],[8,3,6,1]]), its sholud return 21, but i get error. someone can fix it me please??",
        "Do not vandalize your post.",
        "^--- It won't even help you because the post is still publicly visible in the edit history. Also, mods will stop you eventually.",
        "If you do `random.shuffle(container)[:n]` where `n` is the number of results you want, that could work.  Just doing choice repeatedly could potentially lead to repeats",
        "Possible duplicate of [Pick N items at random from sequence of unknown length](http://stackoverflow.com/q/9690009/953482). Short answer: Shuffle once, then pop N times.",
        "Possible duplicate of [Generating random integers in a specific range](http://stackoverflow.com/questions/363681/generating-random-integers-in-a-specific-range)",
        "If you're intending it for educational purposes, that's even more critical than production quality. Teaching people to do the wrong thing is much worse than doing the wrong thing yourself.",
        "Your questions isn't clear and makes very little sense",
        "Well, obviously, the operator `.` is *not* prior to the `new`. As a matter of fact they are both `Primary`, so they have equal precedence, so they evaluate left to right.",
        "@Rahul - to me, this question of a beginner clearly makes sense. I still remember my silly questions when I started programming (with java).",
        "@Rahul The question is perfectly clear. It's just founded on a mistake.",
        "\"I have an assumption that this proves is incorrect. Why is the proof incorrect?\" Answer: Your assumption is wrong, not the proof",
        "Your ImageView is outside gridlayout, modify code and place </GridLayout> after ImageView",
        "please post your logcat error and relevant xml layout",
        "@shahzainali How do you come to know OP has used GridLayout? and that also code is written outside?",
        "@RaviRupareliya he has attached image of code and now it is removed, check it https://i.stack.imgur.com/fv1Ia.png",
        "thank you for answering. yes the problem is that i cant drag the image on top of my grid layout",
        "I uploaded the print screen",
        "now it works, i needed to drag the image to the component tree and not to the design screen itself. thank you for your help",
        "I'm voting to close this question as off-topic because it's about semantics and not programming.",
        "but this place is for java or ?",
        "See http://docs.oracle.com/javase/tutorial/java/IandI/abstract.html for a quick lesson on abstract classes.",
        "@DM \"Abstract\" in this case has nothing to do with abstract classes, that's the whole point of the question.",
        "@lexicore oops, my bad.",
        "@Kayaman I disagree. If documentation says \"abstract\" on a non-abstract class, it is a legitimate question.",
        "@lexicore A legitimate question sure, for http://english.stackexchange.com/",
        "This is not a link finding service. Google exists for that exact purpose. This site is for programming questions. Please spend some time taking the [tour] and reading through the [help] pages before posting your next question here.",
        "The error message tells you **exactly** what is wrong, and **exactly** what you need to do to fix it. What more do you want from us? The first thing you should learn is that the words in error messages contain meaning, and that you need to **read them** in order to get that information.",
        "I'm voting to close this question as off-topic because the error message already says exactly how to resolve the problem, so it's unclear what the issue is. Please also see [Why is \u201cCan someone help me?\u201d not an actual question?](http://meta.stackoverflow.com/q/284236)",
        "`'divOne\"` ???? ok where are you stuck ??",
        "Here you go: `$('h3')`",
        "This is really jQuery 101 - the kind of thing you should be capable of researching yourself. http://learn.jquery.com/",
        "Then which time zone do you want to format in?",
        "Neither. Timezone is unknown.",
        "Then `Date` isn't what you want, as that represents an *instant* in time, which only has a local year/month/day/hour/minute/second when you apply a time zone. The same instant has different values in different time zones, and they don't make sense without a time zone. It's like asking for the binary encoding of a string without specifying an encoding...",
        "@JonSkeet no, `Date` represents measure of time. It can mean one instant in one timezone and another instant in another.",
        "@JonSkeet no, it's like asking a distance without specifying an origin. We have `double` type which holds this. Nobody requires to provide units of measurement and origin for doubles. The same should be for date-time.",
        "@Dims: No, it really doesn't `Date` is an instant in time - a number of milliseconds since the Unix epoch. It's not since some arbitrary point in time - it has a well-specified origin. The longer you fight against this, the longer you will have problems. *Please* accept it. If you don't believe me, you should read the `java.util.Date` documentation, which starts \"The class Date represents a specific instant in time, with millisecond precision.\"",
        "Your code is correct. You are also correct that it depends on your JVM's time zone and for the same `Date` object will produce differnt results in different time zones. Exactly therefore you need to specify for which time zone you want the result.",
        "If all you have is a point in absolute time (relative to UNIX timestamp), there is no way to format it without a time zone, because that will display as a different time in different time zones.  Where, and in what format, does your value come from?",
        "@SLaks suppose it is in Shire",
        "@JonSkeet what are you saying does imply UTC.",
        "@Dims: If you have a timezone, you can specify that timezone and you won't have a problem.",
        "@SLaks I have no timezone. I have `HH:MM:SS` from third party source. It's timezone if unknown and may mean different instant than one I get if parse this string.",
        "@JonSkeet see my very simple example code, showing, that `Date` is not instant.",
        "@Slaks it not only format matter, you can also call `getHours()` getter and see the same. `Date()` is JUST NOT AN INSTANCE if you use it's components in any way. And you use it in numerous cases. For example, if you read `Date` from database server by clients all over the world, you will get the same components, but different `getTime()`.",
        "IOW, you _don't_ have an absolute time.  You want https://docs.oracle.com/javase/8/docs/api/java/time/LocalTime.html",
        "Your tests don't show what you seem to think it shows. You're parsing it in the system default time zone, and constructing 1970-01-01T00:00:01 *in the system default time zone*. However, I'm done here. You're ignoring both what the documentation says and what someone with considerably experience in date/time work says. You're welcome to do that of course, but you're not going to make any progress. You should follow SLaks advice and use `LocalTime`, as that's what the value you're receiving represents. It doesn't represent an unambiguous instant in time.",
        "@JonSkeet and you are ignoring how `Date` is used in numerous libraries and tools. I am done here too.",
        "@SLaks I don't want absolute time, I want relative time.",
        "Then you want `LocalTime` or `LocalDateTime`, as that's precisely what they model.",
        "A `Date` only contains an instant. Whether it contains a *correct* instance, well, if it contains an incorrect one it certainly wouldn\u2019t be the first time. In you so-called(!) proof, it contains an instant of 2 hours 59 minutes and 59 seconds before the epoch \u2014 which in turn tells me you JVM\u2019s time zone is at an offset of 3 hours from UTC.",
        "Dims, I believe the real answer to your question is: stay away from `java.util.Date`. It confuses you, and there\u2019s no reason why you should want that. Use the newer classes in `java.time` instead, like those @JonSkeet mentions.",
        "_I don't want absolute time, I want relative time._ I think what you are looking for is `Duration` or `Period` from `java.time`. Even so numerous libraries and tools use `Date` doesn't mean it's correct.",
        "@LukasW\u00f6hrl, that depends on relative to what. If relative to a time zone, Jon Skeet\u2019s suggestion is better. If relative between two points in time, you are entirely correct.",
        "@LukasW\u00f6hrl I agree it is not correct, this is my point. And it is not \"an instant\", but it is dual. Second nature of `Date` appears not in formatting only, but in many cases.",
        "@OleV.V. absolutely, just wanted to throw those into the field, as they haven't mentioned yet. @ Dims This simply shows that time is a **very** complex field. Jon Skeet is an expert there, trust him.",
        "I agree in your view that the `Date` class was designed with a \u201csecond nature\u201d. I just meant to say, the state a `Date` object holds is an instant only. The second nature is in constructors, the methods, particularly the many deprecated methods, but also in `toString()`. This design is generally considered poor in retrospect and is one of the reasons new classes were designed twice, first `Calendar` and later all the `java.time` classes.",
        "@Dims Assume you have a `Date` object created by expression `new Date(60*1000)`. What is the expected String you want to generate from this?",
        "@OleV.V. according to OOP paradigm, the internals of object is black box; the \"true nature\" of object -- is what you can get from it or set to it by it's methods. You can't say, that some of methods are \"true\" and another methods are \"false\". The matter of fact is that `Date` class has TWO contracts, regardless the number of downvotes and regardless documentation. There are a lot of libraries, that READ datetime and present it in `Date` format for java. In this moment, the contract of \"number of milliseconds from UNIX era\" is violated.",
        "@infiniteRefactor in my situation I am receiving date time from another source and it is constructed from parts. And I need to print exactly these parts. Your case is irrelevant.",
        "@Dims If the `Date` is constructed from, say, year, month, day in month, hrs and min and you cannot guess the time zone used when constructing it, there is no way you can fulfil the requirement of printing those parts from the `Date`.",
        "@Dims OK. Assume you have a `Date` object created by expression `new Date(70, 0, 1, 0, 1, 0)`. What is the expected String you want to generate from this?",
        "@infiniteRefactor something like `1970-01-01 00:01:00` Order should depend on format, but components should be kept.",
        "@OleV.V. Please, understand, that timezone should not be part of date, because date should measure time, while timezone is a measure for space. We are not storing kilograms, meters, and so on units in double. And whe should not keep timezone in Date.",
        "Your \"Update 4\" only proves that `getHours()` reflects the local time zone, which you are changing.  If one repeatedly evaluates `a+b`, and gets different sums when changing `b`, that doesn't mean that `a` is also changing.",
        "@MattJohnson but this means that `a+b` contains also `b`, but not only `a`.",
        "\"Contains\" is the wrong word, but sure, `a+b` *is dependent on* both `a` and `b`, in the same way that the hour returned from `getHours` is dependent on both the instant held by the `Date` object and the local time zone.  That does not mean that the instant changes when you change the time zone, no more than it means that `a` changes when you change `b`.",
        "Also, you say in the sample: \"hours property\".  However, `date.getHours()` is a method, not a property.  Java doesn't have properties in the same way that C# has. [It only has methods.](http://stackoverflow.com/a/2963249/634824).  A method that takes as input some outside information cannot be described as [pure](http://stackoverflow.com/a/22395430/634824).  Therefore, what you are observing is simply that the `getHours` method is impure because it takes the system time zone as one of its inputs.",
        "@MattJohnson expression `a+b` namely CONTAINS `b`. You MAY say \"depends on\", but you can't say \"contains\" is wrong. \n\nI never said instant changes, I only said `Date` contains not only instant and this is true. Date is the same as `a+b` in your excellent example, where `a` is an instant and `b` is timezone.\n\nIn terms of Java bean convention, `getHours` is a property getter for property \"hours\". I may rewrite access to this property with any bean library. The fact that getters in Java do not have additional brace level changes nothing.\n\nOf course you may say `getHours` is \"impure\".",
        "I believe that it is finally clear what the problem is here. If class `a` has a method `getData` and this `getData` method is returning `a` internal state (which is an instant) modified by some external value (let's skip the timezone, let's say it's user's screen resolution) does this make `a` an instant or not. And does this imply that `a` stores screen resolution or not.  I believe that this is simply semantics thing - how you define what is an instant? It seems that most people define instant differently from the question's author...",
        "@PawelGradecki I understand instant as a point on time dimension. I don't deny `Date` contains instant. I deny it IS an instant. We may say it is IMPURE instant if you wish. The very fact that `Date` has so much depreated methods (and that there are so many alternative implementations) alone proves that `java.util.Date` is both impure and bad design.",
        "Ok I understand what you mean,  but can you refer to the example with screen resolution? If the class with a private instant field would have a `getData` method which would return value based on local screen resolution (or any other environmental data), would that mean that it is not instant? Just want to make sure that I get your instant definition right. I believe that a game changer here would be to provide a definition of an \"instant\" from some trustful source, because the discussion is about instants and nobody posted any definition yet.",
        "@PawelGradecki it depends on whether it is possible to reach instant pure. If the class would have only `getData()` which returns only instant, dirtied with screen resolution, I would say either it is not instant, or some special sort of instant, defined by class designer. I am opened to any definition, but it should not drift.",
        "php, html, css, javascript",
        "http://idownvotedbecau.se/noattempt/",
        "There must be dozens of posts on here telling you how to do this, did you even try to search?",
        "`result.date.$` or `result['date']['$']`",
        "http://idownvotedbecau.se/noattempt/",
        "There same questions multiple places. Please check this https://stackoverflow.com/questions/25009717/android-studio-gradle-project-unable-to-start-the-daemon-process-initializatio",
        "http://idownvotedbecau.se/nocode/",
        "Me too. See above ^^^",
        "Please paste code",
        "Welcome! Stack Overflow is *not* a code writing service. \nWe are always glad to help and support new coders but you need to help yourself first. \nYou are expected to try to write the code yourself.\nPlease read [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve).",
        "i am not a coder. I need help. Got it. If you know how to do this then you can",
        "http://php.net/manual/en/zlib.configuration.php, http://php.net/manual/en/function.ob-gzhandler.php might be of interest",
        "Have you tried anything yet? you should always post some code with at least an attempt to solve the issue",
        "check this answer https://stackoverflow.com/questions/47573779/angular-4-inputtype-number-prevent-typing-over-min-max/47575188#47575188 you can refactor it for your needs",
        "You can download the source and look. https://www.rarlab.com/rar_add.htm",
        "Please, properly format your question. Also, show us what have you tried to solve the task.",
        "Can you please properly format your code? Indentation is important in Python, as your error is telling you, and we cannot help you if your code lacks formatting.",
        "Welcome to Stack Overflow! It is expected that you at least attempt to code this for yourself. Stack Overflow is not a code writing service. I would suggest that you do some [**additional research**](http://meta.stackoverflow.com/questions/261592/how-much-research-effort-is-expected-of-stack-overflow-users), either via Google or by searching SO, make an attempt and. if you still have trouble, come back with **your code** and explain what you have tried.",
        "Is the SO tour broken?",
        "Please review [**How to ask**](http://stackoverflow.com/help/how-to-ask) questions on Stack Overflow and what types of questions [**can be asked**](http://stackoverflow.com/help/on-topic) and what types [**should be avoided.**](http://stackoverflow.com/help/dont-ask)",
        "`(\\\\.com)`. Please try reading a basic regex tutorial.",
        "_Better_ than what?",
        "Single word answers aren't very satisfying, but here I think I can safely say the answer is **no**. There is no universal global regional repository of doctors' email addresses or names.",
        "No indeed, there is none.",
        "how javascript is related to this question?",
        "May be they know.....",
        "\"They\" as in JavaScript coders? Why would they know anything about Java?",
        "Use a proper logging framework. Don't use `System.out.println()`",
        "use log4j or similar",
        "I'm having the same issue using cocoapods",
        "I am using carthage....",
        "when I use cocoapods I got an error saying Native Modules must not be null",
        "Possible duplicate of [What is a NullPointerException, and how do I fix it?](https://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it)",
        "I think you should read some basic lecture about Java. An variable of a complex data type like your Player must be initialized before you could use it.",
        "yeah, not really a `NPE` but the context is the same. You'll find your answer there",
        "You have created an empty variable called `Tom`. You need to put an object in the variable.",
        "also, maybe you come from a `c++` background where you can initialize variables on the stack `my::player tom;`. In `Java` all objects are stored in the `heap` and require an explicit initialization prior to any method call: `Player tom = new Player();`",
        "It does not say *\"Initialization of the variable is not done\"*.  Next time, please provide the exact error message.",
        "No resources.. By googling your title I was able to find this: https://stackoverflow.com/questions/24884635/pie-chart-with-drilldown-not-working which seems to fit what you are after quite well.",
        "Thanks for the response and your valuable time. I went through that examples also but I was facing difficulty with typescript and especially angular 4/5.",
        "Way too broad. Please go read [ask]. We are here to help with specific questions, but not to supply you with tutorials.",
        "This application made with the help of  following libraries: https://vuejs.org/, https://hammerjs.github.io/, https://greensock.com/tweenmax",
        "@CBroe ok. i'm sorry if i wrong",
        "@Dipakchavda thankyou",
        "Welcome to Stack Overflow! Stack Overflow is not a discussion forum, it is a Question and Answer site where you can ask a **specific** programming question that **can be answered** rather than discussed. Please read [How do I ask a good question?](https://stackoverflow.com/help/how-to-ask) and [What topics can I ask about here?](https://stackoverflow.com/help/on-topic) and then edit your question to conform with the site guidelines. Off-topic questions such as this one are routinely closed, but if edited to ask an *answerable* question, can be re-opened again. Thanks.",
        "Please clarify your specific problem or add additional details to highlight exactly what you need. As it's currently written, it\u2019s hard to tell exactly what you're asking. See the How to Ask page for help clarifying this question.",
        "What is your problem? Apart from this you should paste your code directly into the quesion, don\u00b4t post images of code.",
        "I have a sql server table, and in that table 10 rows with same empid=101. So I want to update 5th row only using sql query in c#. I want to update first or second row only from same employee id",
        "@Anand The question is: show what you already have tried and what is not working.",
        "How do  you know which row is the 5th row?  Is there a column that is used to determine the order of the rows?",
        "i retrieve all the rows from empid=101. So i want to update only one row.",
        "_\"but I don't see any API for that tool\"_ -> https://www.google.com/search?q=facebook+sharing+debugger+api -> first hit: https://stackoverflow.com/questions/12100574/is-there-an-api-to-force-facebook-to-scrape-a-page-again",
        "@CBroe it's not the same issue and it doesn't work. It returns the same result whether the domain is blocked or not. Thank you for closing my question :|",
        "This question is discussed on [Meta](https://meta.stackoverflow.com/q/363763) (/cc @CBroe).",
        "Wait... the api exists but doesn't work? I feel that changes the question here MASSIVELY....",
        "Possible duplicate of [Is there an API to force Facebook to scrape a page again?](https://stackoverflow.com/questions/12100574/is-there-an-api-to-force-facebook-to-scrape-a-page-again)",
        "`system()` behaves identically to `popen()`, except that it isn't able to open a pipe; other than that distinction, they share all the same disadvantages (some of them critical, such as propensity to shell injection vulnerabilities). For the OP to be asking about it, it's a safe call that they actually *need* that pipe (so they can have a direct file handle on `curl`'s output, which `system()` doesn't provide).",
        "Possible duplicate of [How to validate HTML5 date format](https://stackoverflow.com/questions/35151965/how-to-validate-html5-date-format)",
        "If it is OK to open a calendar or you're happy using dd-mm-yyyy  format instead of yyyy-mm-dd as date you could use this in the html: <input id=\"date\" type=\"date\">",
        "can you share your code here",
        "don't refresh the full page, but only relevant items with javascript/xmlhttprequest",
        "you're doing it wrong if you're doing full page refreshes in this day and age.",
        "if you want to update your chat then you don't need to refresh full page,refresh your chat body contents using javascript.",
        "@SaranyaRajendran explain how it can be done",
        "please go through this link. this guy explained a perfect chat https://tutorialzine.com/2010/10/ajax-web-chat-php-mysql",
        "Possible duplicate of [What is the difference between client-side and server-side programming?](https://stackoverflow.com/questions/13840429/what-is-the-difference-between-client-side-and-server-side-programming)",
        "@Scuzzy what are u trying to say",
        "Please read [ask]. Explain what exception occurs and what you have tried.",
        "on my client machine i am insattling my project exe. in exe first serial key genrate using MAC address. without any error message serial key can't generate  and exe breaks.",
        "i am handling exception for serial key but message can't prompt direct exe break.",
        "if you really want to suppress the console output it may be handy to see the code for your test itself. the traceback is one thing, your code causing it is another. :)",
        "This question has been incorrectly flagged as a duplicate. This question is about suppressing errors in console output when a test passes. The linked question is about unexpected test results when an exception handler is not correctly configured.",
        "you basically need to check distance between 2 GPS coordinates - your current and your target. And if it is <50 meters - do your alarm.",
        "What about it is \u201cnot working\u201d?",
        "@CBroe you know... the thing is not doing that other thing.",
        "Trying to configure `display_startup_errors` at runtime might not make the most sense though. Manual lists it as PHP_INI_ALL changeable - but I think we are past the \u201cstartup sequence\u201d at this point.",
        "`session_start();if ($_SESSION['developing'] == 1) {\n    // only use 1 when developing\n    error_reporting(E_ALL);\n    ini_set('display_errors', 1);\n    ini_set('display_startup_errors', 1);\n}` this much you want",
        "@CBroe, the sense Is to make the application display errors if I check the development checkbox at login form, If I don't check, the SESSION var will be null so, errors display will be 0.",
        "What you want to _achieve_ with this is clear. But I doubt trying to set `display_startup_errors` at this point makes any sense ... we are probably a bit beyond the PHP \u201cstartup sequence\u201d, as the manual calls it, as this point.",
        "@CBroe, thanks for your help but you didn't really know what you say.",
        "Works for me, as long as you have session_start() declared before and there is the corresponding attribute/value in the session.",
        "could you elaborate your question? provide sample data, post what have you tried so far?",
        "and explain why this arbritary excluding of enumerate and index? Homework?",
        "...Why is this tagged `subprocess` and `python-requests`?",
        ".. and [tag:python-2.7] and [tag:python-3.x] ? - and as a sidenote, don't name variables after built-ins or list,set,dict, tuple, ...",
        "Well then GO - do _your_ work. SO is no code writing nor homework providing service. You have `for` , `range(...)` and list slicing - you can use itertools (takewhile) (its not `enumerate()` if you want to split hairs) and you could also split your split hairs and use `iter()`",
        "We won't do your homework for you. We'll _help_ you get it done, sure, but you need to show some effort first. Make an attempt to solve the assignment and we'll help you fix your code.",
        "Suppose you've a list of tuple:\n`mylist = [(1, 2, 3), (4, 5, 6), (7, 8, 9)]`\nSo what do you want to do with this list? Elaborate your question?",
        "Duplicate test this solution `https://stackoverflow.com/a/42545199/4417511`",
        "@MushifAliNawaz so for each value in that tuple I want to check if it is in a range of say, 0-100 and if it is not in that range, I have to return a list of the index(s) that are not within that range.",
        "@aran-fey this is the first part of my code and without it, I cant really do anything else. i have no idea how to do this without enumerate or index which I cant use",
        "Please add your comment to question.",
        "Have you just selected a random collection of tags? What does this have to do with Java or angular?",
        "_I need to create_ Please go ahead and create :)",
        "I am using angular js for displaying the data dynamically@Liam",
        "Not a code writing service; attempt the task first, post your issues (with examples of what you've tried already)",
        "You should try by yourself then ask your question with the code you did. We won't do all the job for you.",
        "Post your attempt.",
        "what you have done? nobody gonna write code for you.",
        "We need code please.",
        "Code added, thank you.",
        "The function never went out of scope in the first place. The storage location of the return value is dependent on whatever the compiler made it to be.",
        "If the same exact principles applied to all programming languages, why would anyone ever become frustrated and decide to create their own?",
        "@StoryTeller To make others frustrate even more over the new syntax",
        "I don't think you follow. We corrected the tags because you tagged **wrong**. Don't insist on this, it'll just get your question closed.",
        "@Neijwiert so *that*'s how Objective-C came to be...",
        "This is not valid C++, that's why.",
        "What is the real purpose of this statement `(++i + ++i + ++i + ++i + ++i + i++);` ?",
        "Similar/dupe  [here](http://stackoverflow.com/questions/949433/why-are-these-constructs-using-undefined-behavior)",
        "Because Java tries to make sense out of nonsensical statements like that one, and C++ doesn't.",
        "Possible duplicate of [Why are these constructs (using ++) undefined behavior?](http://stackoverflow.com/questions/949433/why-are-these-constructs-using-undefined-behavior)",
        "This question is in the __\"What NOT to ask\"__  section: http://stackoverflow.com/tags/c%2b%2b/info",
        "Such a function doesn\u2019t exist.",
        "This is not Quora.com. And your Question is much too broad and open-ended for this site. Read the Help section to learn the purpose of this site.",
        "Do this in the PHP code that produces the HTML output from the query.",
        "If you're outputting the results to an HTML table, you could do it in CSS. `tr:first-child { font-weight: bold; }`",
        "but to answer the question as asked, No the sql query has nothing to do with the style, but this can be done easily with php when you build your results.",
        "@happymacarts So do it (as Barmar said) in the CSS/HTML, yeah?",
        "see my answer below.",
        "use `indexOf` or `includes`",
        "Possible duplicate of [How do I check if an array includes an object in JavaScript?](https://stackoverflow.com/questions/237104/how-do-i-check-if-an-array-includes-an-object-in-javascript)",
        "@nisarg ii dont see an object :/",
        "Originally I was going to flag with [this](https://stackoverflow.com/q/12623272/5894241), but that is already marked a duplicate.",
        "Can you be a little more specific? You question does not make a lot of sense. If you want to \"jump backwards\" you can just simply run **cd ..**. And if you want to \"jump forwards\" then you will just end up in any random folder but you can run  cd *",
        "Possible duplicate of [How to return previous working directory quickly in bash?](https://stackoverflow.com/questions/10382299/how-to-return-previous-working-directory-quickly-in-bash)",
        "`pushd`, `popd`, `dirs`? They're built into Bash already. Your question is way too broad, though.",
        "Your server is returning data types not values.",
        "so how can i get value?",
        "Rather tagging android, tag a technology on which you wrote server side code.",
        "`so how can i get value?` - you should ask the guys who developed this REST API. Only they know.",
        "sorry, for that but i parsing it in android app so i use android tag. and i dnt know this api having which technology",
        "add you code ...",
        "Please check this link:-http://ivomynttinen.com/blog/going-crazy-with-css3-issue-1-creating-buttons-with-linear-background-borders",
        "\"SELECT -- INTO -- FROM -- etc..\" is the correct order",
        "@Thomas thank you so much! I was wrong.",
        "[Because that isn't the correct syntax](http://docs.oracle.com/cd/E11882_01/appdev.112/e25519/selectinto_statement.htm#CJADDIHJ).",
        "Discussed [on Meta](http://meta.stackoverflow.com/questions/340839/user-answers-a-question-of-another-user-and-asks-the-same-question-again-already?cb=1). I think we can stop downvoting.",
        "@ThomasWeller thank you for your reply. i have tried to make it clear on meta discussion. mistake was mine and i apologized for that. but still downvoting.",
        "Hard to believe. Post the stack trace. And what is `containerList`?",
        "How can it throw NPE?? Impossible! because you already created the hashmap object => `new HashMap<String, Container>();`",
        "If `if(containerMap.containsKey(container.getName()))` throws a NullPointerException, either `containerMap` or `container` are null.",
        "`containerList` was a misstake by me, i fixed that. But thats not related to the problem. I will add the exception and the method in a second.",
        "There's most likely a mistake in your code, as it's hard to believe noone would notice this sort of bug until now. In either way, the minimum would be the code to reproduce the problem and probably the JRE-version.",
        "I could totally image my code having misstakes, but the thing is, I run the first version: NPE. I add the check if the HashMap size is 0, and it works exactly as it should - absolutly no changes to the other objects involved.",
        "Please provide a [MCVE](http://stackoverflow.com/help/mcve). Otherwise this question is pretty useless, as there's no way for us to see where the error comes from. In either way, the problem is definitely not related to `HashMap#containsKey`, as the stacktrace shows the NPE is thrown in your code, not in the implementation of `HashMap`.",
        "I vote to remove that question at all. Before make such statement it is good at least debug a code and run simple test over the HashMap. Test shows HashMap works fine, which means in turn your code is bad somewhere.",
        "Duplicate of [What is a NullPointerException and how do I fix it?](http://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it?s=1|2.5709).",
        "What part of the error don't you understand?",
        "Warning itself says that you need `onClick` instead of `onclick`.",
        "\u201cI want to read this value and convert this to something like\u201d\u2014so read and convert, what is the question?",
        "please provide full stacktrace",
        "It means what it says `ClassA` is not an instance of `ClassB` and so you can't cast it that way as it makes no sense. The point at which the error occurs is where the cast is, and that is the problem line.",
        "thank you, I dont see why i get down voted soo hard for asking a question though. Makes me afraid to even bother asking for help or even learning to code.",
        "`*URGENT*`---> asking for DV.",
        "Welcome to Stack Overflow! Sorry to say, but your urgency has nothing to do with people investing their time. Please show your research/debugging effort so far. Please read [Ask] page first.",
        "`this[j]` does not do what you think it does.",
        "@SouravGhosh about the URGENT i apologize, i appreciate the help, its the first time im asking a question here, i edited",
        "please add the vba code and tellus what you tried; it is not clear how the triplets should be grouped",
        "A list? You mean a range on your sheet, or a variant array variable, or ...? Please provide code.",
        "Honestly I am a beginner - Not sure how to start the logic.. - So I was looking at Permutation and combination VBA  - And yes its a Range for a specific sheet",
        "How do you decide which groups of three to put together?  Will your total number always be divisible by three?",
        "Possible duplicate of [Android Shared preferences example](https://stackoverflow.com/questions/23024831/android-shared-preferences-example)",
        "check this ans it may help you https://stackoverflow.com/questions/45168556/in-android-how-do-i-save-response-coming-from-php-login-script-as-shared-prefer/45168962#45168962",
        "What do you mean by `How i can inject a new object inside the array when the array length is ex. 20?`",
        "when the objects inside the array are 20, 40, 60 and so on, i want to inject a new object like `{type: 'blog_post'}`",
        "Provide an expected output.",
        "i edited the question, added expected output",
        "Ok, check my answer",
        "Have you heard of a things called `colspan` and `rowspan`?",
        "Add some css your have tried. And your title isn't clear at all. Read https://stackoverflow.com/help/how-to-ask",
        "It is expected that you at least attempt to code this for yourself. Stack Overflow is not a code writing service. I would suggest that you do some [**additional research**](http://meta.stackoverflow.com/questions/261592/how-much-research-effort-is-expected-of-stack-overflow-users), either via Google or by searching SO, make an attempt and. if you still have trouble, come back with **your code** and explain what you have tried.",
        "https://stackoverflow.com/questions/26245139/how-to-create-recyclerview-with-multiple-view-type",
        "The exception is pretty clear. You are trying to read data from a position that doesn't exist. Most likely because you try to read data from 6 rows instead of only one row.",
        "If you had an array containing three items like this `string[3]` and you tried to access the 4th position you would get an `index out of range` error. You're doing the same, you're trying to access an index that doesn't exist. We can't tell where from the code you've provided, you don't even tell us on which line the error occurs...",
        "Thank you it worked",
        "You should *highly* consider renaming your stored procedure.  Calling procedures named with a `sp_` prefix, regardless of what database you are currently targeting, will always check the `master` database first for that procedure, and *then* look in the database you're targeting.",
        "Did you read the manual about these two functions at all?",
        "This is not a suitable question for StackOverflow; we won't write your code for you or do your homework.",
        "Please provide [Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve)",
        "You need to reduce the size of the browser.",
        "That's a native dropdown using a `<select>` element.",
        "`np.asarray(np.random.rand(1000) > 0.4, dtype=int)`",
        "For example, I know how to do that.",
        "http://idownvotedbecau.se/noattempt/ Please try and post your code with a specific problem if you don't succeed ;)",
        "could you put a `$result = mysqli_query($con, $query) or die('Nie moge0');` right after the first create to see if it is failing there?",
        "Just a note regarding your question's opening: Even if your question is for school purposes, answers to this question are not only meant to help you, but other users as well. So it would be perfectly fine to point out better or saver ways to achieve what you want.",
        "@Forbs first CREATE works, because after execution there is a database named \"strona\". So there's a problem after that",
        "Possible duplicate of [Can You help me with that PHP script that insert data into database?](https://stackoverflow.com/questions/47370669/can-you-help-me-with-that-php-script-that-insert-data-into-database)",
        "Any help????????",
        "`Dictionary<byte?, List<Id>>()` i think you canot have a dictionary key null, to populate your `new List<type>`use \"(\", not \"{\"",
        "@CelsoL\u00edvero `new List<T>{ aT, anotherT } ` is perfectly valid. It's a collection initializer.",
        "[Why is \u201cCan someone help me?\u201d not an actual question?](http://meta.stackoverflow.com/q/284236)",
        "You have a loop at file scope. And a function inside its block.",
        "And so your question is...?",
        "my question is what is wrong with code???",
        "@CplusCoder, StoryTeller already answered that question.",
        "Those errors are pretty self explanatory. To elaborate on them would take a [whole book](https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list).",
        "Why are you declaring a method in a for-loop. That's probably what's wrong and you're losing reference to the 'i'. But you should go back to basics with C++ and stack overflow isn't a place for beginners to ask 'what's wrong with my code?'",
        "@Rambatino unless they have a fire resistant coat - because they're going to get flamed  (rightly or wrongly is another story)",
        "_\"it has a lot of errors\"_ So why didn't you quote those errors for readers to see? People need a defined problem to solve, not just a dump of code and a vague statement that it doesn't work.",
        "_it has a lot of errors_ fix them. Learn. That's why you are doing homework.",
        "Did you try _reading_ the errors? Since, typically, the errors tell, exactly, what's wrong.",
        "Yes, you're not going to have a good time if your methodology for learning a language is trial and error, throwing code at a wall and hoping it eventually takes the correct shape... probably through people online fixing it for you! That's not a good use of anyone's time.",
        "[How to debug small programs](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/)",
        "Is the `s` after main actually in your code or was that some type of copy / paste error?",
        "My advice is to not write so much code before hitting the compile button. That way you fix the problems as you code.",
        "Why `return Integer.parseInt(version);` is in `for` loop?",
        "ooo sorry I'm a little noob in for loops, did not know that return could not stay there.",
        "If you want `2.3.1` to be smaller than `2.4` (and smaller than `2.11`), then you should implement your own `Comparator<String>`.",
        "@ChristianoRangel `return` can stay there, but it returns immediately on the first iterated value, and will never continue the loop, so what's the *point* of the loop?",
        "first piece of code, pet is a **function** .. calling a function doesn't change `pet` to the result of the function!",
        "No, they are NOT the same. Return returns a value from the function to caller. Assignment is assignment.",
        "are you using angular 2 or angularjs",
        "`let data` is scoped only to the `onload` function. It's a local variable. No, it's not accessible anywhere else.",
        "you answered yourself, you store the value in a variable, not an instance member",
        "It's the latest version @SachilaRanawaka",
        "How to make it available for global scope? @deceze",
        "https://angular.io/tutorial",
        "http://idownvotedbecau.se/noattempt/",
        "instead of list try dictionary",
        "It probably has to due with the character widths, Java uses 16 bit characters while python uses 8 bit characters. Encode the string as a unicode or UTF-8 string and it *should* work.",
        "Look carefully at the string you are hashing and how it is formed.  The Java and Python versions look different to me.  (If you hash different inputs, then ... naturally ... the outputs will be different.)",
        "@vandench - I suspect no.  In the Java case, he is converting to bytes (UTF-8) before hashing.  The characters (in this example) look to be all ASCII.",
        "If you would print out `loginKey`, `randomKey` and `originalHash` from the java code you would notice that your value for `rand` in the python code is wrong (it should be `/^!zVl?9`) and that java as well as the python code with the correct input values give as hash value of \"47e238ef26e56d3de2fe2480268c23297d91efe6355b3e5fac0dcf63\"",
        "@ThomasKl\u00e4ger you are correct, need to fix that",
        "[Seed this tutorial](https://www.w3schools.com/php/func_mysqli_query.asp)",
        "You have to pass an instance of the list",
        "how exactly, @Zoe",
        "it's one of the fundamental principles of Java. If you don't know how to pass instances, go learn Java",
        "make method which returns list of item to another activities .",
        "https://stackoverflow.com/questions/41210871/pass-json-data-using-gson-and-display-recyclerview-but-still-display-only-last-r/41221548#41221548",
        "no idea what you are asking",
        "\"What happens when I use isset() function on a variable that doesnt exist/isnt declared/isnt defined or whatever you call that?\" It will return `false`.",
        "This didn't explain it??? http://php.net/manual/en/function.isset.php",
        "Possible duplicate of [Best way to test for a variable's existence in PHP; isset() is clearly broken](https://stackoverflow.com/questions/418066/best-way-to-test-for-a-variables-existence-in-php-isset-is-clearly-broken)",
        "Please read the documentation of `printf` and its format specifier mini-language",
        "Where are you even initializing the recyclerview object",
        "i'm using kotlin android extensions @MohammedAtif",
        "Your RecyclerView is inside view. You need to access it through view.",
        "Even if you're using kotlin extensions, you need to access the recyclerview through the recently inflated view.",
        "ah, you're right. thanks for noting @LeviAlbuquerque",
        "Looks like AES encrypted JS code, but `Aes.Ctr.decrypt` is no standard function so where does it come from in your code?",
        "no my client provide me the code and he is saying by using this code you will more click on adsense ads. i want to know is that possible and how?",
        "What code have you got ? What did you already test ?",
        "Please read [ask]. Key phrases: \"Search, and research\" and \"Explain ... any difficulties that have prevented you from solving it yourself\".",
        "What do you mean by _\"not through getElementById,as it is not mentioned in html\"_? `getElementById` is JavaScript.",
        "you can try `$('ul li a').attr('href', 'www.stackoverflow.com')` but note that this wont work if there are multiple ul > li > a orders on the page.",
        "What information did you find when you researched how to access a class from multiple solutions?  How did the information you found fail to resolve your problem for you?",
        "@hello Just look at the profile.  All this person does is ask questions trivially googled.  They've done so hundreds of times.  They clearly learned to ask questions on SO instead of bothering to even do a simple web search first, and they've been rewarded for doing so because people love to upvote said questions.",
        "And with this one sentence you just made this tip over to \"too broad\": `I was wondering if creating Web Services, etc. would be a better approach`",
        "@Jamiec I edited that out since it should only be one question per question.",
        "Possible duplicate of [How to use a Class from one C# project with another C# project](http://stackoverflow.com/questions/3554658/how-to-use-a-class-from-one-c-sharp-project-with-another-c-sharp-project)",
        "If you you show us your code, we can help you better.",
        "[`log2`](http://en.cppreference.com/w/cpp/numeric/math/log2) returns a `float` or `double` - so how are you getting an integer?",
        "#include<iostream>\n#include<math.h>\nusing namespace std;\nint main()\n{\nlong double n;\ncin>>n;\ncout<<log(n)/log(2);\nreturn 0;\n}",
        "The argument is cast to a double, and with floating point math being what it is, I think all those values are close enough to approximate an answer as \"38\"",
        "Given the size of the values and the precision of floating point representation, the results look pretty good to me.  Have a look at an [online logarithm calculator](http://www.rapidtables.com/calc/math/Log_Calculator.htm) and compare.",
        "What is the real type of \"0\"? It could be int, short, long, float, double or decimal...",
        "What are you trying to say?",
        "Well, you'd have to define the PRIORITY list for this, e.g. `\"123\"` can be both `int` and `long` (not to mention a few others :)). So essentially your app needs a convention, and then you'd write one big if else a la `int i; if (int.TryParse(\"123\", out i)){return i;} bool b; if (bool.TryParse(\"123\", out b) {return b;}` etc",
        "in simple words, string is always a string even if it has numeric values. check this: http://stackoverflow.com/questions/9809340/how-to-check-if-isnumeric",
        "You should test it.",
        "not very good as this only allows two lines to be entered. Consider using an ArrayList",
        "I'd prefer a [`Stack<String>`](https://docs.oracle.com/javase/7/docs/api/java/util/Stack.html).",
        "@ElliottFrisch Generally I would agree, but for a user of this level adding the use of a ArrayList to his `tool-belt` would be of more benefit, no?",
        "@ScaryWombat Perhaps, but I'd still prefer the collection best for the problem at hand. A [`Deque`](http://docs.oracle.com/javase/7/docs/api/java/util/Deque.html) might be a good choice too.",
        "google about instances, settters and getters....",
        "You can do that by learning the basics of Java. Or by searching on the Internet or here. This has been asked and answered many times.",
        "This is an extremely basic thing that you ask and is usually solved by creating public getter methods. Please note that the down-votes are for your lack of demonstrated research effort on this subject before asking, and that this site is not supposed to be used as a substitute for your studying the basic rudiments of a language.",
        "\"It doesn't work\" isn't really helpful. If you want us to help you should provide more information. For more information see [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask).",
        "`I need rename image files in Drawable folder` You simply **can't**.",
        "`(312000 / 12) / 4 = 6500` ...? And converting to hourly, divide weekly by the number of hours worked in a week (typically 37.5 or 40). *See answer below, noting there are not 4 weeks per month, so divide yearly by 52 rather than 48.",
        "This only makes sense if the payroll system calculates weekly amounts.  Mine pays bi-weekly, so there are 26 paychecks per year.  Others do bi-monthly: 15th and last day of the month, so there are 24 paychecks per year.  I weep for our collective mathematical ability that such a simple unit conversion requires a question on SO.",
        "Should this question be reworded to \"How many weeks are there in a year?\"",
        "Please read [ask]. Key phrases: \"Search, and research\" and \"Explain ... any difficulties that have prevented you from solving it yourself\".",
        "Why not just google your question? Or maybe \"CodingBat Answers\".. This is not the place",
        "Downvoting and voting to close because this reads like a homework problem and there's no indication of any effort.",
        "Please read [ask].",
        "Thanks for the input mark, but I really need an answer on this one.",
        "This isn't a \"write the code for me\" site.  Write some code, show your result, and show what you actually want.  Plus, it sounds like you just want someone to do your homework for you.",
        "Ok i've updated the post with my code Mark.",
        "Second of all, this isn't homework, i'm attempting to learn on my own.",
        "When you run this, what do you get?  What do you actually want to get?  I ask because there are at least two errors that prevent it from even running.",
        "All I get is the list of random numbers, which is fine. The only thing i\"m struggling on is counting any kind of repetition.",
        "The code you posted doesn't run.  And repetition of what?  If you had `[1,2,2,3,3,3,3,4]`, what result do you want? Two repetitions?  or the count of two 2s and four 3s?  Please clarify your question.",
        "Every time a number repeats, any number. The counter variable should be increased by one.",
        "so again, what is the answer you want with my example?  4?  Because 2 is repeated once and 3 is repeated 3 more times for a total of 4?  Do you see why I asked to clarify your question?  It is completely unclear.  Give a *clear* example of what you want.  (and your code still doesn't run).",
        "Yes that is exactly it.",
        "So next time, include that kind of information in your questions.  give examples and explain how you want the result to look.  Also post code that can be cut-n-pasted and run.  Your example doesn't work and implies you manually typed it and didn't run it.",
        "I don't know what the problem is, but it's idiomatic to write expressions such as `*(sentence + a)` as the equivalent `sentence[a]`.  Your program would probably be more readable if you used that idiom.",
        "And `getLength()` seems to be just your own implementation of `strlen()`.  Are you not allowed to use `strlen()` in your work? Second, you have a `delims` string, but you only ever use the first character in it.",
        "This program cannot possibly run - there is no `main` function.",
        "You should be using a debugger to diagnose and fix problems like this.",
        "If this is a homework, please specify what C++ facilities you are allowed/not allowed to use.",
        "[See this link](https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list) for some help.",
        "This is not true, I use `[]` everywhere in my code and when rendering twig and I never had an issue with it.",
        "Where did you get this misinformation from?",
        "You should include your code in your questions. Otherwise is very hard for people to help you and they will down vote the question. https://stackoverflow.com/help/how-to-ask",
        "This is not a particularly hard regex to write. If you have tried and failed to solve this problem independently, please describe your latest attempt that has failed.",
        "Simply [A-z]{3}$",
        "@YuriyFaktorovich won't work since the first character of the pattern must be a 'd'",
        "What do you match in this \"foobardooo123dududu\"? It's not clear if the Char before `dXX` pattern is not a letter to make the pattern valid and how mutch char a valid pattern must catch to be consider a valid pattern..",
        "@Neb then I guess `d[A-z]{2}$`, the requirements are confusing.",
        "I'm voting to close this question as off-topic because it is about content licensing, not programming. Please contact your attorney for assistance in interpreting content licenses and how best to respect them in your jurisdiction.",
        "To begin with, I recommend you do some research about *emulating pass by reference in c*. To continue, what will the *new* elements of `img` be after the reallocation? Hint: they are *uninitialized* and can't be passed as is to `realloc`. Lastly, you should never assign back to the pointer you pass to `realloc`, in case `realloc` fails.",
        "This is **not** a 2d array. And the logic is flawed, first `free()` individual arrays that are no longer needed (if any), then resize your array of pointers, then allocate newly needed individual arrays and resize those that were there before. And of course, check for errors on **each** `malloc()` / `realloc()` call. Finally, modifying a local variable modifies a **copy**, you have to e.g. return `img` when you're done.",
        "And in general, \"*but it is not working.*\" is **not** a suitable problem description.",
        "`h` is not defined anywhere",
        "[Correctly allocating multi-dimensional arrays](https://stackoverflow.com/questions/42094465/correctly-allocating-multi-dimensional-arrays)",
        "@Lundin if resizing in more than one dimension should work preserving the contents, a real multi-dimensional array won't fit the bill.",
        "@FelixPalmen No, but the OP has a misconception that their code is allocating 2D arrays.",
        "This code doesn't make any sense. `*srcptr = &srcadr` sets the pointer to point at the address of `srcadr`, not to point at the absolute address `0x105fc080`. Furthermore, nobody can answer this question without seeing the variable declarations.",
        "Also, what does this have to do with embedded systems, smart pointers and void pointers?",
        "Is there a strong smell of an XY-problem in the air?",
        "Also, to begin with this code is incorrect for updating raw memory locations, since you don't use the `volatile` qualifier.",
        "Besides the other mentioned problems... What about just making a copy before you start modifying your pointer?",
        "\"What am I missing in this code\" is not a proper question. See https://stackoverflow.com/help/how-to-ask",
        "why do you think you are missing something?",
        "a call to `printMenu()` ...",
        "Well Im not getting an output from any of the if and else if statements, I was thinking probably I had to add on a \"System.out.print();\" But I dont know exactly what would go inside the parentheses",
        "It's not clear what you're asking. Do you want the user to be able to open the second app from the first? Do you want to turn the two projects into one somehow?",
        "Do you know the difference between == and === ?",
        "prompt will get a string and you are comparing number with a string. that's why your condition became false.  == checks if the value of the variable is equal. === checks if the value and type are equal.",
        "Possible duplicate of [Difference between == and === in JavaScript](https://stackoverflow.com/questions/523643/difference-between-and-in-javascript)",
        "For this, have you researched anything?",
        "Have a try yourself - there are many ways to do it. The only way to learn to program is by practicing. This is called a Caesar Cipher by the way, but I'd encourage you to try it on your own before searching. Incidentally, I assume that you realize that this is completely worthless as an actual security measure, right?",
        "Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation.  [on topic](http://stackoverflow.com/help/on-topic) and [how to ask](http://stackoverflow.com/help/how-to-ask) apply here.\nStackOverflow is not a design, coding, research, or tutorial service.",
        "I don't understand why people down vote. If question is not good or need some edits then they can suggest. I think this is valid question and needs solution. May be the question topic doesn't explain well. I apologize on that. But please help me on this. Thank You.",
        "Not sure how this is different than a lookup for your values [Red, Grey, etc.] or if you asking for a Custom View. Regardless from [What topic can I ask?](https://stackoverflow.com/help/on-topic) `asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic`",
        "Hi @MorrisonChang, I have edited the question. Hope this clarifies the problem.",
        "Not that much difference. Show what you've tried or what you've looked at with as much detail as possible. Right now it just sounds like you want someone to do the work for you.",
        "you have bad path to `autoload` file.",
        "It` s on the same level so  `require_once 'autoload.php'`",
        "Try giving absolute path instead of relative path, like require_once ABSPATH . 'autoload.php';",
        "Oh, remove the \"../\" before autoload.php",
        "Could you please post a copy of your code, rather than a screenshot. It makes it easier for people to answer your question.",
        "yes $f is an array",
        "What is the question? Please help others quickly see what you're trying to do, and help others with the same problem easily find the solution by rewriting the subject as a clear and concise question.",
        "Possible duplicate of [How to solve PHP error 'Notice: Array to string conversion in...'](https://stackoverflow.com/questions/20017409/how-to-solve-php-error-notice-array-to-string-conversion-in)",
        "`$body.= \"\\n\".str_replace('_', ' ', $key).\"\\n\".$f.\"\\n\"`  \n\nThe problem is trying to concatenate $f with strings.  \nYou could do that if $f was a string or a number, null, etc., but not with arrays.",
        "Possible duplicate of [how to read output of var\\_export into a variable in PHP?](https://stackoverflow.com/questions/933506/how-to-read-output-of-var-export-into-a-variable-in-php)",
        "How about you figure out the **minimal** amount of code that will demonstrate your issue, and post that? See [How to create a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve).",
        "hmm i cant delete some of them because it might be important to you to see :( But i added //comments there to emphasize the issue",
        "Welcome to Stack Overflow! \nPlease take the [tour](/tour), have a look around, and read through the [help center](/help), in particular [How do I ask a good question?](/help/how-to-ask) and [What topics can I ask about here?](/help/on-topic). Please reduce your example to a [Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve) and add the *complete* stacktrace/Error message you get.",
        "i updated it :) deleted unnecessary parts and i added //comments, the comments emphasizes my main issue",
        "okay ill just delete one more time",
        "it's short now? is that okay? sorry for the inconvenience",
        "Deleting lines arbitrarily to make your code shorter is not the way to create a [mcve]. Asking a question properly takes a reasonable amount of effort, not a quick fix.",
        "It;s okay if all of you dont want to answer, i already know ;) I akready said i add comments there and all. but thanks",
        "What is happening is that you are using `__getitem__` (namely, `[]`) with an empty series.  Pandas is interpreting that as a slice of the columns.  By using `astype(bool)` you are forcing Pandas to interpreting it as a row boolean slice.",
        "Please use the edit link on your question to add additional information. The Post Answer button should be used only for complete answers to the question. - [From Review](/review/low-quality-posts/17891873)",
        "And your question is...",
        "Come on mate, you need to format your question in a way that makes it easy for us to understand what you are wanting, and why its going wrong. Have a read of this: https://stackoverflow.com/help/how-to-ask",
        "Why not use a `dict` for this instead?",
        "Possible duplicate of [Python group by](https://stackoverflow.com/questions/3749512/python-group-by)",
        "Have you tried anything yourself yet? Any code you could share?",
        "Why tag it Python when it is Javascript?",
        "Yes, it's 100% possible. Good luck :)",
        "You're asking  as if it was something so special that has never been done before. Show us what you tried already and explain what issues you're having",
        "The operation you're talking about is called String Parsing and it cannot be accomplished with html alone. What's your final goal?",
        "Characters turn to objects",
        "I think you're looking for this\nhttps://stackoverflow.com/a/1186309/1187199",
        "Do you want to parse the input of yout field and get the javascript object of it ?",
        "You need to specify what programming language you want to use to do this. HTML is not a programming language so it can't do it alone.",
        "is it array or object?",
        "this is not array this is object",
        "show the code ...",
        "I used  _UNIQUEARRAY = _.countBy(all, \"wellUid\");",
        "@RahulJain Then just do `_UNIQUEARRAY[3412124577]`?",
        "_UNIQUEARRAY = _.countBy(all, \"wellUid\");   --> I used this lodash function to get the occurance of wellUid in object all. Mentioned lodash function returns an array",
        "`_.countBy` returns an object, not an array.",
        "then it should allow me to iterate viaindex. But it complains.\nI even tried _UNIQUEARRAY[3412124577]. Still it complains",
        "What have you tried so far ? any code would be great.",
        "please paste your code here",
        "Questions about cleaning up working code should be asked on [Code Review](https://codereview.stackexchange.com/).",
        "It's messy because you've got all this code in one sprawling *class-function-main-body-of-code-thing*. It's messy because your indentation is pure chaos. It's messy because you've got a lot of duplication and verbosity that could be trimmed down.",
        "I believe [CodeReview.SE] would be a much better fit for your question. However, make *sure* you read their guides on what they're looking for in a question before posting there: [A guide to Code Review for Stack Overflow users](https://codereview.meta.stackexchange.com/q/5777/25167), [How to get the best value out of Code Review - Asking Questions](https://codereview.meta.stackexchange.com/q/2436/25167).",
        "You don't want to commit useless files",
        "You don't always want to commit every file that has changed.",
        "Thanks guys. Flew over my head that.",
        "You just haven't come across or thought of a use case. If you read the docs carefully it might help.",
        "When you are under a sub directory, `git add .` adds only the files under and recursively under the current directory.",
        "Provide a [mcve] of what you've tried so far.",
        "We are not here to solve someone assignments. Let do it yourself.",
        "please show the code you have written and you have trouble with if you want an answer.",
        "`with url:` is a helper that will create the request for you with some default settings.",
        "In `URLRequest` you can put method (POST, PUT, etc. while with a simple URL, by default it will be a get), you can use bodyData (could be quite useful for POST params for instance), and other property you can set on a URLRequest.",
        "_And when it does go into insert mode, the cursor moves to the left instead of the right, so I always have to readjust it._ Are you using \"a\"?",
        "Start by learning to use `vim` without your mouse.",
        "Force yourself not to use the mouse! You will learn Vim's navigation shortcuts better that way. Also, Vim is designed to be inefficient, you're supposed to glue together lots of strange tricks to navigate files. This glueing of slow commands means Vim is more configurable, but harder to use than a modern editor.",
        "What do you mean am I using 'a'? I use 'i' to go into insert. How do I use vim without the mouse?",
        "Well, \"i\" starts the insertion before the cursor, and \"a\" starts the insertion after the cursor. [This cheat sheet](https://vim.rtorr.com/) might be handy!",
        "Also, `A` starts inserting at the end of the current line.",
        "Ok, yea that helps. Didn't realise 'a' is for insert on the right. Any other important tips I should know about?",
        "Yeah, don't ask non-programming questions on StackOverflow.",
        "@melpomene, I somewhat disagree. Vim is a tool used primarily for programming, which disqualifies the off-topic close reason (general usage)",
        "@ChrisForrence I disagree that vim is primarily a programming tool. I think it's primarily a text editor (which can be programmed and used for writing programs, but neither are the focus of this question).",
        "try https://vim-adventures.com/   for learning vim.  Learn to not touch your mouse or any arrow keys.",
        "Did you use vimtutor to start? It sounds like you skipped that thirty minute intro.",
        "@AndyRay vim is not designed to be inefficient, the opposite is true, it's designed (in a very different way then most editors) to be more efficient.",
        "Vim is a text editor, not a code editor. It's designed to glue small commands together to do simple navigation, like `10j`, `/word<cr>`, `Tf;;` etc, which are composable for doing large repetitive tasks, but intentionally inefficient for day to day navigating.",
        "What are you trying to make it do exactly? If a c# developer wants to help you they have to search for the js function atm.",
        "simply `var book  = new Book { Title = \"One World\"};` no library needed.",
        "@Ren\u00e9Vogt That's what I was thinking",
        "why would you need `_extend` for this at all?",
        "You should change your question to include example from https://lostechies.com/chrismissal/2012/10/05/extending-objects-in-underscore/ . Would make it clear you just don't want to set single property of an object, but merge multiple object's properties into single one. I will vote to reopen after you expand your question to be clearer.",
        "@Euphoric No, the is you mentioned is for the javascript world. Here I am discussing the problem in the .Net world. However, I am looking for a library in .Net world having the similar functionality, like extend in underscore, in javascript world.",
        "What about `x += 5; y += 5`? I don't think you'll do it any other way.",
        "What would be the benefit?",
        "This wouldn't even work in Python. WaiHaLees suggestion is a good way to obfuscate the code. Just don't do it.",
        "Regardless of if you can, you shouldn't. New-line characters are free, feel free to use them liberally!",
        "I smell a [XY problem](http://xyproblem.info). What's your actual issue?",
        "What is error E0137? Which line does it occur on? Copy the *exact* error message and show the exact code that causes it",
        "Also what exactly are you trying to achieve via `(RpMesh*)(this + 1)= newMesh;`?This will pretty much always invoke *undefined behavior*",
        "line (RpMesh*)(this + 1)= newMesh;\nThe C ++ expression must be a modifiable l-value",
        "i want to update (this + 1)",
        "You still haven't provided the necessary information (such as the error message). Also what exactly do you think `this + 1` is?",
        "this + 1 is not what you think it is",
        "you are updating the pointer instead of what it is pointing at! Add a * before the expression and also a * before newMesh if you want to copy.",
        "yes, i know that `this + 1` is `RpMesh*`",
        "No, you don\u2019 know.",
        "`meshId != NULL`? This is some really odd looking comparison to `0`...",
        "` void setMeshes(RpMesh newMesh { * (RpMesh*)(this + 1)= newMesh;}`\nseems to work",
        "\"seems to work\" does not mean it works. Undefined Behaviours often seem to *work* until you encounter an error that's unexplainable to you, because you assumed something *was supposed to work*",
        "what is the best way to update this?",
        "Probably redesign your entire structure relations in order to not invoke underfined behaviour. I'd start with using STL instead of manual memory management",
        "the redesign is gone",
        "remove last comma `'\".$_POST['no_hp'].\"',` <---",
        "@SimoneNigro No he can't. Please check again, its '\".$_POST['no_hp'].\"',\n      ' ')",
        "@AmitGupta He's correct. It would be much easier to see if the OP used a prepared statement.",
        "ok, right... use mysqli_error($con) for check the error",
        "Check error? Hmm... no error. I've change to mysqli_error($conn); then just refreshed the index.php reset the text box",
        "One thing I always do is to list the columns I'm inserting into, this helps in debugging and checking that I'm inserting the right value into the right column.",
        "This will reload the entire application, causing you to lose anything stored in the session, like user information, scope data, etc",
        "Not in session, but in memory. Session data should be stored with sessionStorage API.",
        "I can understand 2 dislikes, 3 dislikes, even 4... but 19? Come'n guys!",
        "`callback(err,null);` \u2013 There is no `callback` defined by your code. So the error message is very accurate.",
        "did you even TRY debugging this?",
        "It's even giving you the line number...",
        "Define callback function somewhere",
        "Your question is both too vague and too broad. Moe's answer is as good as any.",
        "Post the code that you have already tried.",
        "What have you tried so far that hasn't worked for you?",
        "And could you give an example of the output you're looking for?",
        "Did you even make an attempt to find a solution before coming here? Google has over a million hits on how to do this.",
        "Show code you've tried as a [mcve] please. Read [ask] on the way.",
        "You don't need two different cells.  Just have a single cell and alter it's state depending on if it is expanded or not.  Start out simple without any animations and then once that works you can add animations.",
        "Most of the time the compiler is right: RichTextBox does have a property Text, see documentation https://msdn.microsoft.com/de-de/library/system.windows.controls.richtextbox(v=vs.110).aspx",
        "yes it has but MS Visual Studio 2010 is saying that .text type of property doesnot exist.",
        "The WPF RichTextBox does not have a Text property. You'll have to set its [Document](https://msdn.microsoft.com/en-us/library/system.windows.controls.richtextbox.document(v=vs.110).aspx) property.",
        ".Text and .text neither exist",
        "Why do you assume that all files are text and contain human-readable content?",
        "Yeah, as Ken White stated, APK files are binary files. Binary is NOT human readable. Binary is just plain data stored as bytes. If you are doing this to learn C, stick with .txt files for now.",
        "Including screen shots is almost always a indication that your question is not suitable for stackoverflow. Expert readers want text that they can easily search in their browser. Use 4 spaces at the front of each line of code/data/error msgs OR highlight a block of text and use the `{}` format tool at the top left of the edit box to format as code/data/output. For more info see [editing-help](https://stackoverflow.com/editing-help) and [formatting](https://stackoverflow.com/help/formatting). Good luck.",
        "What behavior do you expect and why?",
        "Have you tried anything yet? What exactly was the problem?",
        "Im new to Python and I tried using many workarounds by googling but no luck. conn = ora.connect(\"HR\", \"oracle\", \"localhost/xe\")\ncur=conn.cursor()\ncur.execute('select * from employees')\ns = ','.join([ r for r in cur.fetchall() ]) -- Tried this. Failed.",
        "Answers would be helpful. Not down ratings :P",
        "please don't take it offensive but that is the 3-rd question already where you ask \"I need a regex \" and don't provide the slightest attempt to solve it on your own. This is not a store where you simply dump requests and people ought to jump and use their free time to help you....",
        "What about `&#.*?;` (non-greedy)?",
        "I'd bet good money you really only need to match numbers plus the letters A-F. G-Z will not be valid.",
        "Flagged for too broad, there are too many factors, also this type of question does not belong on SO.",
        "Need more information, technologies, environment, hosting, system resources, processes being run, purpose of site. Even then it will probably still be a far too broad question.",
        "Hi Omair, welcome to StackOverflow! As Sven said, this question is too broad and will likely be closed. Please check out the guidelines for asking questions on StackOverflow here: https://stackoverflow.com/help/on-topic.",
        "Why do you print `i` but then `&sum`?",
        "`&sum` --> `sum`",
        "`printf(\"The sum of the numbers are: %d\", &sum);` --> `printf(\"The sum of the numbers are: %d\", sum);`",
        "why are you printing the variable address ?",
        "With `%d` you should use the variable itself, not the pointer.. In this way you're printing `sum`'s address",
        "Need to use \\n for cleaner output.",
        "Also,there is no need to do this in a loop. sum of 1 to x is: sum = (x+1)/2",
        "Which compiler are you using? gcc and clang both emit a warning: `format \u2018%d\u2019 expects argument of type \u2018int\u2019, but argument 2 has type \u2018int *\u2019`",
        "There is a mistake in printf statement outside the loop.You print the address of sum '&sum' instead of sum value .Replace the '&sum' with 'sum' .",
        "What have you tried so far?",
        "I have tried numpy.isin, but it is not working because it checks all the elements of the first array.",
        "Why not `V[0] in M[0]`?",
        "Obviously, I could use a for loop. I want an answer which is fast (I mean performed in vectorized operations)",
        "For arrays : `(M==V[:,None]).any(1)`.",
        "That is awesome. Can you please edit so I will accept as correct answer?",
        "you should have to show us what you have tried?",
        "Welcome to StackOverflow! \nHave you tried anything so far? \nStackOverflow isn't a free code-writing service, and expects you to \n[try to solve your own problem first](http://meta.stackoverflow.com/questions/261592). \nPlease update your question to show what you have already tried, showing the specific problem you are facing in a \n[minimal, complete, and verifiable example](http://stackoverflow.com/help/mcve). \nFor further information, please see \n[how to ask a good question](http://stackoverflow.com/help/how-to-ask), \nand take the \n[tour of the site](http://stackoverflow.com/tour)",
        "what i actually meant was that coordinates of the csv file are exact originating points of the tweet. So i want to check weather what is the country that includes that longitude and latitude. For example, if i have 121.0523297,14.62194033 i need to check weather what is the country that includes that coordinates.",
        "You are looking for [*Reverse Geocoding*](https://en.wikipedia.org/wiki/Reverse_geocoding). Available, amongst others, through Google's [Geocoding API](https://developers.google.com/maps/documentation/geocoding/start).",
        "What have you tried so far?",
        "i just dont really know where to start. I guess it has something to do with sort but?",
        "Theres this wonderful thing called google that will find many results or tutorials that will give you an idea about how to do this.",
        "How about showing us where you're stuck?",
        "The main problem will be to set up the networking. Normally, a machine connected to some wifi will not be reachable from outside without some special configuration of the router.",
        "Can you show us what you have tried till now so that we can help a little.",
        "https://stackoverflow.com/help/how-to-ask",
        "you need to change something into your code. But you didn't show it, so that's all we can help with.",
        "`mysqli_real_escape_string`  is not going to  `secure the input`.",
        "Simply securing against threats we happen to have come across before isn't adequate. The function you're using is better than not attempting to do anything but it isn't enough to secure input for entry. Example: https://stackoverflow.com/questions/5741187/sql-injection-that-gets-around-mysql-real-escape-string/12118602#12118602",
        "check the comment under this answer:- https://stackoverflow.com/a/7748127/4248328",
        "Please reword your question and follow [SO Formatting Guidelines](http://stackoverflow.com/editing-help)",
        "did you event try it and see what it does?",
        "I did . It just had the '?' as an element. Is that it?",
        "so you didn't even have to ask here then",
        "Please don't manipulate the solar system...",
        "A DateTime object represents a point in time, not a duration of time.",
        "@BehradKhodayar : Yes agreed  :) !!! how can you get the format of the time greater than 24 Hours.",
        "actually this was the question from Jrealtime plugin... Do you heard  about  ?",
        "@prakashtank I would really hate a day longer than 24h !",
        "suppose if the single user gets login then the visit lifetime will be started",
        "@BehradKhodayar : Me too !!!",
        "@rajendiren:  but it we turn back to the question. please check the link\nhttp://php.net/manual/en/function.date.php",
        "`h  12-hour format of an hour with leading zeros  01 through 12`\n`H  24-hour format of an hour with leading zeros  00 through 23`",
        "so whenever user gets login time duration will start... so where as if user was logged in more than 24hr. it should suppose to show (for example 25hr) right? but showing like 1hr",
        "You can store the dateTime at his first visit, then calculate the difference from the current dateTime to show how many hours/minutes he is logged.\nhttp://php.net/manual/en/datetime.diff.php see first example.",
        "http://stackoverflow.com/questions/13559451/php-datetime-display-a-length-of-time-greater-than-24-hours-but-not-as-days-i",
        "possible duplicate answer",
        "Welcome to Stack Overflow! The full content of your question must be **in** your question, not just linked. Links rot, making the question and its answers useless to people in the future, and people shouldn't have to go off-site to help you. Put a [mcve] **in** the question, ideally using Stack Snippets (the `<>` toolbar button) to make it runnable. More: [*How do I ask a good question?*](/help/how-to-ask)",
        "Separately: Post code and error messages **as text**, not as images. Why: http://meta.stackoverflow.com/q/285551/157247",
        "Change `this` to `this.getContext()`",
        "sir thankyou very much ... sorry for my improper posting behavior ,",
        "What have you deduced from the question so far?",
        "Homework... homework..... YEAH!!",
        "http://idownvotedbecau.se/noattempt/",
        "If I'm not worng, a bit has two possible values (1 or 0), so you know that the key is 128 bits long, so it means 2^128 of possible combinations, now assume your computer can test 1000 keys per second, now divide (2^128)/1000 and you'll have your answer in seconds",
        "@LukeJoshuaPark \nif I have 16 bits I have 16! options to decoding code, ~~ 2^44 options... now how I should continue?",
        "If you had 16 bits (you don't) there would be 2^16 potential keys.  You actually have 128 bits, so there are 2^128 potential keys...  Getting there now?",
        "understood, thank you!",
        "@zaph: My personal computer is a quantum computer.",
        "Pick an arbitrary small amount of time per attempt, say at 1 attempt nano-second, now do the math. At 1 attempt per nano-second ~= 10^21 years. I suspect the instructor just want's you to do the math so you realize how secure 128-bits is. Note: The remaining existence of the Earth is about 10^10 years. Can you wait that long?",
        "@JamesKPolk With your quantum computer just divide by 2^64 (~2x10^20). Of course that is assuming a really fast quantum computer with very good error handling. ;-)",
        "JamesKPolk ,zaph thank you both",
        "What have you tried? Please don't just expect the SO community to answer a request for code if you haven't put in any effort yourself.",
        "I'm voting to close this question as off-topic because it's a zero-effort requirements dump.",
        "Answer is no, but why do you want a static method in the non static context?",
        "no you cant have static method in a non static context, static method belong to the class not the instance",
        "That does not sound like something you cannot simply try out on your own.",
        "@Pirate it was just a question on a examination which I did recently l. So can you have a non static method in the static context?",
        "Am I misinterpreting the question or something?\nI would say \"yes, you can call a static method from a non-static context\". Lets say you're in an instance method (a non-static context). You can definitely call a static method: `SomeClass.callStaticMethod()`. Or what is meant by `have` in the question? Am I incorrectly interpreting `have` as `call`?",
        "@Alderath you can call static method from non static method but can't define in non static.",
        "It doesn't make sense to talk about defining a method in a non-static context. You do not define methods inside other methods, so what does it really mean to define a method within a static or non-static context?\n\n@OP, I think it would be best if you clarified whether by \"have\" you mean \"define\" or \"call\".",
        "but you can define static members right. like static int a;",
        "Why on earth is this q getting a negative status? What is wrong with it?",
        "if you tried something and ask for help it will be good in SO",
        "it is not clear what you want so far.",
        "i am developing online food ordering app, if i select item name then print this item  Rate , Gst  from json then calculate according to quantity",
        "that depends on your existing code. You didn't show it.",
        "if  I Increase Quantity then automatically add rate and Gst ,how can possible",
        "There's no `contextlib.GeneratorContextManager`, and nothing can be done about it.",
        "One question per question, please.",
        "Please write out your question properly. You should give a reasonable description to post. \nif you question is to get the value of x-- -y, then it can be achieved by \nz = (x--) - y;",
        "it means nothing, x is not defined here",
        "This was all I found in my book. I've added image.That might help.",
        "@Shivam Tehanguria  x-- -y is the same as x --- y. :)",
        "What kind of code it is with <br> inside js code, could you please fix the script",
        "This is my [https://jsfiddle.net/renzf/ywzgpfbg/]",
        "Java !== JavaScript",
        "Show us the code!",
        "Welcome to SO. Please read: [How to create a Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) and also [How do I ask a good question?](http://stackoverflow.com/help/how-to-ask)",
        "can you give us your address (I'm kidding) so we can knock on your door, let us in so we can stand next to you in order to see your code? *sigh*",
        "*\"But I don't know how to access it.\"* - You're not the only one ;-)",
        "and we'll be back after this message from our sponsor....... *\"bye\"*",
        "I have added my code, please have a look at it. I know there may be some errors, because i am new to PHP.",
        "OK So where do you think $conn is hiding. Before getting into classes maybe you should start by understand variable scope http://php.net/manual/en/language.variables.scope.php",
        "How can I access \"$conn\" in my insertion function?",
        "@RiggsFolly They posted their code \"after the fact\" in order to avoid this duplicate I'll bet [Reference: What is variable scope, which variables are accessible from where and what are \u201cundefined variable\u201d errors?](http://stackoverflow.com/questions/16959576/reference-what-is-variable-scope-which-variables-are-accessible-from-where-and)",
        "Possible duplicate of [Reference: What is variable scope, which variables are accessible from where and what are \u201cundefined variable\u201d errors?](http://stackoverflow.com/questions/16959576/reference-what-is-variable-scope-which-variables-are-accessible-from-where-and)",
        "I knw it cannot be accessed anywhere except in that function. It has only local scope",
        "Well put it in a Class Property then",
        "Still I am searching how to access it. I tried using \"GLOBAL\" keyword also but not getting any output",
        "Tried tht too :-( @Riggs",
        "Never use globals in classes it destroys the encapsulation that is the reason for using classes",
        "oh thanks for the advice riggs :-)",
        "If I pass $conn as parameter to insertion function, Will it work?",
        "Possible duplicate of [Reference: What is variable scope, which variables are accessible from where and what are \"undefined variable\" errors?](http://stackoverflow.com/questions/16959576/reference-what-is-variable-scope-which-variables-are-accessible-from-where-and)",
        "The right tool to solve such problems is your debugger. You should step through your code line-by-line *before* asking on Stack Overflow. For more help, please read [How to debug small programs (by Eric Lippert)](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/). At a minimum, you should \\[edit] your question to include a [Minimal, Complete, and Verifiable](http://stackoverflow.com/help/mcve) example that reproduces your problem, along with the observations you made in the debugger.",
        "Welcome to Stack Overflow. Please take the time to read [The Tour](http://stackoverflow.com/tour) and refer to the material from the [Help Center](http://stackoverflow.com/help/asking) what and how you can ask here.",
        "Looks like someone is teaching you C with IOstreams. Before you head down this path too far, [get a good book](http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list) and learn the differences between C and C++.",
        "*Write a code which in a given linked list will delete elements with odd values* -- ok.  `std::iist<int> L;...L.remove_if([](int n){return n%2;});`  -- Any other requests?",
        "Read about [Constructors](https://msdn.microsoft.com/en-us/library/ace5hbzh.aspx) what you currently have is a method.",
        "What's your question? Also, OpenAccount is a Method, not a constructor",
        "Those aren't constructors, they're functions - do you want functions or constructors?",
        "Add another function with only 4 parameters. Or probably better, use default parameters",
        "Do you mean a function with different amounts of parameters?",
        "What are `AccountNrName1` and `AccountNrName2` supposed to be?",
        "sorry for the confusion, my method needs to return the asked strings and integers.",
        "Hi and welcome to the StackOverflow! \nHave you tried *anything*? Any examples? Or do you simply want someone to make it for you? :-)",
        "Please provide some your code which you tried and not successful with that. So it will be easy for someone to guide/help you. Or do you expect ready made code for you? :)",
        "It will run infinitely, check http://stackoverflow.com/questions/24278724/purpose-of-while1-statement-in-c",
        "You can use a debugger to find out whats going on.",
        "Try put the cin instruction in the loop to let the user a chance to update the commandInput value on each loop.",
        "Of course it runs infinitely. The contents of the loop keep checking the same variables, hoping that their values would somehow magically change, on their own. Of course, C++ doesn't work this way. There's nothing inside the `while` loop that will change the values in the variables; as such each iteration of the loop will always come up with the same results.",
        "Have you tried stepping through the code using a debugger?",
        "there is no `break` in your loop, so how do expect it to break? telepathy?",
        "`commandInput == \"invReport\"` this is not how you compare two strings.",
        "You `return` a value from `checkdata()`. That does ***not*** automatically `return` and abort the code in `changemode()`. You're not doing anything with the return value from `checkdata`. You're literally calling `checkdata` and then *unconditionally* call `gotothen`; each and every time.",
        "so basically return false will not work in this case ?",
        "please have a look at [how-to-ask](http://stackoverflow.com/help/how-to-ask)",
        "Can you, or rather, have you tried, spotting the colors?",
        "Whose code is this? Where did you find it?",
        "Not sure, but I totally just drew Abe Lincoln's head messing around with some of these variables.",
        "@HovercraftFullOfEels Sample code",
        "@Justas Tried, couldnt find anything",
        "are you using recyclerview?",
        "You have an empty  arrayList which has 0 items and You call the first item arrayList.get(0) . You should check  your list's size .",
        "it does not work is not a good explanation from a developer. What errors do you get?",
        "also it seems you need to pass your connection variable as a global variable in your filter table function",
        "Any error doesn't appeared.",
        "and also : $valSearch = $_POST['searchButton']; then echo it, what does it say ? and what about : $valSearch = $_POST['search']; ?",
        "`\"I'm not sure why its doing this.\"` What is it doing, are you getting a specific error message?",
        "How do you save and read bitmap to/from the DB?",
        "Your array are ever null?",
        "your  food.getImage()` returns null",
        "can you post your connectionstring",
        "@maSTArHiAn the connection string is  \n$conn = new mysqli($servername, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}",
        "and echoing $conn you get?",
        "Also. Does it matter that your `<a>` tag has no content? And that your `<table>` is missing the closing `</tr>` tags?",
        "@maSTArHiAn I get ( ! ) Catchable fatal error: Object of class mysqli could not be converted to string in C:\\wamp64\\www\\Homework3\\Column_details.php on line 18.",
        "yup so that's your problem.. fix the connection first",
        "@andrewsi NO it does not matter",
        "@maSTArHiAn - indeed. Except with no content inside the `<a>` , he's generating an empty tag, which won't actually appear on the screen",
        "Where are the heroes data coming from ?",
        "Isn't it the task of your tutor to teach you that? I mean, (s)he gets paid for doing exactly that, right...? Also, why don't you just take some time, google for something like \"C# if\" and spend some time reading...?",
        "Why not run it in the debugger and see.  Change variables.  Notice the effect.  Experiment. Predict.  That's how to learn.  Anything else is just plain lazy",
        "Well you're definately not going to learn other than _how to pass an exam_",
        "Yeah, surprising how many people who do not want to do their homework never ever found something using Google. It's like they are always given big state secrets to investigate...",
        "I suggest you read 5 minutes about Bootstrap and you'll easily answer it..",
        "You are definitely right but I am in a time crunch",
        "By Most :  Assigning specific class attribute values to elements",
        "We cannot just provide ready solution to you.",
        "Is there at least a lib that can help",
        "If you want `Mukesh` to answer your question, then as it personally, why are you posting here?",
        "You want it to instantly return back to its original position, or you want it to rotate back to its original position?",
        "@aishwariya I'd appreciate if you could avoid using caps lock. There is no purpose to it, and it won't help you for anything. Could you please also elaborate on what exactly you are calling the \"original position\"? Do you mean the **position** of your object, or the original **rotation** of your object? Because when I am reading your question, it seems more that you are talking about the original rotation of your object there.",
        "@aishwariya You are being discussed on [Meta](https://meta.stackoverflow.com/questions/349620/how-to-behave-with-a-user-repeatedly-pinging-me-in-comments) if you're interesetd to know",
        "@luska    here the cube is placed in a particular position and the position is fixed.just only the cube rotates I want it to come to its original rotation.please do Reply.",
        "I would recommend you to read this first https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/object-oriented-programming",
        "You have declared `Id` and `Tires` classes as _nested classes_ of the `Car`. But you haven't declared that every `Car` must have an `Id` and a `Tires` _property_, and this means that every instance of the `Car` class won't have an Id and a Tires. Is this what you want? Check [this article](https://www.codeproject.com/Articles/20628/A-Tutorial-on-Nested-Classes-in-C) for a tutorial on nested classes.",
        "what box? And show the code from your attempts.",
        "@MichaelCoker Sorry, now i added 2 image of the boxes. I have made no attempt because I do not know how to start",
        "Here at SO you need to make an effort of your own first, with the markup you intend to use",
        "@HardaChadi here's a starting point https://codepen.io/mcoker/pen/bWXvVX",
        "Despite the tag, this is not C++ code.",
        "Is this Pascal?",
        "Please edit your post with your build instructions.  For example, what compiler are you using and what are the parameters you pass to it.",
        "If this is Pascal or Ada, where are the `begin` and `end` pairs?",
        "What is the desired outcome for  `x = -123456`, please?",
        "`private void string` does not work! you need to remove the `void` if you want to return a value and make it compileable",
        "@DmitryBychenko in my case, its impossible",
        "import `OpenQA.Selenium.Keys` or replace `SendKeys(Keys.Enter)` with `SendKeys(OpenQA.Selenium.Keys.Enter)`",
        "If you read the error message on the screen and google it, you probably could have found the answer yourself.",
        "you're missing `return` in front of your recursion steps.",
        "You didn't ask a question.",
        "`binary(value,values,...);` should be `return binary(value,values,...);`",
        "That worked at last .Thank you guys for the correction!",
        "You didn't ask a question. And SO is **not** a code writing service",
        "Woops! You missed to ask a question! Please take the [tour], learn [ask], and come back with a proper [mcve]",
        "You forgot to ask a question...",
        "`$fh` is a filehandle, not a dirhandle (as the error message says). You can't `readdir` on a filehandle. What are you actually trying to do?",
        "@MattJacob: Warnings aren't enabled, so no error message.",
        "SO isn't a code-writing service; where's your implementation, and what's the problem with it?",
        "how to merge many csv file and get the output which is like 3.csv. Thanks so much.",
        "That's just your requirement again. We are not here to do your (home)work for you.",
        "If this is your first question, please read [ask] - you will have to provide more detail than *\"... it just doesnt work\"*.",
        "Sql Injection is not recommended as described [here](https://stackoverflow.com/questions/13484118/sql-injection-prevention-in-net)",
        "Hello and welcome. As Filburt says some more information would be nice. what's the problem? where is it? do you get an exception? what exception do you get? There's your +1. Enjoy your stay at SO.",
        "In your case the problem is quite obvious: You try to *insert* data by executing a *Reader*. Please take the time and read the documentation on [MSDN](https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.executenonquery(v=vs.110).aspx).",
        "Really sorry guys but I have 1hr left to finish my project so thats why i need your help the exception says invalid object name - It can't recognize my table..",
        "is that really ALL of your code?  seen to be reading data without asking for anything to be given to  you and creating an insert string without using it",
        "Next to all your obvious errors, I highly doubt that your table is actually called ``Bank1``. I strongly believe you want to insert a row with the ``ID = 1`` into the table ``Bank``. Naming a table ``Bank1`` just seems too odd.",
        "Possible duplicate of [Insert data to tables](https://stackoverflow.com/questions/24954871/insert-data-to-tables)",
        "That JSON object is invalid.",
        "If you want consultation or example code, try the documentation. If you have tried to implement something and you're running into a problem, post a question.",
        "I think you had not created a proper adapter to display your list..Please check your adapter class.",
        "that not the problem ! problem us with the Fetching of data",
        "[Under what circumstances may I add \u201curgent\u201d or other similar phrases to my question, in order to obtain faster answers?](https://meta.stackoverflow.com/questions/326569/under-what-circumstances-may-i-add-urgent-or-other-similar-phrases-to-my-quest)",
        "I can give you an idea: If you want something solved quickly - you have to pay for it. Hire a developer to solve your problems. If you don't want - improve your question, so it is easyer to understand what is wrong, and be patient.",
        "Tag the dbms you're using. (Some product specific constructions there...)",
        "You must mention your server but did you try with a ; at the end of each sentence?",
        "If you are using Oracle, a statement terminator, usually `;`, needs to be used at the end of each CREATE TABLE statement.",
        "##DONT SHOUT !!!!",
        "should be `int c[4][3] = {0}`",
        "A combination of `replace`, `len`, `left`, and  `ListLast` should do the trick.",
        "Possible duplicate of [My webpage won't let me scroll?](https://stackoverflow.com/questions/9406693/my-webpage-wont-let-me-scroll)",
        "Another one: https://stackoverflow.com/questions/24246914/website-wont-scroll-down",
        "please post ur xml code also full activity class",
        "maybe you are giving wrong button id. Post your xml file first.",
        "External code dumps are not appreciated here. I suggest preparing the [Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) that shows the problem. Show the input, the expected output, and the actual output as text *in the question*.",
        "`board[_i - 1][_j]`, etc. is not checking that it is in bounds.",
        "didn't my answer solve your issue ? I have seen that you have changed your code. If there is any other issue then, ask another question. It is not a way that, you change your question and ask in another question by editing your previous question",
        "Sorry,I didn't know it is important for you.:( :(",
        "Yup It is important for community. If anyone in the StackOverflow community follow your question, they might be misguided. And for us(who have answered your question), we have answered according to your first edit. Hence, it have a bad impact on followers who may implement our given codes. If My answer makes sense to you, then accept so that, followers of your question may be benefited. Hope, you will understand the issue.",
        "please read the question and answers https://meta.stackoverflow.com/q/309237/2315473",
        "At least use a typedef instead of a preprocessor macro. Don't \"define types\" like that.",
        "How are you trying to compile it ? what command are you using ?",
        "Vaviable and function names should be clear and meaningful. Write code for the next reader and to be easily understood, that will also reduce errors.",
        "what you did ??",
        "_I tried many of the code..._ Where  is your code?",
        "Show what efforts you have made the achieve the same?",
        "Show us whatever code you tried",
        "wait i will post the code",
        "What is not working? What errors are you getting in the browser console?",
        "I am not getting any errors, the autocomplete just doesn't complete anything... @StephenMuecke",
        "Are you getting brands from the server? You first need to debug the code and see if any items are returned from the server or not.",
        "@ChetanRanpariya seems like the method SearchSkies isn't called at any time when i debug it",
        "`SearchSkies` action method should be HttpPost. And you need to make request accordingly from AJAX. http://www.codingfusion.com/Post/Jquery-AutoComplete-TextBox-with-database-In-Asp-Net-MVC",
        "Are you able to ping to public ip from the machine where you run the client, if yes, you need to check if port where server listens is forwarded in router setting",
        "`server.sin_addr.s_addr = inet_addr(\"127.0.0.1\"); --> server.sin_addr.s_addr = inet_addr(\"0.0.0.0\");` this makes it bind on all interfaces.",
        "Note; server leaks 'newSocket' on each connection.",
        "remove `:` and `space` from last",
        "`rtrim(': ]') . ']'`",
        "try this `var_dump(rtrim($array[0],': '));`",
        "https://docs.python.org/3/library/datetime.html",
        "You create the print writer pointing to the system out stream. Or standard out or simply : the console. It is all there in your code. Just read all of the relevant javadoc.",
        "`#define PinOut1 ` ??? can you provide the line of the error at least?",
        "Java does not accept `#include` nor `#define`",
        "Coult also be that this is \"C\", I went to a workshop and tried a code(this code) out at home.",
        "I fixed it: New Code",
        "@CarlosHeuberger It's not Java, it's embedded C.",
        "@akshayk07 I just was wondering why this question was originally marked with the [Java] tag... before it was edited out.",
        "@akshayk07 It's not even C. It's Arduino's version of C++.",
        "@gre_gor I said embedded C, not C   -_-",
        "Please provide some sample data. I'm not exactly sure what you are asking.",
        "count is not part of base R: non reproducible/",
        "How did you define `DebtToIncomeRatioGroup`?  Is there a category you aren't accounting for?  I suspect the root of your problem occurs somewhere before the code you are showing here.",
        "I put the code before on the posting",
        "What happens at loan_data_10v$DebtToIncomeRatio= 0.15?",
        "You should look into the `cut` function",
        "Did you try stepping through your code, with a debugger?",
        "`string s[]={\"WSSS\"};` - array of one `std::string`, typo.",
        "Some questions are so hilariously poorly written it'd be a shame to edit them.",
        "Do you really want boths `if`s in there or are you just asking why the second doesn't work?",
        "`if(s[i] == 'W')` s is an array of strings not just an array of characters so the first element is a string: `if(s[i] == \"W\")`",
        "there is no difference in this respect. not that is THAT hard to test out. :(",
        "@yivi : Please speak clearly and answer my question.",
        "What part of my answer wasn't clear enough? Please do elaborate and I'll do my best to make it clearer. And aren't you able to create two files and try it out by yourself? It would take about 10 seconds.",
        "@yivi : If you could answer my question by creating different files and creating a demo for \"include\" and \"require\" both it would be really great for me to understand the concept better and also in clearing my doubts. Thanks. Waiting for your full-fledged answer.",
        "Stack Overflow is not a code writing service. You can write the test yourself. Thank **you**!",
        "@yivi : I am not asking you or anybody else to write code for me to perform some task. I just requested you to create a demo program for understanding purpose of the concept. You are taking me wrongly my friend. I know that \"Stack Overflow is not a code writing service\". It's been developed to help software developers' in their issues. I'm requesting the help only through demonstration programs if possible. I'mo not asking to write code for me. Thanks.",
        "duplicate? http://stackoverflow.com/questions/2418473/difference-between-require-include-and-require-once",
        "@yivi : If you are not interested in giving answer to my question please don't use bad and offensive words for it and keep one thing in mind you are not the authoritative person to comment on my question for it's deletion. Anyways you can't even answer my question as you don't look like a professional programmer. You just mind your business. Thank You.",
        "@user2839497 it's not possible to show you code as they are both exactly the same there is no code that would show you anything different like you demanding to see i have shown you the C++ code that shows quite clearly that they are handled exactly the same why there is no execution difference only on the loading of the file.",
        "@MartinBarker, it's not even the first time he asks the same thing: http://stackoverflow.com/questions/41144882/does-it-throw-fatal-error-if-included-file-contains-fatal-error-in-php  I'm afraid you may be feeding a troll.",
        "Down voting for the following reason:  This question is easily answered by creating a file with a syntactical error then doing an include and a require of the file to determine the resultant behavior therefore answering your question.  Asking someone else to do so for you is not what Stack Overflow is for.\n\nSecondly, the answer to this is already clearly documented in the existing PHP documentation.",
        "[Please Refer this](http://stackoverflow.com/questions/2418473/difference-between-require-include-and-require-once) It has been answered Previously. http://stackoverflow.com/questions/2418473/difference-between-require-include-and-require-once",
        "http://stackoverflow.com/questions/2418473/difference-between-require-include-and-require-once It has been answered Previously. [Please check](http://stackoverflow.com/questions/2418473/difference-between-require-include-and-require-once)",
        "Please see the documentation https://msdn.microsoft.com/library/ms178592.aspx",
        "https://msdn.microsoft.com/en-us/library/ms178592.aspx. About half way down",
        "so basically this thing Type specification Represents\nd or i Signed integer\no Unsigned octal\ns String\nu Unsigned integer\nx or X Unsigned hexadecimal\n?",
        "any idea what is an Unsigned octal ? and isn't there a placeholder that doesn't care if it's a char or an int or whatever? like c#?",
        "This is just a lazy post. Little to no research done. That you ever coded before? C, C+? How does the op not know that RAISERROR enables the user to mimic the PRINT command in C++ or the COUT command in C#? Do research instead of wasting our time and yours.",
        "Two percent of which? Anyway just calculate the difference and assert its absolute value is smaller than the number you want.",
        "Are these numerical values, or just any objects?",
        "Implement your own `compare` function that will return `True` or `False` and use the `unittest` built-in `assertTrue` (given that the built-in `assertAlmostEqual` won't be of help in this case).",
        "Possible duplicate of [Is there a way to use Python unit test assertions outside of a TestCase?](http://stackoverflow.com/questions/18084476/is-there-a-way-to-use-python-unit-test-assertions-outside-of-a-testcase)",
        "Assert two values `tc = unittest.TestCase('__init__')\n\ntc.assertEqual(a,b)` [Reference](http://stackoverflow.com/a/18084492/452708)",
        "std::set does not have const operator[] overload: user .at() function instead",
        "You have to overload `IntSet::operator[]` because you want to call `operator[]` on it.",
        "Operator overloading is not permitted in any form. Nor can I change the class method declaration or parameters.",
        "@JeffreyDilley you explicitly said that you looked into overloading operators, now you tell us it's not allowed. Voting to close this question because we can't wait and give answers just for you to successively reveal game-changing info. Ask a complete question.",
        "\"Regardless, the program must not override and operators to start\" was posted in the original question. I'm asking about the errors, given that I can not override operator.",
        "is `setArray` a member variable?",
        "@StoryTeller, yes, private class variable.",
        "@JeffreyDilley so if this is a central restraint, why isn't it in there anymore? And even so, if you mustn't implement something, why do you still use it?! Totally zero-value question.",
        "It only means something to the person who wrote it.There is no universal definition.",
        "`likes` is just a self-defined property name inside a JavaScript object, no keyword. Same for template, that references a function defined earlier. Both are *no* keywords in JavaScript.",
        "They aren't keywords. `likes` is a property name on the object and `template` is the name of a function.",
        "what is your question? If you dont edit soon, good guys here will close your question. So describe.",
        "Have you tried it yet? Or just want an opinion? It is possible to have both in same controller..",
        "The hard part here? being me! Yes, I'd like this translated to Swift, from Objective-C. I don't always believe the documentation, and it's not always up to date. @matt",
        "I see this part, as well as you... https://developer.apple.com/reference/coreimage/cifilter/1438145-filternames, the difference is that I don't know how to turn that into working code, nor where to write it to get an output. @matt",
        "Ok, @matt, but how do I change the documentation's \"code\" into ACTUAL code?",
        "You have 126 previous questions on Swift. How can you be claiming to be so ignorant swift basics as calling a method?",
        "@Grundwaldeatsacoelacanth I can't make this \"code\" work, no matter what I do. I don't know where an output goes. I'm...",
        "post what you have tried",
        "@matt does \"nil\" in your example mean \"every single category!\"",
        "@matt, no, it means I have a very hard time translating method signatures into actual code. A VERY HARD TIME!!! Which might well mean the same thing, or that I have enormous trouble with all programming languages and all documentation of all languages. If method signatures and their hieroglyphics means something to you, good for you.",
        "Trying something and it giving the desired result doesn't mean it's doing so for the reasons I'm presuming. I'm having to presume \"nil\" means ALL categories because... well nothing's ever explicitly explained, is it...",
        "And, without knowing all the possible filters, how could I determine if \"nil\" is giving me ALL the categories of results? My gut feeling is that \"nil\" would give an output of all filters that don't belong to categories. @matt",
        "@dfd the answers to all your questions are in my original question, the comments, and via a search through my SO answers and questions. A question to you... does this question, in your opinion, need a MCVE?",
        "Yes. What have you tried? Why are you refusing to show how you attempted to translate Objective-C to Swift? And if you have, what *exactly* is the issue? Give me something I can reproduce! @Matt an be... blunt to the point of hard to cope. But you extended things - your OP (is it new? I was writing a comment when it suddenly turned into an answer that now is a screenshot of the OP) - to the point of getting personal in your OP. **That's not a good question.** Worse, it *still* shows no code whatsoever.",
        "Translating method signatures is a mostly mechanical task, and you can get the documentation to do a lot of the work for you since you can switch it back and forth between Objective-C and Swift. People are down-voting you because they don't like being asked to do such \u201ctrivial\u201d\u00a0work. Based on [your history](http://stackoverflow.com/users/2109038/confused?tab=questions&sort=activity&page=4), you've been learning Swift for over two years at this point. [It's time for you to learn some Objective-C](https://twitter.com/rmayoff/status/746873762616750080).",
        "Comments are not for extended discussion; this conversation has been [moved to chat](http://chat.stackoverflow.com/rooms/134914/discussion-on-question-by-confused-check-available-filters-in-ios-core-image-v).",
        "@dfd  it wasn't Confused who edited and deleted the rant.",
        "Show us what you've tried.",
        "*20-position array on a random* ? something like `int[] array = new int[20]`? so far, what you've done? i can only think of iterate several times and generate some random integer then modulo it with 20, if the int[result] empty, put it there, otherwise reroll the dice..",
        "`originalArray.Concat(originalArray).Shuffle().ToArray();`. Then simply look up algorithms to shuffle a collection.",
        "It is not clear what you are trying to do. Are you generating random indexes? Or random contents? \n\n\nMoreover, generating 20 random numbers for an array cannot slow down your program unless you are going in really huge loops. We can't help you unless you show us what code you have.",
        "http://meta.softwareengineering.stackexchange.com/questions/6166/open-letter-to-students-with-homework-problems",
        "I'm voting to close this question as off-topic because homework questions have to show what you've tried so far.",
        "Okay guys,I reedit it.Sorry for not asking something well explained.And it's not a school's project,it is a project I'm trying to do for my own.Thanks.",
        "Post your code ?",
        "Please edit your question to post the [minimal code that reproduces the problem that you're asking about](http://stackoverflow.com/help/mcve). Note that a lot of us want to help you, but please don't consider StackOverflow as free coding service. Don't just ask \"I want to make this, how can I make this\". Anyway, no hard feelings, and welcome to StackOverflow :)",
        "I'm a little rusty on border-radius but it does look possible: border-radius: 200px 0 0 200px/ 200px 0 0 200px; seems to give good result on a small rectangular div",
        "Related http://stackoverflow.com/questions/16388078/is-a-concave-border-radius-possible",
        "You can try to use `clip-path` in css.",
        "I would set that as a `pseudo element` of the containing element, with an `overflow: hidden` set, then style the `pseudo element` with `border-radius` properties and set it to `position: absolute` to take it out of the flow of the document and circumvent the `pseudo element` effecting the proportions of the containing parent element. This means the parent element will need an explicit width and height values set, otherwise it'll just collapse in on itself as though the `pseudo element` never existed.",
        "What makes you sure it isn't possible?",
        "You just clobbered the value of `days` with a **return code** from `scanf` function.",
        "What about the documentation of `scanf` is not clear?",
        "Time to read the man page, surely?",
        "welcome to stackoverflow, first of all this is not the proper way to ask a question, I invite you to take a look at [SO help center](http://stackoverflow.com/help/how-to-ask), secondly please post your XML code so we can provide you the needed help",
        "Possible duplicate of [Buttons not visible on the application. What's wrong?](http://stackoverflow.com/questions/43017289/buttons-not-visible-on-the-application-whats-wrong)",
        "this is not the proper way to ask a question",
        "If your code works and you're just looking for peer review, you should post on [codereview.se] instead. This site is for questions about problems you're having, not *Can you take a look at this for me?* questions.",
        "You declared 9 variables rather than some kind of array or structure and that forces your code to have lots of duplication all through it. When your code starts to look like it's pieces have all been copied/pasted, that's an indication that you've done something wrong.",
        "You're lucky tic-tac-toe only has 9 positions.  Learn to use arrays.",
        "\"You get to this section by winning.\" Pah. Study the classics. [\"The only winning move is not to play.\"](https://en.wikipedia.org/wiki/WarGames)",
        "For Windows Forms, check out [Graphics.RotateTransform](https://msdn.microsoft.com/en-us/library/a0z3f662(v=vs.110).aspx).  Note that it expects degrees, not radians.",
        "And you're pretty sure it's not possible to do large numbers of things in XAML, because you're a XAML expert.",
        "Possible duplicate of [Use Ellipse with origin in the center WPF](http://stackoverflow.com/questions/19665022/use-ellipse-with-origin-in-the-center-wpf)",
        "You're getting negative feedback because this is something you can research yourself.",
        "Possible duplicate of [Java Constructor and static method](http://stackoverflow.com/questions/13803032/java-constructor-and-static-method)",
        "Dont post links to external sites containing your code. Most SO users will not even bother to follow that link. Rather paste your code right in the question!",
        "`x1` would be `6`",
        "Useless question .... but the answer is 6.",
        "`+` and `-` have the same precedence, but the `++` prefix/postfix operators have higher precedence than `+` and `-`. See [the table here](https://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html). You also have to keep in mind that expressions are evaluated from left to right.",
        "People, quit burning your rep to down vote this question.",
        "Try it here and let us know: https://ideone.com/",
        "@ChristophGrimmer-Dietrich You don't lose rep by downvoting questions. Although, I agree that -8 is excessive.",
        "That code seems pointless.\n\nIt's going to yield strange results.\n\nSwift no longer has the C-style `for (;;)` construct, so you'll have to build that with a while loop.\nThis smells like a homework assignment to me. Is it?",
        "Related: http://stackoverflow.com/a/42662061/1630618",
        "First please understand concept of Client side code and server side code. Jquery/Javascript can not take place of PHP.",
        "What have you found out yourself? What does your C book say? Online tutorials? Your compiler? Anything? And how is that related to compiler construction? (and it is not gcc specific).",
        "Adjacent string literals get concatenated. You could've looked it up.",
        "It seems that you tried to send email to an IBM sales representative, but by mistake posted to Stack Overflow instead.",
        "@JJJ you're absolutely wrong.",
        "@JJJ please, take off your unreasonable down vote as well.",
        "I suggest you edit your question to be more clear about what you're asking.",
        "Please see [this](https://stackoverflow.com/help/how-to-ask) first",
        "asking someone to do some code for you is NOT how StackOverflow is intended to be used. Show your effort first.",
        "try this http://php.net/manual/en/function.ceil.php",
        "use ceil function in PHP. http://php.net/manual/en/function.ceil.php",
        "This question does not show any research effort.",
        "I just googled your exact question and found this https://www.google.com/search?q=round+number+in+php&ie=utf-8&oe=utf-8",
        "Duplicate of [How do I round a number up in PHP?](http://stackoverflow.com/questions/257032/how-do-i-round-a-number-up-in-php)",
        "Have you tried anything??Post what you have done until now so we can help",
        "Are you not using generics ? Why are you having multiple data types within the same arrayList ?",
        "What's your actual question?",
        "Try something yourself and ask question if your program doesn't work. Don't just simply ask entire program",
        "@RahulDevMishra these could be Strings or Characters",
        "yes off course what you want to do? can you add sample input & output",
        "https://stackoverflow.com/help/how-to-ask",
        "what you not understand?",
        "I'm voting to close this question as off-topic because it is not about programming as defined in the [help] guidelines. (It's also potentially asking for legal advice, depending on the jurisdiction where the poster resides, and this is not a legal advice site.)",
        "I'm voting to close this question as off-topic because it's not directly about programming or coding.",
        "`std::string::npos` it is just scope resolution saying `nops` is from `string` scope and the `string` is in `std` scope.  And `size_t count(0);` isn't a syntax error ??",
        "@SJayesh No, `size_t count(0)` is not a syntax error. It initializes the `size_t count` to the value `0`. Think of what it would mean if instead of `size_t` you had a user-defined type (let's just take vector, for example). `std::vector<int> myVector(0)` is not a syntax error.",
        "@Justin , yes, got it :). And `size_t` is just returntype userd for sizeof()",
        "You forgot to assign your variable: `link = link.Replace(\"%2f\", \"/\");` and `link = link.Replace(\"%3a\", \":\");`",
        "Replace works. There are dozens of duplicate questions already. Another one was asked today",
        "What means \"doesn\u00b4t work\"? Please be more specific on what you\u00b4ve tried and what you expect to get and what you get instead.",
        "*\"it did not work\"* - extremely poor problem description. Please read [how to ask questions](https://stackoverflow.com/help/how-to-ask)",
        "@PanagiotisKanavos there are so many duplicates I cannot even decide which one to mark",
        "You'll need to provide more detail that that.  How about examples?",
        "Thank you so much ....e.g. Word \"cat\" ,shuffle like \"cta\",\"atc\" and so on ... second input string suppose \"tac\" in case if matches with any of the random shuffle string return in boolean.",
        "Do you mean you want to find if input word 1 is an anagram of input word 2?",
        "Yes if word 1 is an anagram of second srting",
        "\"The article element represents a complete, or self-contained, composition in a document, page, application, or site and that is, in principle, independently distributable or reusable, e.g. in syndication. This could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment, an interactive widget or gadget, or any other independent item of content.\" A `div` is just a generic block element with no real semantic meaning. `article` is more specific and semantic for \"article\" content https://www.w3.org/TR/html5/sections.html#the-article-element",
        "Are you just trying to get the bytes of a string in ASCII encoding?",
        "https://developer.apple.com/documentation/swift/string/1690799-data",
        "-> use when you try to call smt from pointer to struct\n. when you create object and call",
        "If you can't find any difference, try replacing one with the other without changing anything else, and see if your program still compiles :-)",
        "There is literally no code where those two things have no difference. One will always fail to compile",
        "What does your data look like? What does your struct look like? Could you give a minimal example?",
        "Highest down-vote of the day ? :(",
        "What does the text book tell about these operators?",
        "Try Google first, then come back to StackOverflow.",
        "before google i think you need a good android book",
        "Yeah you are guys are....   I m noob...   But tell me how can I master in android",
        "please post text instead of images, much easier for us to see the question. Also, error message seems clear to me. Your setting is a string instead of a Boolean.",
        "[How to debug small programs](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/) - start by reading the error message carefully.",
        "`x -= 128;` is it?",
        "@Jai Nope, I'm trying to shorten `x = 128 - x`",
        "So i guess that is the only way to subtract it.",
        "@Jai Yes. `x` is always smaller than (or equal to) `128`.",
        "Where did this error come from? What was your code? What kind of interpreter are you using",
        "My compiler threw an error. No code found. Please post your code an error",
        "Welcome to StackOverflow! Please read the topics in [Help Center > Asking](https://stackoverflow.com/help/asking). Your question is in danger of being closed if you don't improve it.",
        "print (\"Welcome to the gaming quiz. All of your answers in the quiz must be all lowercase, include spaces and be spelt right\")                           \nprint (\"Question 1..\")\nx = input (\"What Call of duty was released in 2015\")\nif input != x:\n    print (\"Sorry that was incorrect. Better luck next time\")",
        "thats my code using python 3.6 edited by idle",
        "You have two `print` functions on one line.",
        "no sorry thats just  the way it copy pastes you can see the screenshot i linked in the original question",
        "I'm talking about the screenshot",
        "sorry but even after i fixed that it still doesnt work",
        "sounds like you have some non-visible or hidden `NULL` bytes in your code, similar to the behavior in this question [Python: source code string cannot contain null bytes](https://stackoverflow.com/questions/31233777/python-source-code-string-cannot-contain-null-bytes) but of course on Windows. You might want to try copying the text from IDLE into another text editor that can view hidden/non-ascii encoding. Inspect for and remove any unusual characters then paste the \"cleaned\" text back into IDLE and try running the code again. My guess something near that Grey block between the print and `x`",
        "Also you could press [edit](https://stackoverflow.com/posts/45065685/edit) on your question and `copy`/`paste` the code into your question and let us view the ***text*** to check for hidden characters",
        "What is a \"leastCommon\" string? I have a vague idea of what you're trying to do, but you haven't provided enough information to turn them into actual \"rules\" or code.",
        "What have you tried yet??",
        "`\"\\\\\\\\eZREUApp01.EU.abc.com\\\\eZR_Data\\\\ALSTOM GIS\"` is not even present in your input list of strings. How can it come in output?",
        "Can you show your code? It doesn't have to be perfect.",
        "Even if we would understand your requirement, what have you tried yourself?",
        "Have a look at https://stackoverflow.com/questions/13509277/find-a-common-string-within-a-list-of-strings",
        "The least common string is the string itself.",
        "`was trying to separate admin and fronted` What does it mean ?",
        "Learn this document https://laravel.com/docs/5.4/blade",
        "#Md. Abutaleb thank you for reference. but i have checked it.",
        "#Sagar Gautam , that means \" i tried  \".",
        "yes, it is possible, what rdms?",
        "@IlyaBursov rdms?",
        "https://en.wikipedia.org/wiki/Relational_database_management_system",
        "@IlyaBursov Oracle",
        "pl/sql is language, used by Oracle RDBMS",
        "http://www.oracle.com/technetwork/issue-archive/2013/13-mar/o23plsql-1906474.html",
        "@IlyaBursov That doesn't sound like it would work then: \"If the SELECT statement identifies more than one row to be fetched, Oracle Database will raise the TOO_MANY_ROWS exception.\"",
        "`Using the Cursor FOR Loop`",
        "@IlyaBursov Well, that's exactly what I was looking for!  Sorry I didn't recognize it right away - I'm trying to fill in for our usual Oracle expert, and I'm only really familiar with querying and simple SQL programs.",
        "Please make a [Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve) and show the coding attempts you already made.",
        "please add your code, what you have tried?",
        "Please read how to ask question.",
        "Welcome to StackOverflow! Please take a look at the [tour](https://stackoverflow.com/tour) to learn how this site works, and provide us with at least a [Minimal, Complete, and Verifiable Example](https://stackoverflow.com/help/mcve)",
        "Use a debugger.",
        "What is the max index for an array of 24 elements? What will the max index be in a loop like `while (s <= 24)` where `s` is the index?",
        "dont know how on visual studio",
        "as in maximum temperature",
        "@BURNEDWATER -- *dont know how on visual studio* -- So you didn't see \"Debug\" in the main window of Visual Studio and wondered what it does?  Or hit `F10` on a successful build of your program?",
        "@BURNEDWATER Using a debugger is an essential skill for any programmer. It's very easy with Visual Studio, a quick Google search will give you tons of resources to guide you.",
        "@BURNEDWATER Visual studio has integrated debugger. Search for online tutorials on how to use it.",
        "What is the exact question you are asking, besides: please help with my homework?",
        "guys there is no error copy the code and use it to see my problemhttps://stackoverflow.com/users/7359094/fran%c3%a7ois-andrieux",
        "Google: 'How to debug small programs'. Read and implement.",
        "@BURNEDWATER -- You mean there are no *compilation* errors, not runtime or logic errors.  Just because your program compiles without any syntax errors doesn't mean your program is free of bugs.  Also some advice -- instead of 24 number, try instead something much smaller, like 5 numbers.  That way it will be much easier for you to see where your program goes wrong.",
        "DUDE there is not a single error there is no errors i used the debugger and the compiler and there is no error",
        "what else ?? @SergeyA",
        "@BURNEDWATER Debugger **doesn't** show errors on its own. You are supposed to **step through** your program, while watching the values of the variables, to figure out where the code functionality deviates from your expectations.",
        "No error?  What about 'while (s <= 24)' and then 'if (temp[s] < max)' ?  The last valid index of temp is 23 !  Debugger!!!",
        "If you had stepped through with your debugger AND used a smaller, easier-to-follow top limit as suggested much earlier by @Someprogrammerdude, your would have spotted many errors.",
        "You have many, many errors that you should have seen when running under your debugger.",
        "Do note that `void main()` is an error.  `main` **must** return a `int`.",
        "Please read [Under what circumstances may I add \u201curgent\u201d or other similar phrases to my question, in order to obtain faster answers?](//meta.stackoverflow.com/q/326569) - the summary is that this is not an ideal way to address volunteers, and is probably counterproductive to obtaining answers. Please refrain from adding this to your questions (this is likely to be one reason why you got so many downvotes).",
        "https://www.google.com/search?q=javascript+hello+name",
        "_\"i've been stuck on this\"_ \u2013 what have you tried so far? What problem(s) are you facing?",
        "What do you mean by stuck? Do you understand your code at all? Take a [tour](https://stackoverflow.com/help) for more information on how to ask a question.",
        "\"Any help would be appreciated.\"\u00a0\u2013 Help with *what*? What is the code you are having trouble with? What trouble do you have with your code? Do you get an error message? What is the error message? Is the result you are getting not the result you are expecting? What result do you expect and why, what is the result you are getting and how do the two differ? Is the behavior you are observing not the desired behavior? What is the desired behavior and why, what is the observed behavior, and in what way do they differ? Please, provide a [mcve]. [so] is not a \"write-my-code-for-me-service\"!",
        "No. Probably.  You should give up and leave your competitor alone unless you like jail time.",
        "@GameMasterHacker I would have figured with a username like that you would already know how!",
        "People don't want you tracking their IP. Let me know your company name so I can avoid you and your shady practices.",
        "I hope I did not offend anyone by asking this question. I am not planning to do anything \"nefarious\" with the IP addresses. This is simply for analytical purposes to find out how much traffic is arriving on my competitor's website and also their geographic location so that I can narrow the range of my marketing to the required regions. I suppose i'm looking for something similar to google analytics. Short of using \"Malware\" which I believe is unethical. Would it be possible to acquire the IP addresses through a registry? (for example, if my competitor and I share the same client information)",
        "\"Is there a better approach?\" questions are not a good fit for Stack Overflow. You're better off writing some code yourself and posting it to [Code Review](http://codereview.stackexchange.com).",
        "now a days every task related with polling or long polling is considered a bad practice... you should take a look to some listeners for that...",
        "@\u03a6Xoc\u0119\uc6c3\u041fepe\u00fapa\u30c4 Could you elaborate ?",
        "have you tried using `MAX`? [Here](https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions085.htm) is a link that will help you get started if you're not familiar.",
        "Is that a joke? I already did that .. Using sub query now i want it to be solved through single or nested query   read it carefully.... So max over partition by i hv done that  logic...",
        "Also, do you make a habit of insulting people who are trying to help you? How does that work out generally?",
        "First of all i got the solution and  i'm not insulting him, just telling him to read my q once again  ...",
        "@apc I think the -4 score on his question answers yours...",
        "Let's make that -5.",
        "In addition to the immediately downvote add at least a Text with \"Hello Mr Yve, please let us know what you've already tried and show us some example code you wrote. We are not a Code Writing machine and are here to help, not to solve your homework or complete your customer desires.\"",
        "any attempts from you? Did you try anything?",
        "Have you tried anything so far? Your question is too broad - add more details to it. Take a look at this for example https://stackoverflow.com/questions/2938942/file-explorer-java",
        "Note that assets are not files on the device. They are files on your development machine.",
        "Well, they are actually files in your app's private space. In facts, you can still get them on a device (i.e.: fonts, audio files, whatever file you wouldn't put as a standard resource - in other words, an alternative to using raw).",
        "Well the idea is,  I have some files organized in some folders my objective is to find a way to browse to these folders and open the files inside them",
        "You can do it like you would implement a normal file browser. List the directories. List the files. Put all in a listview.",
        "thank you Greenapps",
        "Have you tried searching for \"object recognition\" on http://pypi.python.org ?",
        "@Dalen, Thanks, I am going to try it.",
        "_Questions asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic for Stack Overflow as they tend to attract opinionated answers and spam. Instead, describe the problem and what has been done so far to solve it._",
        "Please move your code and everything to here instead of putting a link",
        "public class VendingMachine {\n\n    public int canCount;\n    public int tokenCount;\n\n    VendingMachine() {\n        canCount = 10;\n       tokenCount = 0;\n    }\n\n    VendingMachine(int cans) {\n        canCount = cans;\n       tokenCount = 0;\n    }\n\n    public void add(int cans) {\n        canCount = canCount + cans;\n    }\n\n    public boolean insertToken() {\n        if (canCount <= 0) {\n            return false;\n        } else {\n            canCount = canCount - 1;\n            tokenCount = tokenCount + 1;\n        }\n        return true;\n    }",
        "public int getCanCount() {\n        return canCount;\n    }\n\n    public int getTokenCount() {\n        return tokenCount;\n    }\n\n}",
        "Edit your question and insert your code there, it's not readable in a comment...",
        "What do you mean by \"not working?\" What tests did you run? What's the output?",
        "`javascript` > `java`",
        ".Java != Javascript. They're two entirely different languages. They're not the same just because they start with the same letters, any more than a *car* and a *carrot* are the same because they both start with *car*. Add just the tag for the language you're actually using. If you don't know which of the two you're using, stop trying to write code until you figure it out.",
        "What's your `main` method looks like? Add input and expected output",
        "I'm going to guess in your `main` method you created a `VendingMachine` with 20 cans (or 10 cans and `add(10)` cans) then `insertToken()`x2. There's your output.",
        "It's because of `machine.add(10)`. Either delete it or rewrite your expected count.",
        "Why do you expect `tokenCount` to be 0 in first place?",
        "here is my teacher's requirement for the code:Provide two constructors for the VendingMachine class:\n1) A default constructor, VendingMachine(), that initializes the vending machine with\n10 soda cans\n2) A constructor, VendingMachine(int cans), that initializes the vending machine\nwith the given number of cans\nBoth constructors should initialize the token count to 0.",
        "It does what it's supposed to do.",
        "I'm just trying to figure out what correction should I make in order to let the token count to be 0.",
        "In what scenario? If you're trying to simulate a vending machine, I guess each can should have a price, and then when you insert tokens it accumulates them until it reached that price. Then you'd zeroize the tokens number. Is that what you're trying to do?",
        "Put pdb.trace() before that line and try to print weight from that console",
        "Remove `weight = global weight`. `weight` is _already_ a global variable.",
        "@DyZ Wait, does `weight = global weight` not give you a syntax error? It does for me, both in Py 2 and in Py 3. So I don't think that's their real code.",
        "@StefanPochmann It does. There is more than one reason to remove that line.",
        "OP, please show us the _real_ code. The code that you included has a syntax error. And there is no need to include those verbose user instructions.",
        "I removed the line you guys told me to but now it still tells me that 'weight' isn't defined when I asked the user for it at the beginning of the program. I really appreciate the help.",
        "I updated the original post with the code I currently have along with the functions",
        "\"This programming language claims my...\" is never a good start to a question, never.  99.999999999999 of the time it is correct, and it is very unlikely you found a bug in the language.",
        "Please give us the exact error message (full traceback), not just \"python is telling me that `weight` isn't defined\".",
        "Please try to make a minimal code which actually shows the error, i.e. I can run it and get the same error you are having. It looks like you removed the part which is the actual cause of the problem, but you don't know it. For example, an assignment to `weight` after the line with error? And show the exact exception you are getting.",
        "An assignment would only be a problem if the code was part of a function, but the OP claims this is his original code (which I can't believe),",
        "This is the full traceback error that I am getting \n\"Traceback (most recent call last):\n  File \"/Users/michael/Desktop/Vicky's Gym/Vicky.py\", line 23, in <module>\n    print(calories.timeRequiredRun(caloriesToBurnOff, calsBurnedPerMinRunning))\n  File \"/Users/michael/Desktop/Vicky's Gym/calories.py\", line 22, in timeRequiredRun\n    calsBurnedPerMinRunning = burnedRunning(weight)\nNameError: name 'weight' is not defined\"",
        "As I expected, the error is in a function! The function is named `timeRequiredRun` and we do not see that function, even though we do see a lot of code. So, there is your problem: you are giving us misinformation, so you get no useful answers.",
        "Hello and welcome to StackOverflow. Please take some time to read the help page, especially the sections named [\"What topics can I ask about here?\"](http://stackoverflow.com/help/on-topic) and [\"What types of questions should I avoid asking?\"](http://stackoverflow.com/help/dont-ask). And more importantly, please read [the Stack Overflow question checklist](http://meta.stackexchange.com/q/156810/204922). You might also want to learn about [Minimal, Complete, and Verifiable Examples](http://stackoverflow.com/help/mcve).",
        "Please see: [Why is \u201cCan someone help me?\u201d not an actual question?](http://meta.stackoverflow.com/q/284236)",
        "So, you copied some code for your homework, botched it, and now you want someone to debug it for you (without actually describing a problem)?",
        "[I downvoted because there was no effort to debug the code](http://idownvotedbecau.se/nodebugging/).",
        "[Being unreponsive to comments is not helpful](http://idownvotedbecau.se/beingunresponsive).",
        "lists aren't considered string objects, but `\" \"` is, so `+ \" \" +` is concatenating a string to the lists",
        "I get the same error when I remove double quotes as shown below:    CSRPGPrimary=primaryP + primaryG  + primaryAin  + primaryAout  + primaryDin  + primaryDout\n('primaryG=', 'NSUP')\nTypeError: cannot concatenate 'str' and 'list' objects\n('primaryAin=', ['A'])\n('primaryAout=', ['B'])\n('primaryDin=', ['SEL'])\n('primaryDout=', [])",
        "please edit that into the question",
        "What are these interspersed `('primaryG=', 'NSUP')` and what are they supposed to tell us?",
        "And if that means `primaryG` is `'NSUP'`\u2026 well, then it *is* a string you're trying to concat with a list!",
        "those are just output from my print statements",
        "print(\"primaryP=\", primaryP)\n    print(\"primaryG=\", primaryG)\n    print(\"primaryAin=\", primaryAin)\n    print(\"primaryAout=\", primaryAout)\n    print(\"primaryDin=\", primaryDin)\n    print(\"primaryDout=\", primaryDout)",
        "it works if I only concatenate first two lists.. Problem starts from third list onwards. CSRPGPrimary=primaryP + primaryG  works fine",
        "At least one of the things you think is a list is not a list! Presumably everything that outputs as `'...'` instead of `['...']`.",
        "That's the bit Im not able to understand. I agree with you that first two elements Im trying to add(primaryP,primaryG) dont look like list but more like strings. However all six things Im trying to add, I declared them as lists and for firs two, I'm just appending strings to them. for eg. primaryP.append(portName) , where portName is a string. now my understanding is even though portName is string, now it has been added to a primarP list. why it is giving an error when Im trying to add primaryP to a bigger list (CSRPGPrimary)??",
        "Hope I made the question clear? code is so big that I dont want to post here and add confusion. but my basic question is, a=\"stringA\", A=[], B=[\"xyz\"],BigList=[], A.append(a), now if I do BigList=A+B, shouldn't that work?",
        "The problem is with 99.999% certainty that somewhere in your \u201cbig code\u201d you\u2019re *replacing* the list with a string, not appending to it.",
        "Please provide [mcve] in the question itself.",
        "Knowing [how to debug a program](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/) comes handy in situations like these. There are many debugging techniques that can be used to help you understand a program and its flow.",
        "A `while(true)` loop will continue until something inside that loop ends it, usually via a `break`, `return`, `throw` or some process-wide exit condition such as `std::terminate`. Stack Overflow users are not going to navigate a repository to understand your question. For a complete answer, provide the relevant code or a [MCVE] directly in the question.",
        "Post code in the question - not a link.  It's meaningless when the link goes stale or updated; and some proxys will ban github.",
        "The link doesn't even go to a specific piece of code. It goes to 360 lines of code across two files.",
        "Possible duplicate of [What is the usage of while(1)?](https://stackoverflow.com/questions/37056975/what-is-the-usage-of-while1)",
        "Given the two questions at the end, what is your point in giving all the code? You don't seem to be expressing yourself clearly. What are you trying to ask, that is maybe a clarification of your title?",
        "How do you get the list of directories? Please [edit] the question to show what you currently have.",
        "You *do* know the difference between prefix and suffix incrementing? I.e. the difference between e.g. `++num1` and `num1++`?",
        "Num1++ is post increment. In next line after printf if num1 is used, it's value will be 2.",
        "Go with `printf(\"num1=%d\", ++num1);`",
        "@DeiDei, this is not the case, but imagine a python programmer seing the `++` operator for the first time. That programmer may be a python wizard, but that operator doesn't exist in their language.",
        "What made you think it doesn't increment it? The code you posted does not check the value of `num` after `++`.",
        "And if you don't understand the difference, you need to [find a good beginners book](http://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list) to read.",
        "@FedericoklezCulloca You can't be a wizard at anything without the skill to find the basic information in docs.",
        "@FedericoklezCulloca I'm not buying it. Chapter 2 of any tutorial will you teach about prefix and postfix.",
        "@squeamishossifrage not a duplicate of that one IMO. That one is full of UB and dubious casts.",
        "[Second result on google](http://en.cppreference.com/w/cpp/language/operator_incdec). I mean, I don't think I'm a wizard.",
        "@asu looking for what exactly?",
        "I was looking for `++ operator C`. `C++ ++ operator` leads to the same page as the first result. This question is low effort. Well, I guess OP is a Bing wizard, so maybe he can't google either.",
        "@Quentin You're right; I should have checked a bit more carefully",
        "Add another `printf(\"%d\", num1);`",
        "Possible duplicate of [What is the difference between ++i and i++?](https://stackoverflow.com/questions/24853/what-is-the-difference-between-i-and-i)",
        "Have you looked up the documention for it?",
        "Hint: it's using jQuery.",
        "Prints \"Hello World!\" to the [console](https://webmasters.stackexchange.com/questions/8525/how-do-i-open-the-javascript-console-in-different-browsers) when the [document](https://developer.mozilla.org/en-US/docs/Web/API/Document) finishes loaded using [jQuery](https://learn.jquery.com/using-jquery-core/document-ready/).",
        "thanks @vox thats what i thought but wasn't sure",
        "You read the api documentation on what it does and were unsure what it does?",
        "Look at his score: Dude is trolling.",
        "I am checking the documentation now and can see lots of similar examples. Thanks all",
        "look at your error_log",
        "I'm going to guess the error is on line 23. Anyone else want to play the error log lottery?",
        "How does using a **single** `word` array answer your goal of separating a sentence into words???",
        "Use paper and pencil and calculate what the following expression evaluates to: `sentence[i]!=32 || sentence[i]!='\\0'` when `sentence[i]` is, say, for example, the letter 'A'. Once you do that, you will have the answer to your own question.",
        "Correct indentation is always a plus. Also be clear about what you mean when you say \"it does not work\". Also whats 32?",
        "I indented your code for you. See what a nice difference a few whitesapce characters can make for your eyes?",
        "@barakmanos one word at a time.",
        "But the loop runs only until the first space!!!",
        "@Borgleader 32 is the ASCII code for space.",
        "@barakmanos I am using this as a function.",
        "@Zee, you can use it as whatever, it still will stop looping at the first space",
        "@StoryTeller, thanks.",
        "No you're not, you're doing it directly in `main`!!!",
        "By the way, since you haven't specified **how** you want these words separated, you may as well print the sentence as is. It will display the words separated by spaces.",
        "@StoryTeller it doesn't stop and I can't understand why. Moreover, I am passing an integer by reference which keeps the count of iterations.",
        "\u22121, this is completely useless, it won't work with chinese.",
        "@barakmanos in my real code.",
        "@ybungalobill I didn't write it for Chinese !",
        "@ybungalobill: If there's anything **not** to down-vote this question for is Chinese characters. The question specifically says character arrays (i.e. `char[]`). Chinese characters are wide (i.e., `wchar_t`, `short`, etc).",
        "So what have you posted this code for??? If you want us to refer to \"your real code\", then post your real code, not something else.",
        "@barakmanos: They are not, most of the world uses [utf-8](http://utf8everywhere.org/). Anyway, my point is that separating sentence into words based on whitespace is incorrect.",
        "@ybungalobill: Whatever, that's not `char`.",
        "@Zee: Please post your actual code, and please explain (as I have already noted to you in one of the comments above) how exactly you want to have these words separated (because at present, you may as well print the sentence as is, and the words will \"come out separated\").",
        "@barakmanos: `utf-8` **is** `char` on lots of systems. I can pass Chinese into this code on any UNIX system.",
        "@ybungalobill: Well, not on all systems, and half of the questions/answers on this website will not work for Chinese (specifically questions and answers about ASCII characters, specifically on systems which do not support Chinese \"natively\").",
        "@Zee if its space than compare to `' '` instead of 32. Also AFAIK, the character encoding is not guaranteed/required to be ascii so this code would not be portable with that magic constant.",
        "The loop will stop when it encounters a character that is equal to both 32 and 0. That's a long wait.",
        "Classroom assignments ?",
        "This is correct",
        "Is there a question?",
        "Create a new version of a program making a diamond shape and then it gives a picture",
        "what logic do you think you should be following?",
        "Not a single clue",
        "How would you, step by step, map each number to a value? Firstly, figure out what the 10 rows would equal, and then see if you see a pattern in how they're printed per row.",
        "Come on man, at least give it a try first. That's the whole point of the homework. Or drop the class and forget a career in CS. Come back with an actual question and an attempt.",
        "Im just being  lazy, i appreciate you guys actually making me do it and somewhat explaining it.",
        "For problems like these there are more elegant ways to solve them. Think mathematically. What does the shape of absolute value function look like? How can you utilize it? Hint: Try graphing \"abs(x) + abs(y) <= 5\" at wolframalpha or some other application that is capable of doing such things.",
        "This is a opinion-based question and therefore off-topic",
        "Welcome to Stack Overflow. Please read the [About] and [Ask] pages.  Note that questions such as this are not suitable for SO \u2014 they are primarily opinion-based, amongst other problems.  Also, tagging with multiple languages is often an indicator of problems with the question.  For example, you end with `C++ or Java` \u2014 why have you tagged it with C too?",
        "\"sockets broken too frequently without knowing the reason\" is probably going to be an issue no matter the language, if you don't find out *why*.",
        "You can fix programming errors by finding a better programming language. You have to get better at fixing bugs.",
        "Sockets disconnecting doesn't depend on language. Working with the internet (or any network, really) this can and does happen. Its your programs job to handle this. Certain approaches, e.g. REST, can make this easier to handle (just retry the request). Again, this is not dependend on the language you chose.",
        "thanks evryone for you're comments, that already helps,",
        "i know that the broken sockets is generaly not an issue of the programing language itself, but getting clear error messages and handling them is the main issue,\n for exemple when the connection is TimedOut i get no error message,\ni know that java and c++ are better on this that's why i'm asking the experienced people for their opinion",
        "Sorry man but this is a pretty general question to which you could probably easily find the answer yourself. Just Google \"create a sliding div tutorial\" and see what pops up!",
        "You didn't ask any question, just told us what you want. This is not a code service. Read [ask]",
        "Hire a freelancer",
        "Thanks my bad. Sorry",
        "The term \"device storage\" is not used in Android app development. There is [internal storage](https://commonsware.com/blog/2014/04/07/storage-situation-internal-storage.html), [external storage](https://commonsware.com/blog/2014/04/08/storage-situation-external-storage.html), and [removable storage](https://commonsware.com/blog/2014/04/09/storage-situation-removable-storage.html). There is no \"Environment.getstoragedirectory()\" in the Android SDK, and it is unclear what you are referring to when you use the phrase \"device storage\".",
        "please check your question while posting here and the answer which already available here",
        "i want to have a folder like whatsapp have in device storage to store images bt i have  to store .csv files in that folder",
        "Hi Sagar. I notice you are using txtspk words like `plz` and `bt`. If the words `please` and `but` are too much trouble for you to type, then Stack Overflow may not be for you. We _need_ to see effort in questions here, and even after my edits above, this will close, as it does not show what code and configuration you have.",
        "I notice now that you have put a snippet of code in a comment. This should be in the question. Please edit it into the question, and delete the comment. A block formatting tool is available.",
        "sorry sir i m using this first time . i will mind it next time",
        "Could you please share with code.",
        "You could just disable the button that submits the form while the form fields are empty. And yes please submit the code.",
        "Possible duplicate of [Prevent Default on Form Submit jQuery](https://stackoverflow.com/questions/6462143/prevent-default-on-form-submit-jquery)",
        "Look here [enter link description here](https://stackoverflow.com/questions/7194673/preventdefault-submitting-form)",
        "Luckily there are people trying to help in this site instead of saying that is duplicated! @azurinko thanks man that worked",
        "@BrunoGibellino don't add irrelevant tags next time and also indent your code.",
        "@RajendranNadar wasn't it about form? wasn't it about validation? wasn't it about javascript? Didn't I use those in my code? So why are they irrelevant? But you are right about one thing I should've indented the code.",
        "@BrunoGibellino, talking this way, you should've also included bootstrap, input, tag, css, class, id, fadein, fadeout, grid, cycle and etc. tags. But it'd be weird. `javascript`, `jquery` and `html` tags are enough to sort your question.",
        "`i need to find out the tuple which has only one value in it`, in your data set none of the arrays fulfill this criteria. 0 is still a value.",
        "the value  should be greater then 0 and should crosscheck in tuple itself",
        "https://git-scm.com/docs/git-commit",
        "notably `-a` -> `--all`, `-v` -> `--verbose`, `-m` -> `--message`",
        "can you please explain what you want it to do because your question is really unclear.",
        "Confused how? Look at the 8255 docs for port layouts and use math.",
        "Either can be used to change scroll bar style",
        "That depends on browsers. You can do with webkit, such as Chrome, Opera. But you cannot do with IE, Firefox by only CSS.",
        "Simply rebuild your project and debug again.",
        "May be you're looking for *How to enable Edit and Continue in Visual Studio*",
        "@HimBromBeere I have done that and still have this problem.",
        "@Div Edit and Continue is enabled.",
        "Are you trying to edit file when the solution is getting built? That may be one of the reasons to get this.",
        "@krw12572 I edited while in debug mode but I have done this before. This time however, this error occured. How do I solve this problem?",
        "@Junxian Do not do that. How should the debbuger know that you've edited the file? The edits are not compiled and that's why it's not working",
        "@rbr94 I'm new to this and learnt everything myself. I made a mistake then. How do I solve this problem? I searched over the net but did not manage to find a solution",
        "This happens because, when solution is built, a file containing symbols(.pdb) is created. This file contains information required to debug and breakpoint related information. When you change your source code, symbols loaded and corresponding source code is no longer same. Thats why this error is shown.",
        "To get rid of this, do not edit code while program is running or getting built. And if you do edit then just stop current build and build again.",
        "@krw12572 I did exactly what you said before I posted on here but it doesn't work",
        "Without using imports? By sitting down and writing code. Obviously this is **homework** then. And homework ... means: you doing work at home. Not: you dumping your assignment on other people.",
        "where is your code then?",
        "What about dayNumber/(sumOfDaysInMonthUntilThisMonth) ?",
        "Well if you can't use imports or anything else for that matter. I would just code the days in the month \"hard coded\" and go from there.. but also don't forget leap years.",
        "Wrongway to address a problem.... is your 60th day Feb 29th or March 1st????",
        "@\u03a6Xoc\u0119\uc6c3\u041fepe\u00fapa\u30c4 I have a boolean for leap year as i mentioned. The day is an input value, I have no control over what it is.",
        "So you asked the same question here http://stackoverflow.com/questions/42521669/what-day-of-the-month-is-it, got answers to that and now closed it as a dupe of this question? What is the point of this question here if you already got an answer with your constraints?",
        "Rather than mention that you have a boolean show it. Rather than mock someone because you didn't put too much effort into your question, improve it.",
        "What do you think that `star*(a/2)` should do?? You have to write a loop or initialize a `std::string` with `a/2` `'*'` characters to get that working.",
        "Your logic to count number of stars that should get printed is correct. But the method to print those many stars is not correct. How would you print a single star?",
        "@user0042 - If the OP is coming from a language like Python, Javascript or Perl? Easy mistake to make.",
        "`std::string` has a constructor taking a single character and a number.",
        "Kindly show your research / debugging effort so far. Please read [Ask] page first.",
        "Read strings....",
        "There's a trick to seeing if a number is divisible by 3. You can do that without having to convert those numbers.",
        "take input as a character array",
        "So you are to return \"true\" if the modulo 3 of the sum is 0?",
        "You didn't even specify a target language.",
        "Please edit your question to contain a [mcve]",
        "That's a pretty clever runtime you have there.",
        "Possible duplicate of [Why is this vector iterator not incrementable?](http://stackoverflow.com/questions/3779227/why-is-this-vector-iterator-not-incrementable)",
        "Please provide [SSCCE](http://sscce.org). Also, you probably want `auto&` and a range based loop.",
        "Possible duplicate of [How to use vector iterators when using vector<>::push\\_back()](http://stackoverflow.com/questions/24879979/how-to-use-vector-iterators-when-using-vectorpush-back)",
        "@JesperJuhl I doubt `auto &` would for for `v.begin()`",
        "@Mohsen_Fatemi no, that's *exactly* the time when `auto` really shines for me, when I just want an iterator but really don't care much what type it needs to be.",
        "@Slava why do you think this *isn't* a minimal, complete, and verifiable example?",
        "@MarkRansom because type of `v` is not shown for example?",
        "@Slava obviously the question was answerable without it, so your complaint was pointless.",
        "@MarkRansom the fact that we assumed what type used there does not make this question good and does not make example [mcve] either.",
        "Are you trying to call a super/base class constructor?",
        "Try `base` instread of `this` if you inherit from some other class...",
        "Yes, but i am not calling base just this keyword",
        "I already tried base but same error",
        "Who says you should be able to do that?! What do you want to do?",
        "I am designing myself with own no one said to do sir",
        "If you want to call a contructor from somewhere else you need to qualify it. Of course here you try to call yourself, which is obviously wrong, just as the error message says...",
        "Okay thank you for suggestion @TaW",
        "*Why* are you trying to do this? What do you hope to accomplish?",
        "1) http://stackoverflow.com/q/3737139 2) http://stackoverflow.com/q/20582962 simple google search",
        "You're not calling `countChars()`. You're just printing an empty variable with the same name.",
        "`System.out.println(countChars(\"this is it\", 'i'));` this should be like this.",
        "Don't learn programming by trial and error. You should read a java programming book.",
        "I am. Maybe I should ask after I've read it all, but it's a bit long and I'm excited. :D",
        "Hi @Sam, this is not a good title for your question. If you want to avoid getting mass downvoted, please put a clear title that correctly identifies your actual issue next time.",
        "Heard. What would be a better title?",
        "*What should i do next to make it start running?* ca you explain ?",
        "Yeah, basically, I don't know what I need to do to indicate to the program that I have already put in all the inputs. I want the program to start running with these input but I can't find any method of making it run.",
        "Possible duplicate of [How to get multiline input from user](https://stackoverflow.com/questions/30239092/how-to-get-multiline-input-from-user)",
        "Pressing enter will just create another row of input.    LOL",
        "You should be using input/raw_input, no one uses stdin.read",
        "Well, stdin.read appears to me as more convenient as I can deal with any data with just the same code. Whereas, input/raw_input needs to loop through.",
        "Yeah, it seems really convenient when you can't get it to stop taking input.",
        "You can @JJJ you just use CTRL-D - super intuitive for the user",
        "Please see [Why may I not upload images of code on SO when asking a question?](http://meta.stackoverflow.com/questions/285551/why-may-i-not-upload-images-of-code-on-so-when-asking-a-question)",
        "This `var_dump` will obviously give `false`, otherwise the question would not have been asked.",
        "this is not the Yii way, he was using the correct way to do it",
        "No, sqlalchemy requires a callable.  If you add the parentheses, you get a constant value for all entries.",
        "@adamek `something.myfunc` returns the function itself, without calling it; this is desired behavior. If you called the function, you'd be retrieving only a single time and using that as the default, which is a different behavior and not desired.",
        "I am new in share point. I dont know what to do and how to do.",
        "Then go read a tutorial, then come back here when you have a _specific_ question.",
        "-1 if you are new to SharePoint, try using the out of the box features first. You \"want\" to use JavaScript, but do you actually need to?",
        "For starters why have 4 tables? Why not have 1 with a login type field??",
        "You shouldn't be asking the question how to make the login page, but more on how to come up with the correct SQL to check your login. Retag your post with the type of DB you are using and you may get better answers",
        "use regex [http://en.wikipedia.org/wiki/Regular_expression]",
        "You don't even need Regex for this.",
        "This question is far too vague.  You need to show some work.  What code have you tried?  What research have you done.  It will be closed otherwise.",
        "try doing some googling and trying please",
        "Please ask some quality question. You can easily get answer from any search engine.",
        "Well, what syntax are you talking about?",
        "http://www.roseindia.net/techindex/Iterate-a-List-in-Java.html (\"first hit\" on google; this is why you are receiving -1's)",
        "I could find something on [The Code Project](http://www.codeproject.com/Articles/15934/How-to-convert-a-numeric-value-or-currency-to-Engl)",
        "And also on [stackoverflow](http://stackoverflow.com/questions/2729752/converting-numbers-in-to-words-c-sharp) Did you google this?",
        "extend this for doubles: http://stackoverflow.com/a/3267/284240",
        "I didn't try anything. I thought that there is a buil-in method for doing this.",
        "does `string.Substring` not do what you want?",
        "How do you want to handle these strings? a) `xx #welcome #welcome` b) `xx # welcome #welcome xx`, c) `xx ##welcome xx`",
        "I found solution:\n\ns.IndexOf(\"#\");",
        "\"Which is better, a computer or a piece of bacon?\"",
        "You asked this question before even reading the websites for the two frameworks...",
        "Did google not help?",
        "OMG, not again, do your own homework... I'd recommend start reading a Python or CS tutorial/book...",
        "This is not homework. No need for the rude replies. I am just intrigued.",
        "@JoeBarry while KurzedMetal comment was uncalled for, you did not put enough effort in your question. You have to do some research on your own before posting. And you need to show the things you tried. Please check http://stackoverflow.com/questions/how-to-ask for more information",
        "There are cases where renameTo() does *not* work reliably; that's the whole point of the question.",
        "what is your css/browser/html",
        "Is this a display(style) issue or PHP?",
        "I've changed the title to something more appropriate since no-one really _cares_ how urgent you think it is - urgency is reserved for _paying_ clients :-)",
        "Creating what form? where the debug fired the error? this is sooooo easy to fix, if you debug the code! too much code -1",
        "This may sound obvious, but if you look at the inner exception it will likely tell you what error is not being set.  This is almost certainly caused by not instantiating an object.  If you don't know how to check the inner exception, which line is it crashing on?",
        "By looking at your Inner Exception you should be able to find out what line your problem is on and from that what is causing your problem.",
        "You've posted dozens of lines of code consisting of `Something.Hide()`, and dozens of commented out lines of code, and a ton of unrelated code. Please edit your post to remove all the noise and junk, and reduce it to the minimum needed to demonstrate the problem, and then ask an actual question.",
        "You probably shouldn't post your database password to a public forum.",
        "possible duplicate of [What is a NullReferenceException and how do I fix it?](http://stackoverflow.com/questions/4660142/what-is-a-nullreferenceexception-and-how-do-i-fix-it)",
        "What's the name for #f3221c?",
        "Don't know about you, but I'd prefer using more than these colors: http://www.w3.org/TR/css3-color/#svg-color",
        "thanks for response! we have ability to launch an app from another app. pls see answer in my post, maybe this help you in the future.",
        "why do u think controller also needs to be prototype?",
        "This is just plain wrong.",
        "Where do i need to insert this piece of code. on jsp?",
        "Wrong, wrong, wrong.",
        "This does not what the OP described he wants to.",
        "It's not possible to embed an serverside Application, i.e. exe file into a JSP. You can embed an Object tag `<object id=\"msword\" width=\"100%\" height=\"100%\"\nclassid=\"CLSID:00020906-0000-0000-C000-000000000046\"\ndata='http://localhost/testword/test.doc'>\n</object>` into your JSP. This will open embed the Application into the page. It requires the client to have the Application installed is not really a part of the JSP it's part of the rendered HTML Page.",
        "Yes i want to do something of this sort only. I have downloaded the exe. Now i want to run it on my jsp page",
        "{{include('myfile.php')}} gives me a the function doesnt exist  {% include 'myfile.php' %} gives me a Unable to find the template",
        "@JhovaniC What actually kept in your myfile.php ?? Is it a template ?? Can you post the myfile.php ?",
        "Try to read this https://msmvps.com/blogs/jon_skeet/archive/2010/08/29/writing-the-perfect-question.aspx",
        "then what's the problem? Spam filter?",
        "i think you are looking for some Mass mailer programs available , you may google for it, i think http://www.massmailersoft.com/ should suit you",
        "@Akash Yadav: Thanks a lot, but Is there a freeware tool",
        "@JustMe i think this might suit you http://pommo.org/Main_Page",
        "If you have 3000+ customer - why do you need a **freeware** to send them mail?? Don't those customers **pay** you so you could sign up for a commercial service??",
        "he wants to do it programmatically, not through config",
        "What's your goal in doing this?",
        "Why do you want to do that?  If it's something like having a user type 1 to refer to the first item, just subtract 1.",
        "I don't know Java, but if there is a way (which I doubt), don't do it.",
        "okay, maybe its really not the best way...changed decision",
        "@hardyz009 You seriously should revise the way you're asking questions and reflect how SO works. What did you try so far? Did you try anything at all (Google for instance)?",
        "what did you attempt?!",
        "that gets the things that chickfila likes; not who likes chickfila.",
        "Yeah, you are right. But we get user_id which is used for get name",
        "He's asking about actually moving the user's caret to the element, not just styling selected elements.",
        "This isn't of any help.",
        "I wish people would read the question before answering, CHARINDEX is not implemented in SQLITE !!",
        "Do you have a specific example you'd like to work on?",
        "Update and insert, or update and delete?  Your title and question say two different things.",
        "`switch` code blocks do what is called 'fall-through' which simply means any value passed to your `switch(department)` block with results in `case 99: display = \"Store Use\";`. If you want to prevent fall-through you must add `break;` at the end of each `case` statement.",
        "Why don't you make the fixes that are being given to you?  Insert the missing parens and braces, etc.",
        "You need some introductory books on Java and Android programming.  These are very basic errors.",
        "Sorry Kevin but that Escape function only escapes XML not SQL (http://msdn.microsoft.com/en-us/library/system.security.securityelement.escape.aspx)",
        "Please post some code how you have implemented your UIScrollView.",
        "This is one of the simplest Python programs to write. Please don't ask us to do it for you.",
        "Is this homework?",
        "I think you should back your comment up with figures next time, as I believe you may be wrong. See http://blogs.msdn.com/b/codejunkie/archive/2008/10/08/xmldocument-vs-xelement-performance.aspx",
        "Can you please provide a link to the problem, the formula you used to solve (preferably with your current code) so that others can optimize it. Also if you found the formula, any specific reason to use brute force",
        "Brute-force methods tend to be slow.",
        "Define \"brute force.\" Without a formula, you can still [memoize](http://en.wikipedia.org/wiki/Memoization). I suppose that might still be \"brute force\" -- just a litte less \"brute.\"",
        "Please provide more details: post your design so we can see what you are trying to accomplish. Also tell us what you have already tried. Also please accept answers to your questions.",
        "There could be many reason. Without providing specific input can't help you out. You should post your question with some details. How can we understand what your psd is and what you have converted?",
        "What have you tried? This is the easiest question on this site... [Google: *CSS Text underline*](https://www.google.com/search?q=css+text+underline&safe=active) and [Google: *CSS Text align center*](https://www.google.com/search?q=css+text+align+center&safe=active)",
        "Why not start reading a [CSS tutorial](https://developer.mozilla.org/en/CSS/Getting_Started) ....",
        "Show us the code that fails.",
        "Show us some XAML & Code please.",
        "Might be a duplicate.  See here: http://stackoverflow.com/questions/5382164/wpf-bindingexpression-path-error-property-not-found-on-object",
        "@dbaseman Thanks for the pointer, I was looking for more of a tutorial into why it works the way it does which is I didn't post any code, the link you added does point me in the right direction.",
        "http://developer.android.com/guide/developing/index.html",
        "Google Android Development should take you to the guide on how to install your development machine.",
        "It will have it if you make it.",
        "What is wrong with question?",
        "Are there any libs?",
        "Could you write what you tried?",
        "i just write two class ,inside the first class i declare a variable getdata = xxx. but i need this get data value to another class . what to do.",
        "Show us your code.",
        "Why did I not see that? I've looked at that page before.",
        "Actually, do you know of any other way to animate before api 11?",
        "At the right-top corner of the page, you will find `Since: API Level 11`.",
        "Yeah, just seen that.",
        "Sure you can use [Animation](http://developer.android.com/reference/android/view/animation/Animation.html) to animate your views.",
        "Lovely. Thanks for that.",
        "There are some questions that are simply baffling. Why for the same values of 1, 2 and 3 does `1 + 2 * 3` have a different result than `(1 + 2) * 3`?",
        "-1 for this question. You will finde what your are looking for at http://msdn.microsoft.com/en-us/library/fatf1t6a%28v=VS.100%29.aspx?lc=1033",
        "@RaphaelB. Wait, isn't that list for JScript (even though it probably mostly applies to C++, too)? The one for C++ is here: http://msdn.microsoft.com/en-us/library/126fe14k(v=vs.100).aspx",
        "Why don't you want to use css?",
        "No way to do this without CSS. But really, if you have no CSS, the default should already do this.",
        "Why would you want to do this without CSS, thats exactly what is for...",
        "what else do you expect other than css and js ?",
        "what do you mean \"seen\" as already clicked? visually/style? programatically (an attribute)?",
        "Everything you need to know is here: http://developer.android.com/index.html",
        "Thank you for your answer sir.",
        "You should have a look at the [select](http://msdn.microsoft.com/en-us/library/ms189499.aspx) statement. You can use that to do do what you want.",
        "Post your html and css, how do you expect us to help you without even seeing the code?",
        "You are definitely right Matteo Mosca, I somehow forgot to even post the code. But the problem was solved using display:inline-block like like RedX suggested.",
        "@Student: Then it was always the area of the div and not to the right of ;)",
        "What's the context? Why not compare the number directly? Also have a look at this similar question: [Regular Expression - Range (2-16)?](http://stackoverflow.com/questions/3451389/regular-expression-range-2-16) and [all of these](http://stackoverflow.com/search?q=regular+expression+number+range).",
        "An alternate image doesn't help, it just scales that image 2x and looks blurry.",
        "You make it the size that you need in Photoshop. You don't scale it at all. That's the point of producing a unique image in the first place. That way you can keep it scaled 100%.",
        "Ryan, iPhone does the scaling itself. See this article: http://weedygarden.net/2010/10/retina-display-and-css-background-images/",
        "Have you tried anything yet? Maybe start with simple Java tutorials before creating a game.",
        "@DanW:  To be fair, War was how I learned much of the Python I do today.  Then again, I had read up on a few tutorials beforehand...",
        "Did you try searching the Apple documentation for \"Twitter\"?",
        "That looks like google limit, not git limit.",
        "What's your question?",
        "What is your question, please?",
        "What is your question and what errors are you getting?",
        "I am getting following errors - Unknown column 'AA' in 'field list' --- CALL P1(\",\",\"value1\",\"AA\");",
        "If you only care about existence/non-existence of rows, I'd explicitly warn *against* using `COUNT(*)`, since it has to process the *entire* table to compute the result (whereas `TOP 1` or `EXISTS` can stop after a single matching row has been found)",
        "Agree with @Damien_The_Unbeliever - you should never use a \"count\" if you only care about \"exists\" - that causes extra work",
        "But didn't they begin to support it in 10.7.2+? If you switch to 'core' you get this: https://developer.apple.com/graphicsimaging/opengl/capabilities/GLInfo_1073_Core.html",
        "-1: This answer is wrong.",
        "This is kind of a REALLY BIG problem that is unlikely to be answerable in a Stack Overflow question, aside from perhaps pointing to an image-recognition API such as TinEye.",
        "He wrote that `int **p = NULL;` works.",
        "Welcome to Stack Overflow! Unfortunately, this isn't a very useful answer to the question. The question is about running specific unit tests from gradle (a build system), not about accessing Java classes in another package.",
        "See [ComponentImageCapture.java](http://stackoverflow.com/questions/5853879/java-swing-obtain-image-of-jframe/5853992#5853992).",
        "[What have you tried?](http://www.whathaveyoutried.com)",
        "Not only that you don't show any research effort at all, your question isn't clear enough.",
        "Damn! I love challenges to much! I wrote an answer to this question...",
        "I found the problem. The reason `onSaveInstanceState()` was never called, is because I added this line to the AndroidManifest.xml file: `android:configChanges=\"orientation\"`, which as far as I know, is intended to deal with events line orientation change and sliding hardware keyboard manualy for better performance.\n\nRemoving this line fixed the problem.",
        "Really, if youcan't do this, you shouldn't do iOS development, you'll damage the system one day...",
        "Come on, everyone has to start somehow! Sumit should google before asking on SO though, or better get an iOS book.",
        "Can't you just `std::cout << static_cast<int>('^');` and use that? Or just reference an ASCII table.",
        "Uses ASCII code to output '^' to console: `char c = 94; std::cout << c;`",
        "and another example : std::cout << '\\x5e';",
        "If you don't want to use the caret character: `std::cout << \"??'\";`  This has the advantage that it is guaranteed to work on all platforms.",
        "Sorry, I don't get it... Can you rephrase it?",
        "Wow, I did not know C# hat the \"do\" statement..",
        "are you trying to reinvent the C# do{}while(); loop",
        "please improve quality of your question else every one will do downvote...",
        "where is the problem ?",
        "Share you css..",
        "The CSS is there - just press F12. The problem is that when the page first loads, the image appears on the left instead of being centered. @RohitAzad",
        "What is your thoughts on what it does?",
        "Are you taking the exam right now? :-)",
        "Casting integer to a pointer? No thanks.",
        "It's just an assignment. The next line would be interesting, though.",
        "A Rails model is not a table, nor any other part of the database. While commanding `generate model Foo` creates a corresponding database migration for creating a table for storing instances of Foo, commanding `destroy model Foo` doesn't destroy the table.  As http://railsforum.com/viewtopic.php?pid=10961#p10961 says: \"Beware, though - when you generate a model, it creates a database migration. If you run 'destroy' on that model, it will delete the migration file, but not the database table. ...\"",
        "what about real code and real error messages?",
        "Its really long. You wouldn't care to read it. So i shortened it",
        "Let us decide whether we want to read it or not. Always post full error messages!",
        "@user1889099: If you are able to decide what information is necessary to solve that problem, and what not, I wonder why you weren't able to solve the problem yourself...",
        "Okay. Im sorry. I have posted the full code.",
        "Reduce your example to make it minimal.",
        "What we were trying to suggest: Always strive to post a http://sscce.org/",
        "[Lol](http://stackoverflow.com/questions/13953045/c-file-handling-error). Cross posting is not welcome here (even if it would be possible). Especially not under different user names. Please take your time and look how others ask questions here and read the FAQ.",
        "Sorry. Both are different issues. Why did u bar me from asking qns. Should i delete this thread",
        "You know, *read the documentation*.",
        "Did you try it out and see what the result is?",
        "See [here](http://en.cppreference.com/w/cpp/language/operator_precedence).",
        "It wouldn't even matter anyway.",
        "That's not related to the question. Please include an example using **Twig**.",
        "What do you mean? You want to verify the *version*? Or the product? You can't verify the version from the connection string - the same string will work for many versions of SQL Server",
        "http://alexpinsker.blogspot.co.uk/2009/12/regular-expressions-for-connection.html",
        "That is a good question!",
        "Here is code you need http://dbaccesstesterclient.codeplex.com/",
        "Don't just post code, but also write your question along side it. Just putting the question in the title is not good practice and hurts readability.",
        "I have already stated that I have tried creating project from scratch, hope you have properly read the question",
        "Protocols? You don't need any protocol, just import that classes and call them as you would do with any other class",
        "@CTravel The problem has been fixed now: the missing code was added.",
        "http://dev.mysql.com/doc/refman/5.5/en/comparison-operators.html",
        "Where does Microsoft's LocalAlloc comes into picture here?",
        "This isn't a place to ask for free work. Attempt something on your own. When you're stuck post your code and ask for help.",
        "`'(' + myText + ')'`",
        "I'm don't see the part of the 1.2 release notes that mentions support for \"squash\".",
        "Maybe this is the correct answer, but for some other question.",
        "Please show some effort, at least in googling the question.",
        "So what's the question ?",
        "My question is how do I (in assembly code) tell the processor how to write data stored in RAM to the SD card.",
        "http://mywiki.wooledge.org/XyProblem",
        "It seems that you need a [Python tutorial](http://docs.python.org/2/tutorial/).",
        "search google 'how to python'.",
        "try it and see!",
        "@user2310289  also wanted to know if it is bad practice",
        "There is nowhere near enough information for us to help you add the moment.  Please expand your question with code examples and what your current issue is.",
        "what do you mean?",
        "Thats not true.",
        "http://stackoverflow.com/questions/5741187/sql-injection-that-gets-around-mysql-real-escape-string",
        "This answer is so bad I want to downvote it more than once.",
        "The author of the question asked for zf2 implementation, not zf1",
        "http://stackoverflow.com/questions/5655674/opening-the-settings-app-from-another-app\r\n\r\nmake search before posting questions",
        "http://dotnet.dzone.com/articles/notepad-c-compiler-you-can-do",
        "Duplicate of many questions on this site.... http://stackoverflow.com/questions/9966301/sql-query-form-c-sharp, http://stackoverflow.com/questions/783294/executing-an-sql-statement-in-c, http://stackoverflow.com/questions/1504895/simple-sql-select-in-c",
        "The libGDX Textfield has no .requestFocus() method.",
        "This only checks if both a and b is true or if c is true",
        "getExtras() is null when you had intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(f));",
        "did you tested it ?",
        "yes, on my Nexus 4",
        "Input mask is constraint !",
        "@TheNewIdiot But we can do some Programming in it right.??",
        "SO is for techincal problem. Google will help you.",
        "You have 2 conditions. So: AND or OR ?",
        "This has. Othing to do with Xcode.",
        "An inner class can be instantiated, an anonymous one cannot be and is executed once.",
        "google \"anonymous class vs. inner class\"",
        "Yes I already mentioned in the question that I did this, but it still didn't work. Read the update",
        "It's very difficult to understand what's being asked here.",
        "Please add more info to your question.",
        "This question has been asked many many times before: [Access user's text messages on iphone](http://stackoverflow.com/questions/7509626/access-users-text-messages-on-iphone)",
        "Did you try anything so far? And `ArrayList` in 2013? Use `List<T>` instead.",
        "Per the comment by Soner, using the strongly typed collection gives you serialization built-in to .net since version 1.1",
        "AFAIK there is no reliable free sms gateway service available. You should use your own GSM modem.",
        "that is a dirty way to solve the problem...",
        "This solution is simple, readable and obvious.",
        "@ColonelPanic yes, but that's not what was asked here.",
        "`set @var = something` is the same as `select @var = something`",
        "also, i'd appreciate the answer and upvote as it was my solution ;)",
        "@Moho, Maybe it is, but I don't get the same results.",
        "You should have accepted the other answer, or explained exactly what the difference between them was, and what went wrong with the other one. It looks like you just didn't understand Moho's or typed it in wrong.",
        "This fairly explains nothing at all... @Moho solutions seems way better...",
        "That doesn't work in JLabels.",
        "It clearly doesn't work with JLabels, will only work with other TextComponents or JXlabels",
        "Where did you get that from?",
        "This works only if `myFunction()` does return itself. Instead modifying each function to be called by `setInterval` it is a better approach to wrap `setInterval` once like the other answers are proposing.",
        "I'm not so sure this would work, because of the same reasons bernhardrusch's wouldn't work. The .str() function returns a copy, and clearing the copy wouldn't do anything.",
        "This solution does NOT work for Microsoft Visual C++.",
        "-1: This is simply incorrect.",
        "Incorrect.  Clear would be operating on the string returned from the stream, not the stream itself.",
        "Is Node.js, not PHP ;(",
        "This is just incorrect -- executeQueryAsync, just like any other javascript function can manipulate variables in many scopes, including the global scrope.",
        "Do you have any references for manipulating a global variable?  I can get the executeQueryAsync to work within the scope of the functions it calls, but cannot seem to pass variables out to a global scope.  Thanks",
        "This worked.. Great.. Thanks !",
        "what if I call it as `fn(new char);`? Isn't that undefined behavior? This is the worst kind of suggestion. Something that leads to the expected behavior, and, for the untrained eye provides a solution. Dangerous.",
        "What would be the correct way of handling this Luchian?",
        "I tried this, but it doesn't work on the server I'm working with, all I get in response is `ERROR at line 1: ORA-00942: table or view does not exist`.",
        "that's because that is a SQL SERVER command",
        "They are only deprecated **in INI files**.",
        "@DisgruntledGoat Any reference to official documentation?",
        "[Straight from php.net:](http://php.net/manual/en/migration53.deprecated.php) *Comments starting with '#' are now deprecated in .INI files.*",
        "Andre, maybe it's time to delete this answer.",
        "Try to do some research before posting. This is really a basic question.",
        "This is a relatively basic question, but the reason I'm downvoting it is because you have not provided enough information for anyone to give you an answer.\n\nTo make the question appropriate, you should, at the least, describe or provide the structure of the table(s) you want to query.  In addition, you may want to specify if you are querying using SQL, LINQ, or some other accessor.",
        "Same home work problem here with a few answers: https://stackoverflow.com/questions/45406235/select-date-and-time-in-sql-10pm-up-to-6am-everyday?noredirect=1#comment77774538_45406235",
        "id='Readtok' , $(\"#ReadTok\"). Notice the T",
        "This question appears to be off-topic because it is about a typo.",
        "Not in Sql Server.",
        "There's a function `sum()` it will give you the desired output.",
        "first tell me what is stockHolding in if(!stockHolding) , from where you got that object .",
        "(!stockHolding) means , you are checking whether memory is allocated to stockHolding on not i.e object created or not . if object not yet created then it will return nil . so if object is not created then your allocating memory to it .",
        "(StockHolding *) is representing an type .so '*' is inside .",
        "Great. Good luck with that. Post the answer once you've solved it so that we can all benefit from that.",
        "What platform/programming language is this?",
        "might want to mention what language you're using",
        "There is a big difference between `max(\"character\")` and `max(\"numeric\")`",
        "List<T> has same properties - it's basically the same as C++ vector<T>.",
        "Downvoting because this answer is misleading. Described features of ArrayList are found in the List, too.",
        "Dennis, while you're probably right, it's likely that the poster did not assume the issue was related to string comparison (and in fact it isn't fully related to that).",
        "And how are you parsing all other HTML?",
        "how are you currently parsing the html? are you using DOMDocument, see link http://php.net/manual/en/domdocument.loadhtml.php",
        "Don't use regular expressions, use a DOM explorer like e.g. http://php.net/manual/en/book.dom.php",
        "Please edit with steps you have taken. Better to offer code or a jsFiddle versus sending us to your site.",
        "hahah . I have problem, what is answer?",
        "one word, `websockets`",
        "How to use websockets for php?",
        "The algorithm used for the `==` operation is defined at [ES5 #11.9.3](http://es5.github.io/#x11.9.3) (though AS3 in strict mode will thrown an error for comparison between unrelated types)",
        "Please consider searching the stackoverflow threads and other mediums before posting a question. Additionally make sure you post a question, showing what you have tried.",
        "You mean like google?",
        "This causes undefined behaviour as there is no sequence point between `i++` and `++i`",
        "@Lundin is that correct though, the LHS, RHS of comma have sequence point between them but the 2 expressions are still unsequenced wrt each other",
        "Can you link the page? anyway this looks a lot like a simple example...",
        "What do you want to know? You have a method signature and an example call. There is nothing more to be said about the code you posted.",
        "Why am I garnering minuses on my question? Is it because people don't know the answer and want to take it out on the asker?",
        "Try to compile it and see what happens.",
        "Are you sure this is C#?",
        "CodeInChaos: How would you use this? How is it useful? How is it a method signature? I'm used to seeing like: public int test(int a, string b){}. If it were like that it would make more sense.",
        "@Phil and BoltClock, yes, it is C#. If I put it into a solution it doesn't yell at me and even provides intellisense for the test method (if indeed that is what it is.) As for compiling it, nothing seems to happen. It doesn't yell at me, at the very least.",
        "That doesn't look like real sourcecode. I can't think of a context where these two lines would compile. If you claim that it compiles, please post a compilable sample. It's just the method signature with an omitted body, since documentation usually doesn't contain the method body.",
        "Is this the full code sample?",
        "It yells at me.",
        "Please post the link to the original doxygen example.",
        "Not even the version you posted now compiles. You can't have a method with no body inside a class.",
        "I ran it in VS2010. Runs and compiles, but does nothing.",
        "@JMD: Doesn't compile for me.",
        "Hard to tell. Please post the code.",
        "Where does the input come from?  Please post some code.  It sounds like it's still waiting for input.",
        "You might just want to throw an exception to catch the empty string.",
        "Is this homework? If not, this is a remarkably bad method to do this operation.",
        "Also, if \"working fine\" means that the binary equivalent of `0xFF` is `1515`, something's wrong with my math skills.",
        "ErrorFound is doing nothing for you, and you shouldn't label things 'binary' when they are string representations of decimal values.  There are multiple functional issues with this code.",
        "Not entirely true. C++ has additional keywords that C doesn't, C code can use those keywords as legitimate variable names. And there are other differences: http://en.wikipedia.org/wiki/Compatibility_of_C_and_C%2B%2B",
        "that's what i've said. c++ is a \"superset\" of c. that means a c code is also a c++ code. but a c++ code is not always a c code.",
        "No, C++ is not a strict superset of C, just like the link I gave you says.",
        "thank's for the link. I didn't know that. not much of a c++ guy myself. community driven q&a, mailing list etc brings out a primitive \"being wise\" syndrome i guess :)",
        "No, C definitely won't always compile as C++. The first example I can think of is `int *foo = malloc(sizeof(int));`",
        "No, there are a non-trivial number of legal C programs that are *not* legal C++ programs (anything involving VLAs, implicit conversions of `void *` to other pointer types, any code that uses C++ keywords such as `class` or `new` as identifiers, etc.), and that gap gets wider with each new language version.  C and C++ are two *completely different languages* that share a large subset of syntax, but then so do Oberon and Pascal.",
        "This perfectly valid C code will never compile with a C++ compiler: `typedef int *class; class new; new = malloc(sizeof *new); /* ... */`",
        "Mind you, I'm not looking to access the code itself, but assets from a flash file. Vectors and images. I don't believe accessing something publicly viewable and downloadable on the internet would count as a crime or worthy of downvoting. I simply look to access the said graphic files, not use or make a profit from them.",
        "appropriating visual assets or code without the owner's consent, even for non-profit use, is illegal.",
        "you should look in the forums first before posting questions that have been already answered",
        "#vBx you don't use any signals/slots connection, am I missing something?",
        "@smallB: Signals and slots are QT specific constructs, what vBx gives you here is the standard C++ solution.",
        "@Als I see that but my question is qt specific. I thought the notion of signal slot would be a good give away. Also if you would note I don't ask how to use try catch block.",
        "@smallB: Your question is in no way Qt specific. Qt is C++; it may have special macros and it's own special little pre-compiler and build projects, but it's *still* C++. The fact that you happen to use signals changes *nothing* about exception handling.",
        "@NicolBolas the question is very Qt specific: `count()` will be called asynchronously, so knowning where the exception is handled is not as easy as it seems.",
        "@alexisdm, can you explain that a little? Generally parameters to a function are fully evaluated before the function is called. How does the SLOT macro make it asynchronous?",
        "@vBx son where did I cry? I've just tried to explained to you that you didn't understand what I'm asking about.",
        "@NicolBolas 9 out of ten persons (who know C++ and Qt), if you tell them words signal/slot will immediately associate this with typical Qt pattern. One will not. I feel sorry for you.",
        "This is a string, not a function call: `SLOT(count()) == \"1slot()\"` (or maybe \"2slot()\" I'm not sure).",
        "@NicolBolas also there are persons who by reading tags (c++, qt) would immediately associate this question as a qt specific. As I've said, I feel sorry for you.",
        "@alexisdm hey, thanks once againg for setUniformItemSize!",
        "How are you applying the expression? Please post your code. Also please clarify what you mean with *but none of them seemed to work*. What exactly does not work? What is the result you get? `\\d` only matches a single digit, `^.*[0-9]+.*$` matches the whole string if it contains at least on digit. It appears you want `\\d+`.",
        "The answers below will find the numbers in your input. It is up to you to write a method that returns the values you want given a certain number. I suggest using a switch statement.",
        "please see the update question at [link](http://stackoverflow.com/questions/10117237/rename-file-using-regular-expression)",
        "remember SOHCAHTOA",
        "Well...stay cool @T.J.Crowder Sorry if I'm not as good as you! I failed ... ok? Can I?",
        "@RobW i did not try anything...i do a lot in programing, but not much when it comes to mathematics.",
        "This question should probably have the \"homework\" tag.",
        "@T.J.Crowder question edited.",
        "@AresAvatar and all that vote down thank you for your down votes now i can't ask more questions...i don't understand why you think this question will not help future visitors! I tryed to find the answer to my problem and couldn't find any, so here it is. If someone have the same problem in the future, here is the answer. The knowledge is so vast that no one knows everything and sometimes it's the little things we do not know, that make all the difference.",
        "it all depends.",
        "i will help you",
        "Formatting your code and data sure makes a difference. We put effort into our answers for you, please put some effort into your questions for us.",
        "Please have a look at the [FAQ](http://stackoverflow.com/faq) on how to ask a good question, and also maybe read this: [What have you tried?](http://mattgemmell.com/2008/12/08/what-have-you-tried/)",
        "Sorry guys, i am trying to store data posted via instant notification",
        "@zod please help me",
        "Yes, there is a way. But you'll need to show your actual html and javascript that you're trying to do this with. We're not going to write it for you.",
        "Show your code.",
        "can you show us how did you assign the id to your tag?",
        "this question shows a huge lack of effort both in researching and phrasing without actual code",
        "@micha How you know it'll be the first `h4` in the document to hide?",
        "im writing code for a spiceworks plugin it is java script but not like the normal js",
        "Never mind what it is, post it here, we'll see...",
        "thanks to the down votes now i cant post img just give me a sec",
        "@Teemu the code",
        "@user181891 there it is: `comment_Software:` is the id.",
        "buit if i try to alert the value of that id i dont get \"Software\"",
        "@user181891 Look at your earlier question, in one of the answers there were correct characters which can be used in `id`, colon is not one of them.",
        "so the `:` is the problem ?",
        "@user181891 Exactly. It seems you have colons in other `id`'s also, you've to remove all of them to get the page work.",
        "ok i will do that thanks so much for helping",
        "Haskell's type classes are not a form of object-orientation. They are a form of ad-hoc polymorphism, which you typically also get from object systems. But they do not couple data and methods, which is the hallmark of object-orientation.",
        "@sclv They do in fact couple data and methods - the type of the data determines which function (or which part of the function definition if you want to view it that way) is called.",
        "that couples the *type* of the data and methods! http://www.haskell.org/haskellwiki/OOP_vs_type_classes",
        "@sclv is right; Haskell typeclasses are much closer to OOP interfaces than OOP classes, but even that analogy isn't perfect. In fact, the closest thing to OOP classes in Haskell are simply [data types containing functions and monadic actions](http://www.haskell.org/haskellwiki/FAQ#I.27m_making_an_RPG._Should_I_define_a_type_for_each_kind_of_monster.2C_and_a_type_class_for_them.3F).",
        "@sclv Yes, and that is characteristic of object oriented languages. Only a minority associate operations with instances at all; in even fewer can that be described as the normal operation of the OO system.",
        "@sclv I dont think this is true (although it is an acceptable \"lie to children\").  If you dont think about the constraint system, typeclasses are just a slightly restricted object system.  In that typeclasses have 1. subtyping 2. implicit self reference 3. replaceable self reference (aka inheritance).  A typeclass is just a (parameterized) abstract class in oop while an instance is just an object that inherits from that abstract class.  With GHC 7.4 and some trickery involving `newtype`, `unsafeCoerce` and implicit parameters this correspondence becomes complete.",
        "I also think that \"couple data and methods\" is really independent from OO.  Consider Go as the example of a language where methods are separate from structs, yet it is very OOP.",
        "On the other hand, the naive view that typeclasses are equivalent to interfaces and that datatypes in Haskell are equivalent to classes in OOP that implement those interfaces is just wrong.  The typeclass system is a layer used for defining classes (in the mathematical sense, aka predicates) over Haskell types.  It just happens to be an Object Oriented layer to for defining predicates over Haskell types.",
        "@PhilipJF My answer in no way relies on OO being able to do everything that Haskell type classes can do. It relies on the Haskell type class system being able to do everything that OO can.",
        "@PhilipJF Don't know why I'm responding to this nonsense, but typeclasses don't have subtyping, don't have implicit self reference, and don't have inheritance. The \"Haskell's Overlooked Object System\" paper has a good discussion of why typeclasses don't do the job (and hence what it proposes instead), and I think the O'Haskell paper also motivate the differences quite well. Anyway, implicit parameters are not idiomatic Haskell these days, and unlikely to make it into a standard, and once you start to involve unsafeCoerce then you're clearly off the reservation.",
        "@sclv I'm not sure what either of those papers have to do with my claim.  The class per class encoding is clumsy, I agree. My point is more subtle.  Typeclasses in Haskell are classes over types.  We are all constructivist here, so for us to suppose a type is a member of a typeclass requires some sort of \"evidence object\".  Further, the language provides an automatic theorem proving system in the form of inference and global instances.  My claim is only that the proof language for this logic is OO, and it is helpful for reasoning about Haskell to be aware of this fact.",
        "The \"evidence type\" for membership in `Ord` is a subtype of the evidence type for membership in `Eq`.  Implicit this references and inheritance are what let you declare `m >> k = m >>= \\_ -> k\" in the definition of `Monad`.  To simulate this behavior with records requires finding a fix-point (as pointed out by Oleg), which should clue you in something is up.  The reason this shouldn't be surprising is that typeclasses sit on the other-side of the \"expresion problem\" from Abstract Data Types.  From William Cooks work we know that means they are probably objects.",
        "Obviously this object system is a restricted one, but you just need to look at Bruno Oliveira's work to know that is a non-essential aspect (see Scala's implicits).  My point about `unsafeCoerce` is that with some extensions and unsafe features you can actually get your hands on the Objects that bare witness to type-class membership  , and using implicit parameters you can construct arbitrary such instances at runtime (although it relies on the compiler not obeying its documentation).",
        "@PhilipJF the \"evidence type\" for membership in Ord (dictionary, I suppose you mean) isn't a subtype of the evidence type for membership in Eq. It's just that Ord membership implies Eq membership. An ord instance can't \"override\" Eq methods. I have no idea what you're getting at with the monad example -- yes if you encode monads with objects, then the encoding is object-y, but that's because you chose an object-y encoding to begin with! Anyway, this \"evidence type\" doesn't always exist. Other implementations of Haskell, such as JHC, show you can go very far without a dictionary encoding.",
        "@sclv A proof of membership in Ord is a proof of membership in Eq.  \"is a\" is the same thing as subtype.  The Monad example is about inheritance (not subtyping, they are separate) since unless a Monad instance overrides the default definition of `>>` it inherits a general one, but this general one uses `>>=` which is defined virtually.  This is what I was talking about in terms of \"implicit this parameter\" and inheritance.   The point that you dont have direct access to this object system and that it isn't always implemented directly, doesn't really matter.  It explains the semantics.",
        "But you can explain the semantics *without* an object system too. Does the fact that I can explain counting with pebbles mean that naturals are a *kind* of collection of pebbles?",
        "@sclv An object system is anything that meets certain criteria. You cannot say the same of a collection of pebbles.",
        "that is a good point.  I find that thinking about typeclasses as objects plus a Prolog like theorem prover (where every rule begins with a cute) makes it easier to reason about something rather complicated, and gives me access to a body of literatures and design principles that apply to my problem.  Thinking about C++ templates as a functional language sort of like Haskell makes them easier to reason about also.  I generally try to understand the weird edges of mathematical systems by describing them in terms of axioms I already know.  You dont need ring theory to explain integers.",
        "You have to be more specific. How do you want to send it? Do you have an established connection with the server? What protocol? Can it be socet or has to webservice.",
        "I want to send the list<int> through TCP, and I've already get the server and client connected. Now, I need send the list<int> data from client to server. I know the method send() is based on char* or char[]. I don't know how to deal with list<int>. Thank you very much",
        "you can turn the list of integers into a single string and parse it out on the other side.",
        "How many integers do you have? It could be good enough to convert int to string (snprintf() f.e) and send each one with send().",
        "I have 25 different values. I have to send the value one by one to the server. Which method should I use to convert it to string?",
        "I hope you aren't making something sneaky.  Like a virus.",
        "What do you mean by \"hide the app_name in my application\"?",
        "Guys? Why so many negative votes? It was a genuine question - the guy wanted to hide the activity name.",
        "-1 since no efforts made to search answer",
        "Ofcourse I tried to figure it out by myself but it didn't work.",
        "Take a look at http://stackoverflow.com/questions/4689918/move-image-from-left-to-right-in-android",
        "It almost good, but after the animation my ImageView return back to the origin position, and I don't understand why. I tried to override the onAnimationEnd method to set the image to the end position, but the image blink at once.\n\nMaybe it isn't the best way to make a simple card game.\n\nI don't understand how works android, this is my first days to change develop from flash to android.",
        "What fiddle? Where exactly is the problem?",
        "So...what's returning `null`?",
        "What is returning null?",
        "`document.getElementById('body')` \u2013 what element has the id body? And why do you perform getElementById and then take an index? There can only be one element with one id.",
        "how/where is `principal` defined? You never change that inside your totalF() function.",
        "And `payments` is not defined.",
        "Sorry all forgot to add js fiddle link. Please check the link now and more down votes, it was a simple mistake",
        "Wow! Really? Never thought about this!",
        "still looking for possible description or even solution to this cause I do need that clean file hierarchy by *pip* but with *setup.py* way.",
        "@DrakeGuan: You should change the title of your question to reflect your last comment. What's the difference between pip and setup.py isn't much of a question, it seems like you're actually interested in something a bit more specific.",
        "Sure, Thanks a lot!",
        "@DrakeGuan If you want the behaviour of `pip`, use `pip`.",
        "That's somewhat misleading, though - `pip` does use `setup.py`. I'm sure if you get the right options, or possibly use a wrapper script, it's possible to get the same results with setup.py.",
        "This is incorrect. In most cases, pip does download the package from PyPI, unzip it and run the setup.py script (albeit with some extra options). If you try to have pip install from a tarball for example without a setup.py, you'll get an error saying so.",
        "@ThomasK Sure, but that's not the question - the question is why the one does not give identical results to the other.",
        "@NoufalIbrahim In what way is this incorrect? Just because pip expects a setup.py it does not mean that pip does not provide any other behaviour.",
        "dude, you answer is just plain wrong. And downvoting my answer won't change that.",
        "@vartec How is my answer wrong? The reason OP does not get exactly the same behaviour from setup.py as from pip is because they are not the same programme, nor are they supposed to be. Whether or not he could use some combination of switches to achieve that is irrelevant.",
        "@Marcin: Obviously they're not the same program: they have different names. But your answer fails to highlight the connection (one calls the other), or explain how to get `setup.py` to do what the OP wants. So it's technically correct, but not useful. @vartec has provided what the OP was almost certainly looking for.",
        "@Marcin: are you trolling?",
        "@vartec Are you? I'm answering the question that was asked.",
        "@ThomasK That still does not make my answer \"misleading\" as you so charmingly put it.",
        "@Marcin: Implying that they're entirely separate when `pip` calls `setup.py` is misleading.",
        "@ThomasK Not really. `pip` probably also uses `list`, but it doesn't follow that they are connected. The question does not ask \"how can I re-implement `pip` myself\".",
        "@Marcin: In the context of installing a package, pip and setup.py are clearly connected.",
        "@ThomasK They may be \"connected\" but the question doesn't ask \"are they connected\" - it asks why they don't have the exact same behaviour, and the answer is because they are not supposed to. That's all there is to it; how they achieve those effects is not relevant.",
        "@Marcin: By strict literalism, yes, you have correctly answered the question. But the details are relevant: it's pretty clear that the OP wants some understanding of why they behave differently, or a way to modify the behaviour of one. It's like answering \"why do I perceive red differently from blue\" with \"because they're different colours\". Correct, but useless.",
        "@ThomasK What other answer is there? There is no reason whatsoever to expect them to have the same behaviour. You might as well complain that I haven't dumped the whole code for pip in my answer.",
        "@Marcin: Of course you can expect them to have similar behaviour: they both serve to install a Python package. It's different behaviour that needs explanation. As for another answer: @vartec's answer is a good start - providing a single option to `setup.py` makes it behave like `pip`. That's relevant and likely useful.",
        "@ThomasK Why does different behaviour need explanation? `pip` does not advertise that it provides identical behaviour (nor vice versa). In so far as they are supposed to be similar, they are similar: they install a python package. To expect a different explanation is like asking why you and I don't use the same writing style: neither of us has indicated that we would.",
        "@Marcin: Different behaviour requires explanation because the question is about the difference in behaviour. Where would humanity be if we never asked how or why?",
        "@ThomasK Where would we be if we constantly asked trivial questions? Different things are different. If OP wants to know about the implementation, he is free to look at the source.",
        "@Marcin: Almost all code questions could be answered by reading enough source, but asking can give more useful information more quickly. Re different things: see red/blue example above.",
        "@ThomasK The reason why you don't perceive blue and red as exactly the same thing is because they are not exactly the same thing. There is no deeper explanation than that. If you want to inquire into the mechanisms of perception, that is a different question.",
        "@Marcin: You're trolling, aren't you?",
        "@ThomasK Certainly not. Are you trolling? You are the one who is defending a question that amounts to \"why are two distinct things not the same?\"",
        "@Marcin: In both the OP's question and my red/blue example, saying \"because they're different\" does not convey any information that the asker did not already know. Assuming the question is posed in order to gain information, an answer that does not provide information has no value. A useful answer to the OP's question might discuss how the difference is implemented, or why developers chose different mechanisms. For the red/blue conundrum, a useful answer might cover wavelengths of light, pigments, and colour receptors in the eye.",
        "@ThomasK In neither case does the mechanism answer the \"why\" question: it amounts to a restatement of the fact that the programme/eye works in a particular way. You are essentially complaining that I didn't make up a question that like more, and choose to answer that.",
        "@Marcin: The details of the way that the programme/eye works can be informative and interesting. Given that the question is asked to gain information, if the literal answer to the question contains no information, we can infer that we have misunderstood what the asker wants. In that case, we can attempt to infer the question they meant to ask, and provide useful information. This process does not always work perfectly, but it's better than an answer with no information.",
        "@ThomasK You may doubt your powers of comprehension, but I am confident in my own. When someone asks a nonsensical question, I assume they don't know that what they are asking is nonsensical, rather than inferring that it is an oblique way of soliciting a general disquisition on the topics mentioned. In that case, informing them that their question is nonsensical is new information.",
        "@Marcin: No, the question can be clearly understood to have a rational answer, more specific than a general discussion. Possible readings are \"how can I make them behave in the same way\" (which vartec answered), \"how do they achieve different results\" (similar), or \"why did the developers choose different mechanisms?\" (we can presume the `pip` developers were aware of the other mechanism).",
        "@ThomasK the very fact that you identify three possible topics shows that all that can be provided is general information of some kind. SO is not about making up your own better question and answering it.",
        "@Marcin: SO is not about providing unhelpful overly-literal answers. To provide useful information, we often have to infer a 'better question'. The vote counts on these answers suggest other users think that providing some useful information is better than a literal but unhelpful answer.",
        "@ThomasK Leave the votes of others out of it - you are still arguing that I should make up a new question. If you want this to be a different question, go ahead and edit it.",
        "@Marcin: The votes of others became relevant when the discussion moved to what SO is about. In as much as SO is a community, what it is about is determined by the opinions of its members.",
        "@ThomasK Well, if you really want to argue about that, it turns out that SO users don't have to leave a reasoned explanation for their downvotes. For example, I am getting a bunch of downvotes on old questions, which I assume come from you (for obvious reasons) and vartec (whenever he sees my handle he is reminded that I once pointed out an error in one of his answers). So no, they don't really convey much information.",
        "@Marcin: I have not gone back to downvote your other answers, and I do not intend to.",
        "@ThomasK Perhaps vartec is feeling extra insecure today.",
        "@Marcin: *bzzzt*, that's an ad hominem. Thanks for playing.",
        "@ThomasK No, it's not an *ad hominem*. Look it up. OTOH, your comment *is* a childish attempt to provide an excuse to withdraw from the discussion.",
        "I **will** downvote any answer that is clearly wrong. @Marcin: if you can name any of your **correct** answers that I've allegedly downvoted, don't be shy, mention it.",
        "@vartec You know that I can't tell who is downvoting my answers, especially as you never leave comments. One presumes that is because you have no valid criticisms.",
        "@ThomasK: he means his great answers like: http://stackoverflow.com/questions/10129080/analysis-and-design-for-functional-programming/10129172#10129172",
        "@vartec I note that you haven't left a comment on that. I defy you to locate any inaccuracies in that answer.",
        "I'm not going to try to arbitrate on other answers. Withdrawing from the discussion, on the other hand, sounds like an excellent idea. @Marcin, good luck trying to argue the case for this answer.",
        "@Marcin: I don't have to. There are plenty of comments already. FYI I've also flagged that for moderator attention as *\"not an answer\"*. You keep using SO answers to boost your ego w/o any benefit to the community. You **will** get downvoted.",
        "@ThomasK There's no case to be argued. You have spent several hours complaining that I have provided an answer to the question asked, not to your preferred question. You could complain about every other question on SO on that basis.",
        "@Marcin: any FYI, your revenge downvotes **will** get revoked.",
        "@vartec Just because you string some words together, it doesn't follow that they make sense. You're the one whose fragile ego has lead you to engage in a campaign of downvoting my answers willy-nilly.",
        "@vartec Unlikely. It's good to know that you don't understand the downvote-reversing system.",
        "I really appreciate your work and comments on this thread. Actually those comments run beyond my expectation. I might need to re-check my question statements for clarity, or I should fire another question then~",
        "How do I do that in c++?",
        "It's subtraction, multiplication, addition, and square root, Kap. Which part of \"that\" do you need to know how to do?",
        "This is the formula for the Euclidian distance, it doesn't apply to the Earth since it's not a linear. The lat/long space is not a plane.",
        "@Spidey: you'll never convince those flat-earthers.",
        "You don't have x,y,z. You have latitude and longitude, a coordinate system where one of the coordinates is not parallel, on a spherical surphace to boot. Neither of your formulas works.",
        "@RobKennedy - I know how to do all of them (didn't quite understand it being in that form)",
        "@juanchopanza - really? I don't quite understand what you mean by neither of the formulas works",
        "@Kap First, the earth is kind of spherical, second, the parallels are curved on the spherical surface because they are not the shortest line between two points (the definition of straight). The meridians are. A useful formula has to take this into account. The first formula above can be a useful approximation when the distance isn't too big.",
        "Google for 'Great circle route'",
        "It would be nice to have a library that can, just even suggest for the review.",
        "What does this answer mean? Of course it is possible to check the text of python code for duplication, just like any other language.",
        "@Marcin I know that you can check it, however, the OP is asking for a library to check it for him (atleast thats what i think hes trying to ask)",
        "@PsychicOak There is no reason why you couldn't create such a tool for python. They exist for other languages.",
        "I believe the answer means you'd have to roll your own duplicate code checker solution. Someone else probably hasn't done that yet.",
        "@Marcin I know you can make your own, but OP is asking if there is one already made...",
        "@PsychicOak Your answer strongly suggests that it is impossible: \"there is no way to really distinguish whether it has repeated or not\"",
        "@Marcin Ok i will edit it now :)",
        "What have you tried? Are you getting errors? Do you have some code you can show? Please give examples of your array of words and your input string (how it starts) and what it should look like at the end.",
        "How big is your dataset that you need *the fastest way* to do it?",
        "We can't help you if you don't show what you've tried so far and what specific problems you're having.",
        "Yes, it is possible. What have you tried? Google is your friend.",
        "can you help me with that.. the code part..",
        "People will only put effort into responses if you put effort into your question. Requests to write code your code will probably be ignored, requests for help in a specific area or a specific sample would have a better chance of response.",
        "'TelephonyManager tMgr =(TelephonyManager)mAppContext.getSystemService(Context.TELEPHONY_SERVICE); \n  mPhoneNumber = tMgr.getLine1Number(); ' will this get me the number where the app is installed..?",
        "Don't kill the messenger :-)",
        "@juergend, considering his rep, I think he just has not had his morning coffee yet.",
        "@MarkTomlin oh. don't judge people by their rep. Considering the *code*, he have not a slightest idea what does his code do.",
        "@YourCommonSense, you have a perfect username for this site. But, I like to give people the benefit of the doubt.",
        "This question isn't particularly well phrased - it took the comments on the answers to actually work out what's _really_ being asked.",
        "@MarkTomlin well, unfortunately, I have way too much experience in both PHP and answering questions, so it leave no place for doubts... :(",
        "@CD001 that's known problem with this site. Most answers just triggered by the keywords in the question (or even just question title). People seldom trying to get the meaning of the question but rather tend to directly answer to some keywords. It is \"fastest gun in the west\" problem partially to blame for this. And whole Stackoverflow paradigm, which encourage votes, not real help.",
        "I strongly suspect you've misdiagnosed the issue. Please show a short but *complete* program demonstrating the problem.",
        "How would the compiler know if a public field of a public class is used? it could be used in an assembly that's not a part of the current build",
        "Seconding that I do not believe the issue is what you describe (\"inlines the values\"). The compiler would only do that for `const` - otherwise `ldfld` is used, and the JIT is not going to worry overly about \"is this assigned elsewhere\". The only things that might affect this are obfuscators and full linkers (like AOT in Mono). Incidentally, properties would be far preferable to fields here, IMO.",
        "Also: `[MethodImpl(MethodImplOptions.NoInlining)]` is not valid on fields, so I doubt that is your real code",
        "I have added more behavior comment in the code sample. I don't know why or how the compiler/jitter makes assumptions. All I see is what the debugger shows me, and that is no matter if the value is true or false, it will simply not perform the true part of the if no matter value in opts.Silent if optimizations are enabled but will behave correctly if i disable them.",
        "@MarcGravell you are correct, the statement does not work or even compile for that matter, I had pasted in there to mention that I have tried this avenue (without success) but I forgot to remove it when I pasted the code here. I'll remove it.",
        "please post `opts.Parse`.",
        "What the hell is `volatile` doing there? Like Eric Lippert said, if you are using `volatile`, you are probably using it wrong.",
        "Well I could post Parse() and all methods that go with it, but that would be rather voluminous and it is not the problem. Parse() works fine, the values a read fine, the debugger sees the good values... It's just that although after parsing opts.Silent is true(confirmed by debugger and watch) the code behave as if it is still false, and the same goes for the other variables. Well, this is no longer the behavior since I mark them as volatile, but it is when I remove it. Everything would be fine if it would also be allowed on doubles...",
        "@leppie volatile instructs the compiler to make no assumptions on the content of the variable as it might be changed by another thread at anytime (thus disabling some optimizations on it).",
        "@user611710: And there is your mistake. I bet you only have a single thread running, making this assumption pointless :) (Unless for some absurd reason you have `Parse` running as a thread).",
        "@user611710 \"everything would be fine\"... wait; your claim is that this doesn't work even for the `bool` one, no? Your sample is for the `bool` one... so: what is failing? the `bool` or the `double`?",
        "But to emphasise: \"I don't know why or how the compiler/jitter makes assumptions.\" - simple: it doesn't.",
        "I'm pretty sure that `volatile` didn't fix your problem, but just masked it. You clearly do something horribly wrong in `opts.Parse` but without the relevant code, we can't tell you what.",
        "just use [Mono.Options](https://github.com/mono/mono/blob/master/mcs/class/Mono.Options/Mono.Options/Options.cs)",
        "Your code (the one you haven\u2019t posted!) is almost comically wrong. This is why it\u2019s important that you post *all* the relevant code. Questions like this just waste everybody\u2019s time.",
        "@KonradRudolph I wonder how you can judge that is comical if you haven't seen it. If you don't know the answer to the question \"How to prevent optimization on a class field in C#\", please feel free to not waste your time with it.",
        "Don't worry, I won't. I just wanted to explain my downvote.",
        "@user611710: I'm still not seeing a short but *complete* example which demonstrates the problem...",
        "@JonSkeet Truly sorry, no longer access to work computer, i will have to post a follow up later. Thanks to everyone.",
        "@Henk The code that he didn't post, that would be crucial to answering the question.",
        "I'm on the edge of my seat waiting for this code!",
        "@user611710: When will you post the code? There are several of us waiting patiently for it.",
        "Have you even looked at http://api.jquery.com/css/ yet?",
        "[what have you tried so far?](http://mattgemmell.com/2008/12/08/what-have-you-tried/)",
        "I'm TOTAL numb in Javascript or jQuery",
        "What is the difference between powered on and rebooted?",
        "It starts at zero at a full boot, not at a restore from sleep or hibernation.  Not caring about this is important, not in the least because this behavior isn't promised anywhere.",
        "@sarnold: If you don't want to answer then don't. Obviously there's a difference in my case.",
        "GetTickCount can roll over, don't use it for long-running events. And being rude to people trying to help you guarantees no one will answer your question.",
        "I think sarnold was asking for a reasonable clarification; not least because a reboot does power-cycle the machine, making it unclear what you might have expected the difference to be.",
        "@ahmd0 : sarnold's question is extremely pertinent; the fact that _you_ don't recognize it as such does not warrant rudeness, especially if you expect anyone to help you after observing your attitude. I'll rephrase his question for you: \"What is _your perceived_ difference between powered on and rebooted?\"",
        "@Hans Passant: So, you're saying it's a reboot, right? Not a shut-down.",
        "That's a nonsensical distinction; what's the difference between a shutdown followed by a power-on vs. a reboot?",
        "@ahmd0, it's important here not to be rude to people you're asking for free help. :) Asking for more information or clarification isn't \"not wanting to answer\". Please try and be polite. (And there is absolutely no difference between a shutdown and a reboot; a reboot is a shutdown with a restart to the OS. The difference is only meaningful to the BIOS and hardware.)",
        "The problem is that nobody has yet figured out what the value is while the machine is shut down.",
        "You don't power on an OS.  You power on a physical piece of hardware.  Anyway, it should be pretty trivial to test whether `GetTickCount` returns a value indicating when Windows was started and when the hardware was powered on.",
        "The difference between a machine having been shut-down vs. rebooted is that a shut-down can be followed by a power-off, when reboot does not. Still, why does it matter what I need this for? Obviously I do. Otherwise I'd not ask it here. Is it also worth going into all this polemic vs. simply answering the question? And to sarnold's question -- my answer was to the way he worded it when I read it.",
        "\"*a shut-down can be followed by a power-off*\" Huh? How can a shutdown _not_ be followed by a power-off? \"*when reboot does not*\" According to whom? \"*Still, why does it matter what I need this for?*\" It doesn't -- nobody asked that to begin with. \"*Is it also worth going into all this polemic vs. simply answering the question?*\" Yes, because your question is nonsensical, and we need to make sense of it in order to answer it. Come back when you learn how to ask a proper question, or at least learn how to not be rude to people trying to help you.",
        "@ildjarn: What is not clear in my question? You reboot computer and it simply reloads OS -- the power is not turned off. When someone shuts it down, the power can be switched off (or computer can be powered off.) I want to know if rebooting a computer resets the tick counter. How else do you want me to word it to skip all this BS?",
        "\"*You reboot computer and it simply reloads OS -- the power is not turned off.*\" According to _whom_? _Why_ do you think this? We're back to _your perceptions_ here, which you have yet to adequately explain.",
        "I hope my edit clarifies things?",
        "@muntoo : Until someone describes the perceived difference (to the OS) between 'rebooting' and 'restarting' and 'shutting down then powering on', I doubt it.",
        "http://en.wikipedia.org/wiki/Rebooting_(computing)#Soft_reboot",
        "And, BTW, I am pretty sure this can be empirically tested.",
        "@muntoo : Again (regarding soft reboots), what is the difference to the OS, which is what's being queried here?",
        "@ildjarn Based on the answer below... nothing.",
        "@muntoo : Exactly my point. ;-]",
        "Too little information to answer this - ask a specific question and provide us with detailed information about your setup.",
        "I dont want to use any ready made libraries. I want to create a calender from scratch . I am not able to understand how to get the dates into their respective slots in a calendar table.",
        "This is a very generic description of your problem, not an actual specific question. Please see http://blog.stackoverflow.com/2010/10/asking-better-questions/ and try googling on how to ask productive questions that we will *love* to answer.",
        "It helps if you include code showing people what you are trying to do or how it's being applied. Otherwise it sounds like you want someone to write it for you.",
        "It sounds like you'd be best using a for loop.",
        "what is the code you have written to achieve this ?",
        "can u write the code here ??",
        "No, it's not possible to do that in PHP",
        "Wait wut, it doesn't loop through 10000000 but just 10000000? I don't get it.",
        "*facepalm* Its help with the CODE im asking for... I have not written any code yet with this. OMG!",
        "As far as I can tell that returns one address, not two.",
        "Show us the tables structure + output of the query.",
        "You should do some basic SQL tutorial, it will help you a lot more than asking here.",
        "In particular, you should learn the JOIN syntax.  The querybas originally written used the \"classic\" syntax; JOIN is the modern syntax.",
        "Because that isn't valid C syntax.",
        "It's not valid anything syntax...",
        "I would start on fixing error #1, not #28.",
        "Are you missing a using directive or an assembly reference?",
        "That's not a question, that's just an error message. Is the question that you don't understant the error message?",
        "SqlCommand command = new SqlCommand (query, _connection);\n                // Form1.connection.Open();\n                 command.Parameters.AddWithValue(\"@N_Securite_Social\", N_Securite_Social);\n                 command.Parameters.AddWithValue(\"@N_CCP\", N_CCP);",
        "Thats the msg i receive it and the q?is this sqlcmd doesnt know the cmd and when i type it the whole line goes red underlined sorry guys im knew to the C#",
        "i have add the sys.designer and sys.mangmt referrance and still the same prblem thnx aphelion",
        "It appears that you have created your own class called SqlCommand which conflicts with the SqlCommand class in the System.Data.SqlClient namespace.",
        "I voted to undelete on the assumption that @hans's edit made this into a complete question.",
        "I also voted to reopen for the same reason.",
        "What is your current code?",
        "I am writing python script. In which i have currently find the two times between which I want to search for string. The log file are automatically generated and I want to use this script to find if pattern exist in these logfile between two different time.",
        "That's not code, that's an explanation. People are not here to write the code for you.",
        "Quicksort is great because you can actually test the parts separately -- you can try testing the partition function to see if it works, then test the recursive quicksort separately.  (Also note that your definition of `random` might crash if `num = 1`.)",
        "What do you mean increase it? I can't increase it if it goes out of bounds.",
        "That last `swap (*pos, *i)` looks suspicious. I assume it's supposed to move the pivot value to its final destination but after the partition loop the value at `*pos` probably isn't the pivot any longer.",
        "You can accept an answer for each question you have asked. It appears marked as accepted for future readers, showing that the question has already has an accepted answer. You have asked a few questions and accepted none, which may put people off answering your questions. If you have not accepted answers because you don't consider any of them suitable, then you could indicate that in comments to answers.",
        "Alright I've done that Juan.",
        "Do you have a specific question?",
        "You're pretty much asking people to write the whole program for you?   Try doing it step by step yourself and ask specific questions as specific technical challenges come up.",
        "No, you will need to learn how to debug code. Besides, this looks like a learning exercise, so what good does it make to ask a broad \"fix my code\" question? Where's the learning in that?",
        "Well, I'm not looking for an instant 'walktrough' answer, I just want some help. I have just sat there coding for 2 days trying to figure it out. If you understand what I mean",
        "What happens? What works? What doesn't work? [We just went through this exercise](http://stackoverflow.com/questions/11145075/method-newbie-i-dont-know-how-to-debug-it) :( Also, I find it difficult to read the code without indentation and excess comments, but others may have different opinions regarding that.",
        "But you haven't said what the problem is! Should we *guess* what you need help with? All you have done is posting a bunch of code without any description of your problem whatsoever. You haven't even said what sorting algorithm you're trying to implement.",
        "It might also help if you mention which sorting algorithm you're trying to implement, what you're using as a reference implementation (if anything), etc. because even with the comments it's not clear how you're trying to implement the actual sort.",
        "What's `<<==` supposed to be? A less-than (`<`)?",
        "? I thought you'd figure it out... anyway: If the first element in the array if bigger than the second then the current smallestnumber variable (numsmall) then I'm gonna do that in the loop and put the numsmall in the sorted array as I go, I guess that's a bad algorithm but it is still a WIP",
        "Is this homework? This is the third time I've seen this same question from different people in the past few days.",
        "Stan, why should anybody need to \"figure out\" your question? Ask the question and take your time to explain it! Be [precise](http://www.catb.org/~esr/faqs/smart-questions.html#beprecise) and [explicit](http://www.catb.org/~esr/faqs/smart-questions.html#explicit). Most people answering here won't copy your code and try to run it, we read your problem description and run the code in our heads trying to see where things goes wrong.",
        "Well, why should I waste 2 hours searching for an answer? So far the only similar questions were sorting WORDS or using the _.sort_ method. So, why not?",
        "@Moderatorpleasedeletethis There's no meaningful difference between sorting numbers or words; the algorithm would be the same--and there are *tons* of examples, in many languages, showing tons of algorithms. The issue isn't, however, one of *what* you're trying to do--it's with the question itself.",
        "Am I missing the 2nd part of that?",
        "@Moderatorpleasedeletethis Yes, it would appear you are. And now you're adding `@@` variables, in a method--throwing random syntactical elements at a problem is only going to make things worse. Consider looking at something like [this](http://philcrissman.com/2010/07/18/how-not-to-write-sorting-algorithms-in-ruby/) or [this](http://eigenclass.blogspot.com/2008/10/sorting-algs-in-ruby.html) as a place to start writing sorts--right now you're kind of flailing at both coding and asking questions that will be responded to.",
        "@Moderatorpleasedeletethis Editing your two down-voted questions is likely hopeless; I'd start over. But here's the thing--don't just say \"help me with the code\". Describe precisely what isn't working, what your expectations are *in detail* (e.g., not just \"it should sort the numbers\"--no shit, you're writing a sort algorithm, unless it's a bogosort or random sort, we assume you want them in *some* order), and so on.",
        "@Moderatorpleasedeletethis Also, take the time to indent your code properly, trim unnecessary elements (e.g., useless whitespace), etc. If you need to describe what the code is supposed to, put a comment at the beginning of a block--not after every single line. Name variables so it's obvious what they are--don't make us think any more than we need to. Consider reading esr's [how to ask questions the smart way](http://www.catb.org/~esr/faqs/smart-questions.html) thoroughly, re-visit the SO FAQ I linked to yesterday, etc.",
        "You haven't explained what the exception is.",
        "What exception are you getting? Are you sure the actual connection string is correct (the correct server, the correct login credentials)?",
        "As a programming side note: use the `using` statement to scope your expensive resources.",
        "I put this as comment because I can't think that this is related to your problem. The syntax for AddWithValue is `AddWithValue(string paramName, object paramValue)`. What are you doing is: Add a parameter named @ID with value SqlDbType.Int, then the return value is a SqlParameter and you add the correct value, but... on the string FullName this wreak havoc.....",
        "I get this Exception:A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)",
        "-1 Comeon people this is no way to ask a question...",
        "Show your php code plz.",
        "add quotes to Received...",
        "-1 http://www.emilvikstrom.se/whyidownvote.html What have you tried? What have you read? What is your question?",
        "[What have you tried?](http://www.whathaveyoutried.com)",
        "Probably a control on the UI.",
        "-1 mind your f-words",
        "@Pleun. What're you talking about?",
        "Wait... What is the question?",
        "@Pleun im so sory, edited",
        "@gdoron What the f is? Not the best language for a newbie",
        "What kind of application are your working on, winform or webapplication",
        "@OndroTadanai: thx for editing. reversed my -1",
        "@Pleun. But there isn't an f word here...",
        "@gdoron : got edited.",
        "If you have to be like \"the results should be sequential\", you're doing it wrong.  \"Threading\" and \"sequential\" don't go together very well; threads run pretty much when they feel like it.  Consider it the price of being able to do two things at once -- you give up some control over exactly *in what order* they get done.  If you want stuff to run in a particular order, you'll have to do some synchronization (read: making threads block!) just to get what sequential processing gives you for free.",
        "any example we can check? or be more specific about error..",
        "You're going to have to describe exactly what \"doesn't work\" means. Errors in the console? Errors in layout?",
        "make a jsfiddle showing your code failing so we can test against it.",
        "You could just write `var rowCount = $(\"input.check-box-name:checked\").length`...",
        "Add and remove classes, not style attributes!",
        "Please learn to use the search function on Stack Overflow. This question has been asked many many times before.",
        "possible duplicate of [How can I calculate the difference between two dates?](http://stackoverflow.com/questions/4371757/how-can-i-calculate-the-difference-between-two-dates), [Number of days between two NSDates](http://stackoverflow.com/questions/4739483/number-of-days-between-two-nsdates)",
        "No one is going to write your code for you. Check out some [jQuery tutorials and read through the documentation](http://docs.jquery.com/Main_Page) and come back when you run into a specific issue or problem.",
        "And what is the problem exactly?  I don't see a question in your post.",
        "I just want idea to start. can u please specify me exact place to look in to jquery website?",
        "@jmoerdyk - I have index page that contains different news articels and using optgroup i want to display specific articles by clicking specific options.",
        "He just wants to insert html (using AJAX) when an option is selected (@ak1481 write this in your post).",
        "@EricG - yes, i want to do something like that. when ever i click on element  AJAX should display specific container of data withour reloading whole page. i found somthing like this $('#result').load('ajax/test.html #container'); but i dont know how can i use this in my case. Thanks",
        "Well, you wouldn't want to use the load function. This means that you want to do the ajax request when the DOM elements are actually loaded (you'll know the body.onload, when the body is done loading). You'll want to use the click/select/change. Consider my suggested solution below.",
        "what header are you using for `memcpy`? You need to include `string.h`",
        "Please add your code",
        "we don't know what your errors are, what your code looks like, what you are trying to do - so how can we possibly help?!?",
        "`#include \"source.c\"`pun intended.",
        "@wildplasser - No, you should never include a C file.  Only headers, and the headers should not contain function implementations.",
        "What is the compiler are you using? and please show your code.",
        "I'm sorry I can't show the code right now, I will post it in some hours (I'm at some work in a PC that's not mine)\nNim, basically the compiler is complaining that standard functions implicit declaratios (?!), which's headers files are included in my own header \"header.h\", differs from internal function.\nouah, I've included string.h, stdlib.h, stdio.h, etc... \nJack, I'm using the gcc c compiler, working from Eclipse CDT",
        "@Vladimir I suggest you build the file with the gcc -E option (stops after preprocessing) and check the output to see which headers and function prototypes are actually getting pulled in.  That might clear up the confusion.",
        "Thanks Andrew, I think that would've been helpful, but I've already solved it. It seems it was some trouble within eclipse, because I right clicked one of those functions, selected Source->Add includes and it solved the problem (but didn't added any header).\nThanks again for being the only one with a simple answer to a simple question.",
        "`x` is scoped to the function assigned to `a`. That last `alert` never  actually appears - you get a SyntaxError because `x` is not defined.",
        "There is no way you will get 13, you will get 'x is not defined' because x is scoped inside a. Maybe you have set x = 13 somewhere in the global scope also.",
        "http://jsfiddle.net/MYbKT/ As @JamesAllardice said",
        "There is no possible way that that alerts \"13\".",
        "If you're testing your code in a developer console, you need to be sure to refresh the page to clear any previously set `x` globals.",
        "@Pointy Please check http://jsfiddle.net/HJ4vK/6/",
        "@SoI - The fiddle you are linking to is not alerting \"13\". It alerts \"10\" because you are alerting the value of `aa` inside the function assigned to `c`.",
        "@SoI: Your fiddle shows the last alert as `undefined`. What's the trouble ?",
        "Done. No 13, which in the case of that fiddle is even less surprising than for the code you posted, as the fiddle lacks the last `alert()` call.",
        "Hi All, I am agreeing my mistake.. I misunderstood...",
        "What might have been the case is that you forgot the `var` in front of the x which makes it a member of the global object.  In this case, the last alert would give you 13. However the `alert(typeof x)` would give you `\"number\"` then.",
        "why downvote? Question is really clear.",
        "Not my vote but I'll guess that it was a comment on the amount of research done before asking: http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocObjectsClasses.html#//apple_ref/doc/uid/TP30001163-CH11-SW6",
        "I saw that, but it wasn't so clear to me, that's why I asked. Also, I wrote my opinion..",
        "_Please tell me the SQL_ - here we would generally rather you have it an honest go, and then someone will help you with a more specific query. It's pretty mandatory to provide a `CREATE TABLE` statement so people can get an idea of what you're working with too `:)`",
        "This is just the usual way you set data in the adapter and doesn't have any relation with the described problem.",
        "Very basic stuff.. 1 second google: http://php.net/manual/en/reserved.variables.post.php",
        "I've tried searching on google and I've tried many different methods but they do not seem to work for me as I'm using an array variable. I've also used $_POST[$row['myfield']]; \n$_POST[\"{$row['myfield']}\"]; \n$_POST[\"$row[myfield]\"];",
        "**NO**, you can not do that from a website. And I am very glad you can not. Also, Control-Alt-Delete is *meant* not to be able to be captured by a normal program as a security feature (so that you know that the resulting prompt could only be from Windows itself)",
        "No, you can't do that with a website. You *may* (I don't know for sure) be able to do what you need with an application, however. You don't necessarily need to prevent them copying text from another application, you may be able to get away with only preventing them from pasting to your application.",
        "I know it is usurp..I want to create a XX thing which will allow user to solve some question but should not copy answers from their hard drive...is it possible to do anthing close to it....or any other way to do so?",
        "@AnthonyGrist: the thing is user can just read text from notepad and just type in my app...I don't want that.",
        "I WANT USER TO FILL ANSWER SHEET ON COMP BUT THEY CAN EASILY TAKE ANSWERS FROM THEIR HARD DRIVE...\n\nIS THERE ANY WAY???????????",
        "@Pointer: perhaps you could instead warn the user that they should not leave your application during the question, then detect if they do and treat the transgression appropriately.",
        "What if the user has another computer handy?",
        "@Pointer: all caps is typically read as shouting.  You should perhaps be mindful of how you appear to others reading the site who have no reason or requirement to help you.",
        "@Pointer: They could also easily take answers from a piece of paper.  How will you stop that?",
        "@DanPuzey:hey sorry...",
        "@DanPuzey: see copying from a piece of paper is old and classic way it can not be stoped unless you keep a supervisor.so consider a supervisor in the room with students.",
        "If you have a supervisor in the room, they can also watch for students using other applications.  Windows is explicitly designed so that you *cannot* stop people getting to the task manager.  That said: I guess that a custom Windows Shell might be able to override this; I'm not sure.  But now you're getting into rewriting Windows Explorer...",
        "@Pointy : no there can be a supervisor for that",
        "@DanPuzey : no supervisor won't be able to look at everyone's computer and students have their own laptops and students are more smart than supervisor...this is the condition here in india...bad luck..",
        "@DanPuzey : there has to be some way...may be not possible with an app but may be possible with something else.i don't know?",
        "No, @Pointer, this is what everyone's telling you: Windows is explicitly designed to *prevent* what you are trying to do.  *It is not possible with Windows.*",
        "@DanPuzey : ok..so..but answer given by Dampsquid down there holds some attention..I havn't tried it cause i'm not on a windows machine now.",
        "First thing this made me think of was that god-awful Metropolitan Police ransomware. Stuff like this shouldn't be done for a reason.",
        "It *is* possible, I've seen it firsthand, but I don't know how it was done and I don't particularly want to.",
        "To be honest, you are all a bit quick to judge from the question alone. There are valid applications where stuff like this is useful or even mandatory: cashpoints, school assignments, kiosk apps in production lines, ...",
        "@phresnel - we were quick to judge because the question did not contain important, relevant information.  The phrase 'kiosk app' would have prevented all the aggro.  The point is that such apps as you mention are run on secure hardware, often with special human-interfaces, eg. keypads, touchscreens, not a standard PC keyboard.  The desire of the OP can certainly be met, (on XP anyway, as anyone who has used a hotel lobby pay-per-minute internet kiosk will know), but I'm not sure how it's done - it's probably non-trivial.",
        "i landed on this page http://www.sitekiosk.com/SiteKiosk/Default.aspx\nthey says \"Protect your public PCs and prevent user access to the operating system\"",
        "now i know either i can buy this software or create one for myself..:)\n\nbut i don't know how to create those? are they like windows app written in low-programming languages or c++ or something...like how they create such kiosk software which runs on windows machine and converts it into a kiosk..",
        "Congratulations, you have signed up for [a game of walls and ladders](http://blogs.msdn.com/b/oldnewthing/archive/2011/03/10/10138969.aspx). *No one wins this game.*",
        "OK, so I tried these commands:  \n  \nsudo apt-get install git  \n  \nsudo adduser \\  \n    --system \\  \n    --shell /bin/bash \\  \n    --gecos 'git version control' \\  \n    --group \\  \n    --disabled-password \\  \n    --home /home/git \\  \n    git  \n  \nsudo cp id_rsa.pub /home/git  \n  \nsudo chown git:git /home/git/id_rsa.pub  \n  \nsudo su git  \n  \n$HOME  \n\u2026 shows id_rsa.pub  \n  \ngit clone git://github.com/sitaramc/gitolite  \n  \nfatal: could not create work tree dir 'gitolite'.: Permission denied  \n  \nHow do I set those permissions correctly?",
        "git clone git://github.com/sitaramc/gitolite will be trying to create a folder gitolite within the current folder you are in. You're probably in a location that is owned by root.",
        "Ah, so added these and seems to have worked:\n  \nsudo chown git ../git  \n  \nsudo chmod 700 ../git",
        "The package is not broken, you just need to `dpkg-reconfigure gitolite` in order to setup the gitolite-user.",
        "What exactly are you asking?",
        "`if` \u2260 `jump`. At the very least, `if` = `compare` + `conditional jump`. A class is typically a data structure, containing data, pointers to virtual methods of the class and the pointer to the class' ancestor class (if any), from where it's derived.",
        "What is the data structure of C++ class?",
        "Beside the fact that it is \"kernel\" not \"kernal\" your answer is not entirely correct. Modern viruses (and with modern I mean everything after Windows 98) don't interact with the \"kernel service\" at all, everything's done within the user space. The fact that Linux has not much viruses (there are of course viruses for Linux) is that it has a pretty good permission management and - the most important fact - the most Linux users aren't those: \"omaigosh JustinBieber.NewSong.exe! I MUST hear it NAO!!!1111\" users which click and install everything without any clue.",
        "Also, Linux is not that much used as Windows - writing viruses for it would not cause as much damage as the authors of viruses want to achieve. \n\nUser space applications don't communicate with the kernel service, they call special functions provided by the kernel called syscalls.",
        "To all visitors of this question, be aware that this accepted \"answer\" is from the same person that asked the question. Form your own opinion whether history.js works for you. Personally, I implemented it within a day after doing a lot of research and seeing so many people recommend it.",
        "Uh, history.js worked fine for me.  It took me a few hours to tie it into our website, and everything works well (including IE support).",
        "Are you sure this (still) works with the latest version of Safari?\nWe've had P3P headers for years, for IE, but Safari's still broken.",
        "Yes..works with all browsers including latest safari 5.1.5",
        "Try clearing all of your cookies and test again.  The problem doesn't show itself if your browser already has cookies for your iframed site.",
        "Hmmm, I can't get the P3P headers to work either. They still work in IE though!",
        "This used to work. But for the most recent version of Safari it does not. Clear your cache and try it again....",
        "Definitely not working with 5.1.7 (7534.57.2) with the P3P headers.",
        "Does not work for me. Cleared everything and used this header. Cookies still are not set in iframe. Using Safari 6.0. Maybe you changed the default cookie preferences.",
        "I want to state that this solution works. make sure you DELETE ALL cookies on safari. And then try this.",
        "Are you working in C# or Java?  We can't tell.",
        "i worke in both of them",
        "@user1781384, So you're looking for both a C# solution and a Java solution??",
        "no i answered in general  i want c# solution",
        "@user1781384, Then next time, don't tag `java`!!!!!!!",
        "but i want to know the solution in java too ,for the next time",
        "It looks like you've already got the code you need. What's the problem? Also, we have no idea whether this is ASP.NET, WinForms etc. Please read http://tinyurl.com/so-list and improve your question.",
        "\"I do need the email functionality for testing other stuff\"",
        "That implies the OP is solely using `mail()`. Not considering any flexible alternatives that directly communicate via SMTP.",
        "Did you just list every language you know?",
        "If you want a generic solution there's an `Language Agnostic` tag you should be using.",
        "Think about how recursive functions are implemented by the compiler, then you'll have your answer.",
        "Have you tried it?",
        "Yes, it works :)",
        "syntax for what, identifiers ?",
        "Did you try it? And **why not**? Also even if it is valid _syntactically_, it is not wise because of the _semantics_ to use an `int` with the name `\u03c0`. As you might have heard of it, `\u03c0` is a mathemathical constant...",
        "Should surely be **double** \u03c0? Unless you want to redefine it as 3 or something. ;)",
        "Yes, its a valid syntax.\r\n\r\nreffer this link http://stackoverflow.com/questions/12857340/naming-restrictions-of-variables-in-java",
        "Yes it's a valid variable name.\r\n\r\n[Refference link][1]\r\n\r\n\r\n  [1]: http://stackoverflow.com/questions/12857340/naming-restrictions-of-variables-in-java",
        "Yes it's a valid variable name.\r\n\r\n[Refference link][1]\r\n\r\n\r\n  [1]: http://stackoverflow.com/questions/12857340/naming-restrictions-of-variables-in-java",
        "Don't cast so much; use generics on that HashMap!  Also, use a foreach, not a while to iterate that, the code will look way more readable!",
        "@BalaDutt if you improve your answer, the guys will give you points :)",
        "Improve your function & variable names too, @Bala.",
        "*how to recognise capital letters and not just lower case* - If you recognize lowercase, what's the problem of recognizing capital letters?",
        "Please get familiar with the concept of [SSCCE](http://sscce.org/)",
        "Not just code explain what you're trying to do in code next the problem",
        "possible duplicate of [How do I compare strings in Java?](http://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java)",
        "i only put my problem up last time and everyone wanted the full program  ill do that now then",
        "in the search it doesn't recognize capital letters that's the problem i am having it only recognises lower case and if you type an upper case letter the program closes.",
        "write a test in [jspref](http://jsperf.com/) and profile it",
        "Please show us what you have done. What code are you comparing?",
        "Depends what your code is now (\"pretty clear\" = ?), and what it is going to become (\"proper objects\" = ?). Profile.",
        "@JoeFrambach I believe the script can files can be viewed on the site.  I'm not sure if I otherwise post all of it here or???",
        "@LightnessRacesinOrbit excuse the lack of clarity, in the above list of functions anyplace you see fnTimerXXXXXX that function would become part of the timer object.  Similarly, all fnMenuImgXXXXX would become part of the menu image object.\nAdditionally, the variables specific to those functions would be incorporated into the objects.\n\nBut would that be slower than leaving it as is?",
        "Now I get it, @JoeFrambach is right, Ling's Cars (who use outrageous sales techniques) would like the site.  It was an educational work and with the mouse over events currently turned on it is amusing but busy and annoying.  Despite appearances, nothing is for sale on the site (except maybe a used car.)",
        "@ArunPJohny I will do that (jspref.)  Although the question is important, I have to convert my script (to object literal notation) anyway.  When that is eventually done I'll put it on the site and place a link here.",
        "@LightnessRacesinOrbit I only half answered your request for clarification   \n\"proper objects\" = objects created using object literal notation.  All use of the word object refers to that as opposed to a regular object under JavaScript.",
        "@DHorse: I have no idea why you have this requirement. There is no distinction between objects initialised with object literal notation and objects built up in some other fashion, beyond syntax at the point of initialisation. Absolutely none at all. It's like asking how to convert a \"car\" to a \"proper car\" where \"proper car\" means the car was built in Japan rather than Korea. It's meaningless.",
        "@LightnessRacesinOrbit The requirement is mainly educational.  I guess it boils down to this.  I currently am not wrapping my functions within objects but that would change if I use that style.  If I understand your answer, object literal notation is an issue of style and will have the exact same performance as other JavaScript objects that contain functions.  I should research performance issues in JavaScript relating to dereferencing where objects are concerned.  I think...",
        "I don't know what you are doing with your edits here; you have added a huge block of code and other information twice; once before it got reopened, and then you removed it and added it back recently.",
        "@AndrewBarber - See the discussion here: http://meta.stackexchange.com/questions/189591/is-sos-programmers-site-a-better-place-for-advanced-questions/189595#189595",
        "@DHorse: Yes, more or less. Whether you created an object with object literal notation or not has no bearing whatsoever on the object itself -- it's just an initialisation syntax.",
        "You should read Objective-C tutorials, it's not that easy as you think. The main diference is, when declaring methods in Objective-C, static ones are declared with a preceding \"+\", and instance method with a \"-\". Also the syntax is WAY too different. You won't get it \"just seeing examples\".",
        "First of all you should learn Objective-C.",
        "I think if anyone manages to answer this, most of the people new to Objective-C will understand it much better!",
        "yes transform BUGGY Java code to Objective-C. I recommend to start from learning basics of both languages.",
        "Marek, Java is a bit easier to understand, thats why Im doing prototypes of my apps in Java... Also I know more than basic of Objective-C as I have my app on the AppStore, but I never used return methods by now when I need them!",
        "On a side note `if(card == \"randomcard\")` will not work in Java. You should use the `.equals()` method to compare strings.",
        "Klara I changed my question for all of you to understand easier what I want, also I found out myself how to do the calling methods and return NSString method, also == works in java, but .equals() is better :)",
        "Objective C is no different or harder to use than Java. The syntax is just different or not what you're used to.",
        "As an aside, `card == \"randomcard\"` will work *sometimes* in Java, but it's comparing to see if the references are the same, not whether the string contents are the same. Some Java implementations will intern *some* strings, so *sometimes* that line of code will work. (Objective-C exhibits similar properties.)",
        "Actually, in Objective-C, the == syntax compares memory locations of pointers, so this will never work.",
        "It will only work sometimes. When you declare a literal NSString (@\"some text\"), you are assigning a memory space and if you use that @\"some text\" again, it will be the same NSString used before (the same memory address). That's done automatically by the compiler, because NSStrings are immutable and it will be safe to do it. That's why, if you do (@\"some text\" == @\"some text\") it will return YES.",
        "@AlejandroIv\u00e1n I didn't know that, thanks for pointing that out.",
        "@SevenBits http://stackoverflow.com/questions/3703554/understanding-nsstring-comparison in this question, the accepted answer gives a more accurate tip about this specific case. Happy coding!",
        "What was the error? Did you try printing the string to make sure it represented a number? Why `split(\"\")`?",
        "Please show what your input looks like and what your expected output should be",
        "What is inside `dbc.php`?",
        "What is `$dbc`? What's inside dbc.php class?",
        "where is `$dbc` declared ?",
        "oh no, not again :)",
        "dbc.php is the file that contains the connection code\n....\nthank you all I have solved the problem =)",
        "At the very least, you know that you are writing a python script that is giving you an error that is saying something like \"Not all arguments converted during string formatting\". So, you could have titled your question \"What does the error message 'Not all arguments converted during string formatting' mean?\" As it is, your current title is not helpful.",
        "\"But this is not working\".  Any error messages you can share?",
        "What doesn't work? #What error do you get? What have you done to troubleshoot this?",
        "I need a copy and paste canned response for PDO/MySQL related...  Use PDO.  http://stackoverflow.com/questions/6980792/php-pdo-mysql-queries",
        "@ficuscr: Well, [here you go](https://gist.github.com/MadaraUchiha/3881905).",
        "what is has_vip?",
        "sorry changed it",
        "How are you *calling* this function? We need more context. `has_access_card` is a string here, but where that came from is not visible.",
        "what is has_access_card ?",
        "\"or they have a Access Card as indicated by has_access_card\"",
        "can you include the calling code?",
        "this makes no sense(returns a constant if you initialize the variables) and doesn't even compile because you use uninitialized variables.",
        "I tried. [This is what I got](http://i.stack.imgur.com/nIK7N.png). Even after fixing this, more errors. Even after fixing them, this code won't give any random values. Voting to delete this totally wrong/misleading answer.",
        "`l1` and `l2` are strings but look like lists and `l3` is a string but looks like a dict. I'm curious as to why you need strings here.",
        "Your desired `l3` seems weird; is the `=` a typo?",
        "If it isn't every answer on the page(at this point in time) is wrong.",
        "Please choose a language, and remove all the chatter from the question.",
        "*if the guy types in \"haha lol XD\"*  ....then you should probably beat the crap out of him.",
        "@SigTerm haha lol XD",
        "Did you try to look at what was in `height` ? You should have before asking SO. See [Using the console](https://developers.google.com/chrome-developer-tools/docs/console).",
        "It is not an integer?uhmmm maybe a string",
        "Just look, don't guess...",
        "You're missing a `)` in your if",
        "Count the opening and closing parenthesis.",
        "This question appears to be off-topic because it is too-localised.",
        "You lost me at `break a loop until`. You don't break a loop *until*, since you can only break it *once*.",
        "Did you try looking for \"loop javascrip\" or \"javascript interval\" ? Do it.",
        "break the loop when your condition returns true, wait 1 minute and use recursion to do the exact same thing.",
        "Come one, what's the code you've attempted?",
        "I tried to do this: \n        output_file=('fou', 'w')\n line1=names[1], ID[1], Income[1], tax[1]\n output_file.write(line1)\n\njust to create the first line but I'd need to create a loop to have it retrieve the first lines from each list, then the second lines from each list, etc. and I was looking for a more streamlined way to do it.",
        "Hint: try `zip()` and then iterate and print to file",
        "They're going to be nearly, if not completely, identical. But if you were curious, why not just run a test and find out for yourself?",
        "I want a logical explanation: a computer science explanation.",
        "Good luck getting one.  I would expect these to be totally identical.",
        "A logical explanation of what, exactly? *Why* they're nearly identical? Because they're essentially the same comparison.",
        "What's the difference between a duck?",
        "`AsEnumerable()` will cause the `Where()` function to be invoked by Linq to Objects and not Linq to Entities.",
        "Doesn't match `Jean+Fran\u00e7ois@anydomain.museum`",
        "Is the accented `\u00e7` valid? I can't find any mention of these characters, accents or diacritical marks in the RFC 5322 specification.",
        "It is most specifically _not_ valid because the RFC822 headers of an eMail message (even in the latest RFCs that update/obsolete/supersede it) _must_ be 7bit. Any encoding of such characters would then use ASCII characters to encode them, which would be valid again.",
        "Adding a reference to a DLL in another project's bin directory is typically a Very Bad Thing, especially if the projects are in the same solution and you have a build server set up. It will cause headaches.",
        "Circular dependencies between projects is a really bad idea, and will  give non-reproducible builds. Every time you build, you will reference the DLL from the previous build.",
        "This is horrible advice - and only artificially extends how many more fragments you can pack in - this problem still remains. Google explicitly states not to use this to address memory leaks.",
        "What other variables do you have in the code? I see `$pass` but is there a `$username` variable as well?",
        "No, I don't have the variable $username yet. How to set this up and connect with the value in my mysql database?",
        "You should never store the password in plaintext.",
        "All I can add to that is with Silex there isn't so much configuration to deal with like Symfony, you can just write code very quickly, I would recommend Silex for prototyping and testing, small apps",
        "What would you use instead of PHP? And why?",
        "PHP = cheap deploys, cheap starts... with Java you can't get the cheap servers, but if you're gonna have your own servers anyway, Java is easier to work with, it's more efficient in processing, and also something the architecture of application servers like tomcat is much better suited than httpd for such tasks IMO. Of course there's plenty of options, but if you're starting you want to go for the big ones so you get the support.",
        "What is this tosh? Such a good thing it was deleted...",
        "if you guys don't like my opinion just post something else... it is a matter of opinion after all, I changed some of my phrasings, I think some people got very sentimental about this",
        "No, it's not possible.",
        "lovely idea, but this is NOT how it works. your reply is not an answer and shouldn't have been posted as one.",
        "@nyne An altogether wrong answer is still an answer.",
        "@jack his \"answer\" is worded in the form of a suggestion, as if he were making a feature request. Thus he was not attempting to post a factual answer, but rather voicing an opinion. His input would have been better delivered as a comment, in the manor that this very exchange between the two of us isn't being posted as answers. I know this is coming across as high horse, but people really should read the rules of the website before posting.",
        "This is not possible.",
        "The response does not answer the question being asked.",
        "Using an if in nginx configs is strongly not recommended: http://wiki.nginx.org/IfIsEvil . Rather use two server blocks as suggested by @Gerry",
        "@Jrgns: Also,`rewrite` is mentioned as one of the two \"100% safe things which may be done inside if in location context\" in the nginx wiki...",
        "If this gets enough down-votes that its value is negative will the system still retain it as the selected answer?",
        "This (or similar) solution is acceptable in some cases. For example, if you have regex or wildcard `server_name`, such as `server_name ~^.*\\.mydomain\\.(com|net|org)$` you probably don't want to have code duplication with other `server` blocks, so you may use something like `if ($host ~ \"^www\\.(.*)$\") { #do redirect }`. BTW, this `if` is not in `location` context ;)",
        "I just tried that and it didn't work. I couldn't find acceptsFirstMouse property on NSView.",
        "@PeterDeWeese, it seems you have to subclass and return YES in `acceptsFirstMouse` because it isn't a property of NSView.",
        "Got no idea about this chaps but I solved my problem by changing the design. Thanks",
        "this answer doesn't work.",
        "@Leo, why did you accept the answer if it didn't work?",
        "Probably because accepting answers gives points to both guys ;)",
        "I'll delete my answer to reduce confusion.... Actually I can't because it is accepted. I did add a second one. Feel free to flesh out.",
        "PHP sessions are not stored in RAM but as files on the disk. And who told you they are lost when the webserver is restarted?",
        "@ThiefMaster - I didn't realize PHP sessions were stored on disk. That said, my point on durability stands. If the server crashes (as opposed to restarts), you lose your session data. With Redis or MySQL backed sessions, you have better durability.",
        "Even then you don't necessarily lose them. Unless the OS crashes and the session file is damaged or wasn't actually written to the harddisk yet.",
        "I would also think that if redis is installed on the same machine as php/the webserver, then it would not count as reading over the network",
        "Given that PHP native sessions are stored on disk, the point of Security is no longer valid.",
        "`%` is just a language function, like concatenation or multi-line strings. Using external resources (like an extra file that's not included in the quine) is plain cheating.",
        "Actually, `import` is just a language function, like concatenation or multi-line strings.  Using external ressources (like using `#include <stdio.h>` in C or linking the standard library) is perfectly valid in quines (else there would be no quines in compiled languages).  However there is a good cause why not to allow too advanced high level functions in a language, like languages allowing introspection (and there are introspection modules for Python readily available).  Hence what I wrote:  The consequence from outlawing `import` is to outlaw `%`, too.  Sorry folks!",
        "Do you outlaw %s in C quines, too?",
        "I definitively call it cheating.  `printf` is a high level library function, not a basic language construct.  If you implement something like `printf` in your quine that is ok.  But abstain from higher level library functions, only use basic I/O, please!",
        "Adding one thing:  The only thing where the use of the `printf` function could be acceptable in C Quines is for the (exact!) usage `printf(\"%s\",s)` in situations, where `printf(s)` might abuse the formatting function of `printf`.  Compare `f=printf;o=\"%s\";f(o,s)` saves 1 byte compared to `f=fputs;o=stdout;f(s,o)`.  I would call this the only possibly legitimate use of `printf` (or `%s`) in C Quines.  There might be similar uses of `%` in Python, but I don't think those constructs are shorter than the direct output.",
        "As far as I am aware, the purpose of a quine is to write a program that outputs its own source without external inputs. % does not use an external source. Import can be viewed in two ways. Either you consider the second file an external source (thus breaking the rules) or you consider the imported code as part of the source, in which case your quine does not print out the \"full source\". Thus % does not violate quine rules, and your import does.",
        "@vastlysuperiorman: `touch nix.py; python nix.py | cmp nix.py -`.  However `nix.py` (the empty file) is no quine.  Read: With quines, it's simply is not that simple as you probably think.  Also: import does not use external sources, as this is compile time, not runtime.",
        "@Tino You \"outlawed\" `import` statements [here](/questions/6223285#comment30541410_18831770)",
        "@\u0388\u03c1\u03b9\u03ba\u039a\u03c9\u03bd\u03c3\u03c4\u03b1\u03bd\u03c4\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2 If you agree to my statement there, you also agree, that `%` is cheating!?!  As my argument is:  `%` is cheating, iff `import` is cheating.  This means, either we allow both, or none.  And again, I repeat: `import` is not accessing external resources like `#include <stdio.h>` isn't cheating and linking in standard C libraries isn't, too.  Only using too high level functions is cheating!  And my argument is, that `import` is even a lower level construct than `%`!  So using any is cheating.  BTW:  Why am I downvoted while http://stackoverflow.com/a/18521084 is upvoted?",
        "@Tino Please cool down a bit. `%r` is just 2 characters of the string. The operator `%` that uses them is just an operator, not an external thing. The `repr` builtin is also a builtin, not a high-level function.",
        "@\u0388\u03c1\u03b9\u03ba\u039a\u03c9\u03bd\u03c3\u03c4\u03b1\u03bd\u03c4\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2 Thanks for noting this!  Until now I focused entirely on `print _%_` being something like `printf(a, a)` which usually is considered cheating in C quines.  I fully oversaw this `%r` which is even worse!  It uses `repr()`, which is language introspection.  Do you really think, language introspection shall be allowed in quines?",
        "@Tino I can't seem to understand you I guess. Also, why shouldn't it be allowed? It's just that you can't read input and you can't have an empty program.",
        "@\u0388\u03c1\u03b9\u03ba\u039a\u03c9\u03bd\u03c3\u03c4\u03b1\u03bd\u03c4\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2 Sorry, I meant [Reflection](https://en.wikipedia.org/wiki/Reflection_(computer_programming)).  Reflection allows a program to look at its own source code.  [This commonly is considered cheating in quines.](https://en.wikipedia.org/wiki/Quine_(computing)#.22Cheating.22_quines)  Please note that we are at 13 comments for 13 downvotes now.  So I thank you very much to reach the recommendation for [\"a comment per downvote\"](http://meta.stackexchange.com/a/2373) without need for spam.  I'll now stop commenting until the need for comments arises again.  Merry Xmas!",
        "[PPCG has a good definition of quines](https://codegolf.meta.stackexchange.com/questions/4877/what-counts-as-a-proper-quine).`repr()` does _not_ use reflection. It is a standard function that takes string inputs and outputs other strings. An example would be does `repr(input())` read the source at all? The string just happens to include part of the source, as the source defines the string (As what else would when hard-coding a string?). And `%` on a string is just string formatting. Formatting is also a function that doesn't rely on the source, just the arguments (i.e. no side effects.)",
        "Dont use fixed path for SD-card directory, instead you should use **`Environment.getExternalStorageDirectory().getPath();`**",
        "String path = Environment.getExternalStorageDirectory()+ \"/Images/test.jpg\";\n\nFile imgFile = new File(path);",
        "OK you should use instead of this..",
        "Ok, but i don't want to read a file from sdcard, i want to write a drawable resource in a file...",
        "completely incorrect answer",
        "Well, it may be a correct answer, even if it's not an answer to this question. :-)",
        "I'm surprised to see that this answer has been accepted. As per the man page, -quality works with JPEG/MIFF/PNG compression level. In fact, the posted code does not reduce the size of gif files - at least not on mine.",
        "Yeah, this doesn't work. Produces an exact duplicate of the gif.",
        "According to other sources on the web it gets considerably better with the `-layers optimize` option, but it still behaves far sub-optimal as `convert` sometimes *increases* the file size.",
        "I've never seen a -23 answer before. Err, sorry -24.",
        "Unlucky the guy's answer got accepted because that pins the answer up. You often only see a few because they sink to the bottom pretty quickly so nobody pays attention to it. :)",
        "But I will need to run `forever` node module on every boot up?",
        "Yes. It's useful in cases where you run your app from the shell and want to exit the shell without stopping the app. It also restarts the app in case the app terminates on an error.",
        "No, forever does not start on every boot up.",
        "-1. I am sorry, but this does not answer the question - despite being part of the picture.  If you explain how to get forever to run this at boot, then I will change to a +1",
        "to run the script through forever on reboot crontab can be used:\n`$ crontab -u user -e `\nand add \n`@reboot /usr/lib/node_modules/forever/bin/forever start /user/script.js`",
        "For some reason my server was not working properly when I used an on-boot chkconfig service. When I started the server on boot with crontab and forever, though, it worked as expected.",
        "@guido My forever is in a different place ./.nvm/versions/node/v6.11.5/bin/forever",
        "Happy to.. http://nodejs.org/",
        "You should have just tested.",
        "whenever you learn a new language, the first thing you should read are the operators. read the reference before posting",
        "If `x == 0` then you might as well just have `-y` instead of `x-y`",
        "`scp` is indeed superior, but not all `sftp` servers support `scp` connections, so `sftp` itself is sometimes required.",
        "At the moment I'm in a C++ code base with sftp support but not scp support, and so this doesn't work for me either. scp is not always the answer.",
        "you can do it! look up  modulo",
        "Very basic question that smells like homework.",
        "but anyway, the idea was to do this without converting to a string",
        "oh.. why -1? can explain?",
        "@Jack - You need to understand how to accomplish it.. someone else doing it won't help. I really suggest P&P - paper pencil",
        "Have you tried it?",
        "Did you forget to have *coffee* today?",
        "`<`, `>`, `>=`, and `<=` only apply to primitive types.",
        "@Jeffrey:  `String.compareTo()` and `String.compareToIgnoreCase()` returns an int (which is primitive).  So technically you're right...",
        "Haha! Interesting question. The < operator hasn't been overloaded for `String`s, so this wouldn't work in Java at all.",
        "I did, and it didn't work. I know there is the compareTo() method but I am also confused on how that works. I am a true newbie sorry:(",
        "You could have asked this question in more general terms, for exsample \"How to compare strings in java?\".",
        "Please provide what you have tried so far.",
        "Well i was looking at Salt hash in visual studio, but im curious to see if any one has a better way of going about this?",
        "you can take that account number as a string and you can use String.Replace method...",
        "the input is numbers so 12345678 but an account number",
        "Plenty of answers there ;-) Here is mine, based on regex and negative lookahead :        var reg = new System.Text.RegularExpressions.Regex(@\"\\d(?!$)\");\n       var maskedNumber = reg.Replace(NumberFieldDescriptor, \"#\");",
        "@ScottAtkinson: Ask another question for your requirement to use an input control which masks the text in a given pattern(like a password-field).",
        "It's not clear what you are asking! Is number 5 missing from your hash intentionally?",
        "What did you attempt and what were your results?",
        "\"the hash should be 1->2->3->4->6\". What does that even mean?",
        "Hint: What's the result of `y & 1`? When will the `if` be satisfied?",
        "`!` is an unary operator, so-called **not**. Do googling about C operators unary/bitwise ones",
        "Sorry, but this is not correct. Primitive data types always have a value which is not null.",
        "The default is `false`, and whether it's local or not has absolutely nothing to do with anything.  https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",
        "http://blueimp.github.io/jQuery-File-Upload/",
        "http://net.tutsplus.com/tutorials/javascript-ajax/uploading-files-with-ajax/",
        "possible duplicate of [upload file using ajax,jquery,php](http://stackoverflow.com/questions/17768533/upload-file-using-ajax-jquery-php)",
        "yea: www.google.com",
        "do some research before Posting Quest. here",
        "@Ashish what u want to say",
        "refer this: http://www.tcpdf.org/examples.php",
        "What help do you want? And ***what have you tried***?",
        "Hi @Rafi Kamal. I want to design layout ?",
        "This presumes the selector was an ID, not a jQuery selector as required. Best delete this answer as it is misleading. -1 & voting to delete",
        "So what have you tried?",
        "And you want we create your code?",
        "http://stackoverflow.com/q/1083701/1548523",
        "how to add Tony Million's version of Reachability.h and Reachability.m to the project?",
        "No effort shown + No database mentioned",
        "you could have easily got the answer by a simple google search - check this  http://www.w3schools.com/sql/sql_top.asp",
        "*\"Questions asking for code must demonstrate a minimal understanding of the problem being solved. Include attempted solutions, why they didn't work, and the expected results.\"*",
        "`equalsIgnoreCase`. Look it up in `String` Javadoc.",
        "@TruGamer equalsIgnoreCase :)",
        "did you try searching for \"java string equal case insensitive\"?",
        "Is that a question?",
        "Yes, September is early this year.",
        "All compilers have a built-in crystal ball which they use in situations like this.",
        "Need more specifics. Give some HTML that you're wanting to do this with. What do you mean by re-size?",
        "are you trying to disable resizing of the browser window? or of the 'page' (presumably HTML document with a single wrapper element)??",
        "I want the user not able to resize the window, I have set the size of it to 300*300 and don't want the user to be able to change it is size by maximize button or by dragging borders",
        "@AmiraElsayedIsmail you can put some road-blocks to stop the user from doing things, but in the end the client can really do whatever they want (e.g. disable JavaScript, or use a user-script, etc)",
        "300x300 is quite small. Is this some kind of a popup-window?",
        "Please review java syntax. What do you think `.replace(String \"*\" ...` does?",
        "`filename.replace(\"*\", wildcard)`.",
        "Moreover `s/Sring/String/`.",
        "Also, `java.util.Scanner` doesn't have a `scannextLine()` method.",
        "Lucky I'm not a compiler..",
        "@MarounMaroun Being a java compiler, you couldn't even `SIGSEGV`!",
        "-1 type inference isn't magical, you still need to have some idea of return type is",
        "You don't need to write the type down, but if you can't figure it out on your own that just means you don't actually know what your program does.",
        "This code does not do any validation",
        "Please make your problem more specific. Example if you failed installing a package, what is the error message, what steps have you tried, etc.",
        "I have to Build a project in scala for image processing , I don't know how to start.",
        "That's the answer I gave 3 hours ago, when you asked.",
        "You should probably accept Dan's answer. He answered correctly and gave some explanation regarding your problem and his answer.",
        "Changes in HTML5: Although previous versions of HTML defined the hr element only in presentational terms, the element has now been given the specific semantic purpose of representing a \u201cparagraph-level thematic break\u201d. see http://dev.w3.org/html5/markup/hr.html",
        "Still shouldn't be used at it looks horrible and devs maintaining your markup in the future will think it's okay to reuse if you've used it - and they may not style out its inherent ugliness. In practice, it's to be avoided.",
        "Personally I'd avoid the thickness as it looks chunky....",
        "Not deprecated and this is a horrible idea.",
        "Why are you using public key encryption, and why are you using sn.exe to generate your keys? What is security threat are you trying to protect against?",
        "possible duplicate of [How to import an .snk file generated with sn.exe in .NET?](http://stackoverflow.com/questions/3095355/how-to-import-an-snk-file-generated-with-sn-exe-in-net)",
        "Please create a reasonable title/subject.",
        "You're code is only going to run one time ... what are you intending to do?",
        "I'm so sorry, but I gave you an upvote just for the title.",
        "upvote means *\"This question shows research effort; it is useful and clear.\"* And at least 5 people on StackOverflow think this question meets that criteria.",
        "What's wrong with using the year itself as a unique ID?",
        "Not sure what you mean. Wouldn't the year number be a unique ID in itself? Can you clarify?",
        "i mean that there wont be any duplicates while year.",
        "That's not even close to unique. Why are you limiting it to a year anyway. Why not just have a unique id, and if you want to know what year it is store that as well.",
        "I tried to clarify your question based on your comment (that is now gone). Hope this helps stem off the down votes.",
        "read up on \"else\", the part of an \"if\" statement that gets executed if the condition is false.",
        "I know the problem is, there are certain conditions where both of the \"if\" statements can become true.. therefore I am having two if conditions doing there job at the same time... What do you think?",
        "Please post your code.",
        "@Matthew You may require to use `return` before going to next `if`.",
        "updated question thanks",
        "`else if` maybe?",
        "Not sure this should have been closed.  The guy is 'getting there.'",
        "Not sure why the question got closed :p",
        "@DrColossos Yepp thats the one: else if. thanks",
        "Nobody is saying that all objects should be on the stack, we're discussing why the default stack size is small.",
        "It's is not small!  Just how many function calls would you have to get through to use up 1MB of stack?  The defaults are anyway easily changed in the linker and so, we are left with 'why use stack instead of heap?'",
        "one function call.  `int main() { char buffer[1048576]; }`  It's a very common newbie problem.  Sure there's an easy workaround, but why should we have to workaround the stack size?",
        "Well, for one thing, I woudn't want the 12MB, (or indeed, 1MB), of stack requirement inflicted on the stack of every thread that calls the afflicted function.  That said, I have to agree that 1MB is a little stingy.  I would be happy with a default 100MB, after all, there's nothing stopping me turning it down to 128K in just the same way as there's nothing stopping other developers turning it up.",
        "Why wouldn't you want to inflict 12MB of stack on your thread?  The only reason for that is because stacks are small.  That's a recursive argument.",
        "Stacks are not small.  128K max size works just fine on my apps - that's getting towards small. 1MB is far too much for most apps but, well, only matters with apps that run ~2K threads.  I have never felt the slightest inkling to allocate even 100K of stack space for anything.  Anyway I answered the OP question - I know of no technical reason to limit stack space to 1MB.  It's not even a firm limit - it's per-app configurable.",
        "Google \"what is maven\" and click on the top link.",
        "*I want to know what maven is // I want you to show me* (Foreigner)",
        "This is your third question on a very similar theme, If you were to give a better explanation of what you are trying to do (eg why you want your data in an array, not a data.frame) then perhaps help would be more readily offered.",
        "All entries in an array must be the same type. But the last column of `iris` is a factor. Here are some (possibly useful) ideas to try: `as.matrix(iris)`, `as.matrix(iris[, -5])`, `data.matrix(iris)`.",
        "i want to know R better.",
        "You may want to explain you answer a bit more. It also doesn't seem to address the question, which is asking how to create an array of lists, not how to print anything out.",
        "what did you try?",
        "[What have your tried?](http://mattgemmell.com/2008/12/08/what-have-you-tried/)",
        "What are you even trying to do..? Could you explain, clearly, what HTML you've got, what the user interaction is, and what result you expect? Then we'll at least understand the question, which is a start.",
        "the overlay window is coming by default, by i want that window has to come when ever i clicked the input field. For that what i need to do?",
        "the page has one input field, when ever i clicked tha input field one overlay window has to come with another input field.",
        "try to learn jQuery the http://docs.jquery.com/Tutorials",
        "\"the overlay window is coming by default\" I guess right out of Nirvana\u2026",
        "You *really* need to show us your HTML and your JavaScript/jQuery (even if it's not working, show what you've tried). link us to a demo at [JS Fiddle](http://jsfiddle.net/), [JS Bin](http://jsbin.com/), or similar. Please: help *us* to help *you*.",
        "<html>\n<head>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"input\").click(function(){\n $(\"div\").show(\"<input type=\"text\" name=\"address\">\");\n    $(\"div\").css({\"background-color\":\"yellow\",\"font-size\":\"200%\",\"left\":\"200\", \"right\":\"200\", \"top\":\"200\" ,\"bottom\":\"200\"});\n  });\n});</script>\n</head>\n\n<body>\nby text: <input type=\"text\" name=\"by_text\" rel=\"div.overlay:eq(0)\" >\n<div>\n//what i need to do here?\n</div>\n</body>\n</html>",
        "is it works? is it the right way or not?",
        "`prototype` and `innerHTML` server completely different purposes in JavaScript. Read some tutorials on those topics.",
        "This is not an answerable question right now. Please provide more information and perhaps some source code of what you have tried.",
        "http://api.prototypejs.org/",
        "people suggest to use prototype instead of innerHTML... I'm very new to html, so please suggest..\nCan we replace prototype with innerHTML",
        "`$('fruits').update('<p>Kiwi, banana <em>and</em> apple.</p>');` from http://www.prototypejs.org/api/element/update",
        "possible duplicate of [Replace text inside a DIV element](http://stackoverflow.com/questions/121817/replace-text-inside-a-div-element)",
        "I think \".update\" method is the in-built method for jQuery.. but I'm using javascript. Is there any in-built method in js?",
        "You need to clarify `people suggest to use prototype instead of innerHTML`. Where did you read this? Show the link. As it is, I can only guess the \"people\" mean using prototype.js library..",
        "Is there any method in prototype.js library to update the text of an element?",
        "@Pooja yes, I just linked a duplicate question of that",
        "@ Esailija:  \"http://stackoverflow.com/questions/121817/replace-text-inside-a-div-element\"... this is the link where they say its not a good style to use innerHTML...",
        "You didn't know that link before you made your question and comment about \"people suggesting prototype\" so I think you're trolling",
        "@ Esailija: whoever has posted it in that link come under \"people\" category.. u asked me for the link and I posted it..",
        "There is no method named `makdir`. If you meant `mkdir`, how does this add anything to the existing answers?",
        "Do you limit it to only numeric or special character? You can use regular expressions",
        "Have you tried using google and fed it the words \"asp.net validate input string\"? Plenty of results on *my* internet.",
        "You have tried java script validation..!",
        "what is the length you need?",
        "Thank you for all of your suggestions",
        "ok Coder :) i accepted",
        "@ArunKumar don't accept a answer just to say thanks. I thought you needed a java script solution, but coder proposed a C# solution.",
        "@Matten k whether we can use c# code in code behind file?",
        "Did you enable all the warnings given by your compiler? Did you use a debugger to debug your program?",
        "That's a terrible suggestion. It doesn't matter to Google whether it's .htm or .html. On the contrary, changing all your links does hurt your SEO performance in addition to breaking all ingoing links, thus rendering your linkbuilding worthless.",
        "just wasted time if you do that",
        "False. For Google is the same if you use .htm, .html or .php !",
        "Your Google rank is not determined whether it's .htm or .html. For starters, write useful and good content or information, structured data, proper meta title, sitemap, a good domain name, etc. I agree with Nix",
        "No PHP, whatsoever.",
        "add a meta tag to your form ?",
        "Do you really just want to call the event handler, or do you want to reload the page? A bit more effort on the question will get you better answers (or, at this point, any answers at all). :-)",
        "This is possibly one of the open-ended questions which Stackoverflow isn't designed for - http://stackoverflow.com/faq#dontask",
        "Reminds me of [madeupstats](https://twitter.com/madeupstats)...",
        "Voting to close as non-constructive \u2192 soliciting debate, arguments",
        "This proves only that if you base statistics on flawed data gathering techniques, you get flawed statistics.  Also proves that many people can be easily deceived by flawed statistics.",
        "I think you've got a dangling `\"` in your first printf there.",
        "Sorry, that was a mistake. It still prints out one though.",
        "If I'm not wrong the second have to print 1 because is: 3 % 7 < 5 which is TRUE (and so 1) because 3 % 7 = 3 which is less than 5",
        "@AurelioDeRosa `%` has higher precedence than `+`, so it's `(3 % 4) + 3 < 5`.",
        "@AurelioDeRosa, `%` has a higher precedence than `+` so it's `((3 % 4) + 3) < 5`",
        "Yeah first prints 0. Its a basic comparison returning true/false. No weird results.",
        "@DanielFischer, I'm one pair of parentheses more precise lol",
        "@unkulunkulu and a comma :)",
        "@unkulunkulu Daniel you both have right :)",
        "So it just checks if true or false?",
        "First example prints `1`, second prints `0`, last prints `10`. All as it should be. You need to explain our question. It makes no sense in it current form.",
        "@shix: What's \"it\"? In C language expression like `5 > 3` evaluates to integer value `1`. This is what your first test prints.",
        "I'm asking why the first two print either 1 if true, and 0 if false. And why the third one prints out 10, instead of 1 or 0",
        "Oh. My. Gawd... I hope you don't get let lose on real programs",
        "At least `Timer` please!",
        "You do not have timer in Console, and it's answers the question on hand",
        "Of course you have Timer in console, you just need to reference the appropriate libraries. Thread sleeping sucks and you will drain your processor with while loops like this",
        "Infinite loop = bad, especially when Task Scheduler will complete the requirements.",
        "Just for your reference @010001100110000101110010011010. This answer shows exactly how to add a timer to a console app.  I don't understand why you've said that you can't. http://stackoverflow.com/questions/186084/how-do-you-add-a-timer-to-a-c-sharp-console-application",
        "Thank you for your comments",
        "@010001100110000101110010011010 - Delete the answer to recover 12 reputation.",
        "please read http://stackoverflow.com/help/dont-ask",
        "Sorry but, were not here to debug your code for you.",
        "this isn't a forum, http://meta.stackexchange.com/questions/92107/is-stack-overflow-a-forum/92110#92110",
        "if you could give a specific error message, stack trace, etc then we would be able to help you more. General \"here's my code, what's wrong?\" questions aren't received well.  So run your code through the debugger and see what blows up :)",
        "The problem is program freezing hence no error message I think.... I suggest you to check the `while (true)` part first. PS: shall we just focus on the questions not the rules......",
        "@TIM: on the debugger it's just fine, then only after that I posted here.. I had no clue what was causing it. I will check the while loop",
        "@Bolu: Thanks for that but it's not the while loop I'm not able to trace it.",
        "As stated elsewhere, `while (true)` is pretty horrible, but it's especially bad news on the windows message loop thread, which probably explains why your Console App appeared to work. Your Windows application cannot continue to process UI events, as you've tied up the message loop forever.",
        "Are you sure your listener is receiving anything?  Or is it just sitting and waiting?  `packet = listener.Receive(ref groupEP);`",
        "Okay then how would you do the sockets thing without a while loop in a windows form",
        "@TIM: it works with command line, but on the winform the complete app freezes so I'm not able to verify this.",
        "Razor does not encourage combining code with markup any more than any other view engine. If you're under that impression, you're probably misinformed. The core concept in ASP.NET MVC is that if you want to extend the view with code-based logic, you write an HtmlHelper extension in a separate class file.",
        "Every sample I've seen of it incorporates code into the view - big no-no. Should never have been allowed. This is such a contentious issue that we are sure to get some lively debate ;-)",
        "@IrishCieftain I have very good knowledge of MVVM Silverlight and WPF.  When switching to web I assumed MVC was the closest correlation.  If you don't suggest MVC ASP.NET MVC or Razor what do you suggest?",
        "I suggest ASP.NET MVC with the regular parser.",
        "Very bad suggestion, especially when your entire impression of Razor is based on every \"sample I've seen\", rather than personal experience.",
        "So you recommend insertion of code snippets in markup? Honest question because I do not have personal experience.",
        "@Chris was your comment to me or to IrishCieftain?  I'm only now just going through the samples.  I haven't made up my mind I'm just wondering if this code base is dead in two years or where it is going.",
        "My comment was @IrishChieftain. Razor does not endorse code in the view any more than Spark or the original ASP view engine does. In fact, Razor is an attempt to clean up the view markup. IrishChieftan's malice toward Razor is unfounded, as is his endorsement of the original ASP engine.",
        "Just because it doesn't endorse it doesn't mean lots of people aren't doing it... take one look at the online samples these days. I suggest we address our opinions to the original OP since you can't come up with a solid reason to use it in the first place. Microsoft brought out Razor for a specific reason and it wasn't to clean up the markup.",
        "@IrishChieftan hasn't the same always been said of CSS and JavaScript though? Best practices abound about separating markup from everything else, it's up to the coder to follow them. You can't blame the tool for the coder's bad decisions.",
        "@jonschlinkert you have a point but would I still want to use it for the sake of saving a few key strokes, or am I missing something?",
        "@IrishChieftan Your argument that every Razor sample you've seen incorporates code into the view is erroneous. If you see business logic in a View, that's the fault of the developer, not the View Engine. All tools can be abused. When Razor is used correctly, the resultant code is far quicker to write, and vastly more readable in comparison to the equivalent `<% .. %>` blocks. Having used both extensively, I can report there is no reason for using the original ASP view engine any more - it's inferior, period.",
        "It's an open invitation for young Devs to do it wrong and the payoff it provides just don't justify it for me. A case of to each his own? :)",
        "-1. \"A fool with a tool is still a fool.\" Equating bad implementation decisions by developers to the usefulness of a development technology doesn't make any sense.",
        "Razor is a stupid decision by MS and brings us back 20 years in Web development. Fell free to downvote me.",
        "What's with all the - votes? What's wrong with this question?",
        "@m sona: Nowhere in your ajax call do you actually specify any data to send to the php script. http://api.jquery.com/jQuery.ajax/",
        "i need \nurl: 'search.php?user= + user',\n\nin java script but not working",
        "Why are u not using http://www.domain.com/index.php?user=Roni instead of http://www.domain.com/index.php?user=\"Roni\"",
        "So, like a property of the `Form`?",
        "http://stackoverflow.com/questions/1433182/passing-variables-from-main-form-to-input-form?rq=1",
        "The recommended way to set whitespace around drawables is to set padding.",
        "What have you tried...what is the code that generates the page.  Your question shows no effort on your part that you've attempted to solve this yourself.",
        "google.com > SO 90% of the time",
        "Please be more specific on what you are trying to do and the platform (iOS developed with XCode or some \"HTML5 To iPhone\" platform, like PhoneGap).",
        "This isn't being displayed on a mobile browser just an application this application matter of fact. http://cydia.saurik.com",
        "fortunately you can't",
        "There is _never_ a reason to decrypt other users passwods! Additional the phrase \"My project requires list of __all users with their password__\" should make you _very_ skeptical",
        "Wait, what? You want me to help you steal a bunch of usernames and passwords!?",
        "http://stackoverflow.com/questions/3126255/how-to-output-md5-hashed-password-in-plain-text\n\nRelated question...",
        "kingCrunch and DOK,thanks for supporting user's privacy. But this project is not a social networking or any public website. In this project admin himself is registering users. So there might be chances of loosing user's password. So admin needs some download option where he can get all the user with their password.",
        "D6 passwords are md5 and D7 are SHA with hash FYI. \nNo matter Drupal or whatever, hashes cannot be decrypted unless you use some web service to get the matches using their web service. \n\nAnd \"Decryption\" doesn't make sense for md5. Tell \"Unhash\" instead.",
        "possible duplicate of [Is it possible to decrypt md5 hashes?](http://stackoverflow.com/questions/1240852/is-it-possible-to-decrypt-md5-hashes)",
        "This isn't a place to have your script written for you. Search for perl `open` on how to open and read your file. You'll probably need some regexes to figure out what's a heading and what's a variable.",
        "see http://stackoverflow.com/questions/2014862/how-can-i-access-ini-files-from-perl, would tell you how to read the **configuration files**.",
        "I think you need to read up on some PHP basics. I think you understand the basic idea, you just need to figure out when to use what function for what purpose.",
        "Why on earth are you doing three different queries to get data from your `members` table?!  You're selecting a field you already have in the first query, some (not necessarily related) user's encrypted password in the next query, and then you're selecting *every single userid* in your members table.",
        "You should do 1 query to check all posted values, ditch this code and start again..",
        "@Crontab I'm new in php, thanks for your advise..",
        "`if(empty($uname) && empty($pass))` should be `if(empty($uname) || empty($pass))` Otherwise the statement gives TRUE when you leave one empty",
        "@user1295995: It's not really just a PHP thing, it's a \"working with relational databases\" thing, and sort of a basic logic thing, too.  Write out what you want your code to do, verify that it makes sense and you're not adding a bunch of extra steps, THEN write the actual code.",
        "any code or script........!",
        "what did you try?",
        "Are you using the jQuery Ajax function to get your XML?",
        "How is this parallel at all? That's totally sequential. I don't know why OP accepted this as an answer.",
        "I don't see any question, neither any description of what you've tried so far. Voting to close the question as not a real question.",
        "SO is not your blog. What does it mean to \"learn jquery BEFORE javascript\"? That makes no sense.",
        "Non sequitur.  Thanks.",
        "People always seem to forget that JavaScript !== the DOM...",
        "*\"I think jquery is far more than just a javascript library...\"* No, it's just a library.",
        "If these get function are from the same database I would suggest doing the joining using Linq2SQL or entity framework rather than in memory.",
        "We ain't doing your homework for you. Show us your code, explain what problem you're encountering and then we can help you.",
        "why it is **2012-04-06T22:06:19** instead of **2012-04-06 22:06:19** ?",
        "because of time portion if i dont use -(dash) it is not true",
        "Why are you using dynamic SQL?",
        "Can you please do a PRINT @sql and see what does that give you?",
        "because of so many tables. i have a another  field TableName that is input parameter",
        "i have edited my procedure , please see my procedure a gain",
        "What is the trailing `and` for? Where do you use `@SearchString`?",
        "i dont have any problem with SearchString. SearchString is a parameter that use after converting datetime.my problem is converting",
        "this it how it works in uiviewcontroller NOT UIView...",
        "This answer doesn't absolutely reflect the point of question... the asker wants no view controller.",
        "correct answer is here  http://stackoverflow.com/a/4502761/2757496",
        "I have considered Singletons, however, I've read that DI is the way forward.",
        "DI is a good solution however, but IMO it has much more better realization in Java (i.e. [Automatically injected dependency](http://en.wikipedia.org/wiki/Dependency_injection#Automatically_injected_dependency)), not in PHP itself",
        "-1 for the use of 'globals'.",
        "@RepWhoringPeeHaa Explain your opinion.",
        "@Botanick I believe I already did. Globals are bad and what you have in your code are fancy globals. I suggest you watch the videos in teresko's answer.",
        "Thanks for your answer. BTW. You might wanna check this out: http://w3fools.com/",
        "The window has its own standard. Please see my answer for a link.",
        "Just in case anyone reading this answer in the future thinks it is correct.. it is not. MattMcDonald's answer is *leaps and bounds* better than this. Also ***NEVER*** listen to w3schools. They do not know what they are talking about and will misguide you.",
        "I've set Matt McDonald's answer as the accepted answer. Thank you!",
        "Ouch - I should have spent more time on my answer.",
        "There are C# to VB.NET converters on the internet that can give you a big head start on a lot of this stuff...",
        "OK, so you've told us the query and that you need help.  Neither of those things are questions. **What's the question?** What part are you having trouble with?",
        "The biggest problem is the line with the select...",
        "Does the original c# code work as expected? Because otherwise it would not be a conversion problem at all.",
        "Welcome to SO. What have you tried? Please show you nonworking code and specify what is the current output and what is your desired output.",
        "Have you considered hiring and paying a programmer?",
        "@jeremycrews - Don't be so rude as to ignore comments and suggestions from people who are trying to help you help yourself.",
        "C# absolutely has the ability to rename files.",
        "I am speechless",
        "\"Fix this program\" is definitely not a nice way of describing your problem. You need to correctly pinpoint and describe your problem to get good responses",
        "What's the expected outcome (or output) and what's the actual? In other words, what's your problem?",
        "Sure!! It's changed!",
        "Output: Consumed item: 1\nConsumed item: 4\nConsumed item: 7\nConsumed item: 10\nConsumed item: 11\nConsumed item: 14",
        "and should be :Consumed item: 1 Consumed item: 2 Consumed item: 3 Consumed item: 4 Consumed item: 5 Consumed item: 6",
        "Why do you expect the o/p in that order? The threads are allowed to run in any order as they get scheduled, You are not providing any synchronization which makes them follow the order you desire.",
        "@PavanManjunath We've fixed the question instead.",
        "Please note you are recommended not to use the mysql_ functions any more. Please use mysqli_ or PDO instead, and use prepares statements as this will help you with your db escaping/SQL injection protection.",
        "IMHO Thats strange to have operator+, which returns list&. Semantically its like operator+=, which should modify its lhs. It's better to change the name, or to have list operator+, which constructs new object.",
        "[Sample code](http://sscce.org/) should be complete and concise\u2013enough to recreate the issue but no more. The posted sample has too much extraneous code.",
        "if you cannot understand the question,you can see the difference between the images. if you cannot know luncher,you cannot know the question.",
        "@userSeven7s Google Translate formats English in Human-Readable format. The grammar spacing is generally correct, and it capitalises recognised nouns and the first word in a sentence. The OP may have used it to aid in his translations, but he certainly didn't post it's raw output.",
        "This is a terrible question. You need to discuss what you are doing and what you are trying to achieve before you post a bunch of code that only says \"i had class ratetime.\"",
        "Appropriate, rebuking response by a user named \"YourMother\" ;)",
        "Woah, I haven't seen a destructor used since my days of c++ ~...()",
        "From http://stackoverflow.com/questions/how-to-ask, \n\n\"Do your homework\n\nHave you thoroughly searched for an answer before asking your question? Sharing your research helps everyone. Tell us what you found and why it didn\u2019t meet your needs. This demonstrates that you\u2019ve taken the time to try to help yourself, it saves us from reiterating obvious answers, and most of all it helps you get a more specific and relevant answer!\nBe specific\n\nIf you ask a vague question, you\u2019ll get a vague answer. But if you give us details and context, we can provide a useful answer.\"",
        "Is it throwing an error?",
        "whats in `$dadosboleto` and `$tmp2`?",
        "Need more information, what are the values of your variables? Have you turned on error_reporting? What error if any is being displayed?? Repeating the title of the question in the actual question itself, does not help to answer ANY of these items.",
        "We need more information. Seriously, what do you expect us to do Gaia?",
        "Do you have [`short_open_tag`](http://www.php.net/manual/en/ini.core.php#ini.short-open-tag) set to 1?  Try replacing `<?` with `<?php`.",
        "@Rocket nailed it, thank you. If you submit an answer I will accept it.",
        "To all the people that are voting this question down: it turns out that there IS enough information here to solve the problem: see accepted answer.",
        "Thanks for undownvoting.",
        "Wait why is this posted again? You would just get the exact same answers but this will be closed before you can get them.",
        "I also recommend you to read the [Python tutorial](http://docs.python.org/tutorial/). How to access tuples and lists is basic knowledge.",
        "Regarding your edit: If this is what you wanted from the beginning, you should edit your original question and maybe flag it for reopen.",
        "Your \"new question\" is a duplicate of [Flattening a shallow list in Python](http://stackoverflow.com/questions/406121/flattening-a-shallow-list-in-python).",
        "@a1my: You could have modified your original question in order to specify what you wanted to ask exactly.",
        "That code is over-complicated. Look back at the initial requirements.",
        "You can't have 100 unique integers between 0 and 9",
        "And it was him, and there are answers on it...",
        "Why did you ask the same question twice? This one and http://stackoverflow.com/questions/10688044/filling-a-array-with-uniqe-random-numbers-between-0-9-in-c-sharp",
        "i'm sorry...i'm newbi and i think my question needed to be change and i changed it...",
        "Consider using `&&` instead of `and`. It's more common and has the precedence people expect. Besides that, consider writing clean code by not mixing HTML and PHP in the same file but using a template engine instead (could be even as simple as `include 'sometemplate.php'` while only using `<?=$var?>` in that file).",
        "This is completely wrong! It will cause git to ignore ALL your files",
        "@checklist Did you not read the question? Or is it that did you not understand my  point? He asked \"What files/folders can I safely ignore for inclusion with git?\", the answer to which IS ANY of them. How do you know he doesn't want to temporarily ignore everything while he works out his build problem?",
        "@JustinBuser that just seems like meaningless, pedantic semantic wrangling. I don't think the artificial context you have concocted has any bearing on the reported question. You appear to be wilfully misinterpreting the OP.",
        "Show us your code... maybe we can help you.\n\nWithout see your code we can't help you.",
        "Thank you Sena, I just added the code, please take a look if you got a chance!",
        "possible duplicate: http://stackoverflow.com/questions/2996806/can-one-form-have-multiple-actions",
        "You need to format your code in a manner that is human-readable.  One long string is not helpful.",
        "If you got an answer that does not work, unaccept that answer and talk to the people that are active in your question in order to get a working answer. Polluting the site with multiple identical questions is not the way to go.",
        "[See my updated answer to your original question](http://stackoverflow.com/a/11392150/219661)",
        "-1 for not taking care of your own question(no formatting, no explanation).",
        "The name 'gvMyDetails' does not exist in your code dump, either.  Where is the error occuring?  Post relevant code.",
        "Well, _does_ it exist?  It's not mentioned in _any_ of the code you've posted.",
        "Don't you want to read an Objective-C tutorial before writing an operating system in it?",
        "`[self moveOperand:_referenceDeck :hand];` As declared the method is somewhat confusing - moveFrom is a parameter , not a parameter name, so [self moveOperand:_referenceDeck moveFrom:hand]; is wrong",
        "I'm confused, you say you're following the code in that question, but none of that code appears in your question. And how are we supposed to help with a big complicated function that we don't have the code for?",
        "This has too much superfluous information in it.",
        "-1 for lazy code dump",
        "Your content must have a ListView whose id attribute is 'android.R.id.list'",
        "Show your code. It's almost impossible to help if there's no context for these errors.",
        "What are the issues you are having? Please describe the problems more precisely.",
        "I think I described it pretty well in the comments... nothing is returned back when I do     \"memcpy(&structReturn.cLastName, cTempL, strlen(cTempL));\" for     \"char *cTempF = (argv[0] ? argv[0] : \"NULL\");\" but is returned for     \"char cTempF[] = \"dog\";\"",
        "What do you mean with \"nothing is returned\"? Are you saying `memcpy` doesn't copy the memory contents from `cTempF` to `structReturn.cFirstName`?",
        "It is as if the thread is halted... but no errors appear.  But as I said if I do \"char cTempF[] = \"dog\";\" .... it works fine.  So it appears to then be something in \"char *cTempF = (argv[0] ? argv[0] : \"NULL\");\"... but I can print cTempF.",
        "Sorry, it's still entirely unclear a) what happens, b) what you expect to happen. Also, the definition of `myReturn` may be helpful.",
        "What is `//this \"short int\" block will return if I comment the above 2 blocks` supposed to mean? There's no `return` near that, so does it segfault, or what?",
        "broke it down a bit more",
        "Please, describe _in plain text_, using entire sentences, what you expect to happen, and what happens instead.",
        "Hint: If you fix your indentation, it will be clear what the error is.",
        "It's due to sloppy coding pure and simple. Take care when you code, line up your braces, watch your spelling, compile often and fix all complilation errors before adding new code. That will prevent these types of errors from happening.",
        "On top of all the other problems, why don't you just replace the body of TwoThirdPower with `return Math.cbrt(A*A);`?",
        "Tbh, that is not a good example of multithreading. It only shows the technical side, not how to use it properly. Multithreading is not instant win, it won't magically accelerate your application.",
        "Please post your code, not a link to the template you followed.",
        "how many cores does your machine have?",
        "How about posting the code you have rather than the tutorial?",
        "Without looking at your code, I cant be sure, but based on the code in the blog, the threads are sleeping for up to 5 seconds each. This is also impacted by the size of your thread pool. Show us your code for more.",
        "Please explain how this answers the question",
        "tag this [tag:objective-c] instead of [tag:c#]",
        "Any textbook or tutorial website should be able to do this.",
        "https://www.google.com/search?q=objective+c+switch+statement",
        "http://www.techotopia.com/index.php/The_Objective-C_switch_Statement",
        "To closers: sure the question might be boderline, but its not really asking for code. Switch statements do confuse some due to the model being computed goto and not multiway selection. But hey I'm biased as a I wrote an answer before the close vote was up ;-)",
        "@CRD: So if someone comes along \"Can someone explain programming\" would you also jump in?",
        "@vikingosegundo - Of course not, but its about balance, and flexibility. This is a small issue which does confuse due to the two models different programming languages use. As I say, its borderline, but maybe this time we should err on helping the OP here (and others who find this Q in the future) rather than sending them elsewhere.",
        "@CRD: it is not even clear, what it meant. it could be `switch \u2026 case`. but also it could be `UISwitch`. Or maybe switching some threads?",
        "@vikingosegundo - I think `UISwitch` is more of a stretch than `switch`, and someone has added the `switch-statement` tag. Sometimes we can afford to be generous and give the benefit of the doubt. Well, I've said my bit, your call folks.",
        "Op is talking of switches. Not switch statement or switch case. Even in a switch statement there is no plural of switch. This is a bad and ambiguous question. You can be as generous as you want. I will close such question as I assume that even a SO newbie can post better question and it is his duty. OP can come back and increase the quality. But because people per-maturely answer, quality will not be increased and finally the question will get deleted as poor question. Is that generosity?",
        "sorry for the dumb question",
        "Modify how?  What have you tried so far?  Anything?",
        "What is a drop box? If you mean a select box, it would have taken you less time to Google the answer than it did to post your question.",
        "In order to get more help you will need to give more context. Show us some markup and styling because without we have nothing to go off of.",
        "i mean list box please help",
        "Sorry, it's not clear what you need. Try to add more details",
        "Possible duplicate of: http://stackoverflow.com/questions/1895476/how-to-style-a-select-dropdown-with-css-only-without-javascript"
    ],
    "CommentLabel": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1
    ],
    "FirstIterCommentsLabel": [
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 0,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 0,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 0,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 0
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        },
        {
            "All": 1,
            "CNN": 1,
            "FastText": 1,
            "LSTM": 1
        }
    ],
    "Score": [
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -6,
        -5,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -11,
        -11,
        -11,
        -11,
        -11,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -7,
        -9,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -12,
        -12,
        -12,
        -12,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -12,
        -12,
        -12,
        -12,
        -5,
        -5,
        -5,
        -7,
        -7,
        -12,
        -12,
        -12,
        -10,
        -10,
        -10,
        -10,
        -10,
        -7,
        -10,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -13,
        -13,
        -13,
        -13,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -6,
        -8,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -13,
        -13,
        -13,
        -13,
        -11,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -6,
        -6,
        -12,
        -12,
        -12,
        -12,
        -12,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -13,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -5,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -5,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -8,
        -8,
        -8,
        -5,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -6,
        -6,
        -5,
        -5,
        -12,
        -12,
        -12,
        -12,
        -12,
        -12,
        -12,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -8,
        -8,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -8,
        -9,
        -9,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -9,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -8,
        -7,
        -7,
        -7,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -11,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -10,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -6,
        -6,
        -5,
        -5,
        -5,
        -12,
        -12,
        -12,
        -7,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -6,
        -5,
        -5,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -6,
        -6,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -7,
        -7,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -6,
        -5,
        -6,
        -5,
        -5,
        -5,
        -6,
        -5,
        -5,
        -7,
        -7,
        -7,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -7,
        -7,
        -9,
        -9,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -7,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -6,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -9,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -10,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -14,
        -14,
        -14,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -7,
        -6,
        -5,
        -5,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -3,
        -3,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -17,
        -17,
        -17,
        -17,
        -17,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -5,
        -5,
        -5,
        -5,
        -5,
        -21,
        -21,
        -21,
        -21,
        -21,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -11,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -28,
        -28,
        -28,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -17,
        -17,
        -17,
        -17,
        -17,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -6,
        -6,
        -17,
        -17,
        -17,
        -17,
        -17,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -19,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -12,
        -12,
        -12,
        -12,
        -12,
        -12,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -11,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -17,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -5,
        -5,
        -17,
        -17,
        -17,
        -17,
        -17,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -12,
        -12,
        -12,
        -12,
        -12,
        -12,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -21,
        -21,
        -21,
        -21,
        -21,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -20,
        -20,
        -20,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -24,
        -24,
        -24,
        -24,
        -24,
        -24,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -70,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -23,
        -9,
        -9,
        -9,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -7,
        -7,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -10,
        -5,
        -5,
        -5,
        -5,
        -9,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -7,
        -5,
        -5,
        -5,
        -5,
        -12,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -12,
        -12,
        -12,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -11,
        -11,
        -11,
        -11,
        -10,
        -10,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -29,
        -6,
        -11,
        -5,
        -11,
        -11,
        -6,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -5,
        -10,
        -9,
        -9,
        -9,
        -7,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -9,
        -9,
        -9,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -12,
        -12,
        -12,
        -12,
        -12,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -21,
        -21,
        -21,
        -21,
        -21,
        -21,
        -5,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -13,
        -13,
        -7,
        -7,
        -7,
        -26,
        -26,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -6,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -5,
        -11,
        -11,
        -11,
        -11,
        -7,
        -6,
        -6,
        -6,
        -6,
        -5,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -8,
        -10,
        -10,
        -10,
        -10,
        -10,
        -7,
        -7,
        -7,
        -7,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -19,
        -19,
        -19,
        -6,
        -6,
        -21,
        -21,
        -21,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -12,
        -12,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -23,
        -10,
        -10,
        -10,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -7,
        -7,
        -18,
        -18,
        -18,
        -18,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -8,
        -8,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -19,
        -19,
        -19,
        -10,
        -10,
        -10,
        -10,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -5,
        -9,
        -9,
        -9,
        -18,
        -18,
        -18,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -11,
        -11,
        -11,
        -5,
        -5,
        -5,
        -5,
        -13,
        -13,
        -13,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -12,
        -12,
        -12,
        -12,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -5,
        -5,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -19,
        -19,
        -19,
        -5,
        -5,
        -26,
        -26,
        -26,
        -26,
        -26,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -23,
        -23,
        -23,
        -23,
        -5,
        -5,
        -5,
        -7,
        -7,
        -6,
        -5,
        -5,
        -7,
        -7,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -19,
        -19,
        -19,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -19,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -8,
        -8,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -10,
        -10,
        -10,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -20,
        -20,
        -20,
        -20,
        -20,
        -20,
        -8,
        -8,
        -22,
        -9,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -23,
        -23,
        -23,
        -23,
        -23,
        -20,
        -20,
        -20,
        -20,
        -20,
        -24,
        -24,
        -24,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -28,
        -28,
        -28,
        -28,
        -28,
        -28,
        -7,
        -7,
        -7,
        -16,
        -16,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -6,
        -6,
        -6,
        -6,
        -19,
        -19,
        -19,
        -19,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -5,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -26,
        -25,
        -25,
        -25,
        -25,
        -25,
        -25,
        -25,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -5,
        -5,
        -5,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -5,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -5,
        -5,
        -5,
        -5,
        -5,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -8,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -13,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -6,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -10,
        -6,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -7,
        -7,
        -14,
        -14,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -7,
        -7,
        -7,
        -7,
        -11,
        -11,
        -7,
        -7,
        -6,
        -6,
        -10,
        -6,
        -6,
        -6,
        -6,
        -11,
        -10,
        -10,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -11,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -14,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -8,
        -8,
        -8,
        -10,
        -10,
        -10,
        -10,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -10,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -12,
        -12,
        -12,
        -12,
        -12,
        -12,
        -12,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -10,
        -10,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -8,
        -8,
        -8,
        -10,
        -10,
        -10,
        -10,
        -10,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -17,
        -17,
        -17,
        -17,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -35,
        -35,
        -35,
        -35,
        -35,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -18,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -26,
        -26,
        -26,
        -26,
        -26,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -6,
        -8,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -9,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -16,
        -16,
        -16,
        -16,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -11,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -9,
        -9,
        -9,
        -9,
        -8,
        -8,
        -24,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -24,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -11,
        -11,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -8,
        -6,
        -7,
        -7,
        -8,
        -8,
        -7,
        -7,
        -7,
        -6,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -28,
        -28,
        -28,
        -9,
        -9,
        -9,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -8,
        -8,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -7,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -7,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6,
        -6
    ]
}